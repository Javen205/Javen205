<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[直连微信硬件回调]]></title>
      <url>http://javen205.oschina.io/2999/07/31/%E7%9B%B4%E8%BF%9E%E5%BE%AE%E4%BF%A1%E7%A1%AC%E4%BB%B6%E5%9B%9E%E8%B0%83/</url>
      <content type="html"><![CDATA[<h3 id="智能设备"><a href="#智能设备" class="headerlink" title="智能设备"></a>智能设备</h3><p>智能设备—–灯控<br>控制开关，调节亮度。</p>
<font color="red"><br>开源项目源码：<a href="https://git.oschina.net/javen205/jfinal-weixin.git" target="_blank" rel="external">https://git.oschina.net/javen205/jfinal-weixin.git</a><br><br>谁有做蓝牙硬件设备并准备与微信公众号对接可以一起交流<br><br></font>

<p>回调模式返回的json如下</p>
<a id="more"></a> 
<p>直连设备回调   <strong>灯控</strong> </p>
<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><font color="red">注意：测试发现在Wifi直连微信硬件回调中，无能设置的是加密模式还是明文模式回调返回的json都是明文。所以目前只支持明文模式</font>

<ol>
<li><p>clone 项目<br> 如有不会的伙伴参考：<a href="https://javen205.github.io/2016/07/31/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8Git/" target="_blank" rel="external">从零开始使用Git</a></p>
</li>
<li><p>修改配置文件</p>
<p> <code>src/main/resources/a_little_config.txt</code> 中的 <code>token</code> <code>appId</code>  <code>appSecret</code> 或者复制一份命名为<code>a_little_config_pro.txt</code> 将其修改</p>
<p> 如下图<br><img src="/images/public/weixindevice/设备4.png" alt=""><br><img src="/images/public/weixindevice/设备3.png" alt=""></p>
</li>
<li><p>设置回调的URL</p>
<p>回调的URL为 <code>http://域名/msg</code> ;<code>Token</code> 与您修改的配置保持一致；<code>消息加解密方式</code> 设置为 <code>明文模式</code>；配置文件中将 <code>encryptMessage</code> 设置为 <code>false</code> 或者注释掉</p>
</li>
</ol>
<font color="red">如果任何疑问请留言</font>

<p>   博客评论区留言亦或者在开源项目<code>Issue</code>中提出</p>
<p>openId:ofkJSuGtXgB8n23e-y0kqDjJLXxk</p>
<h3 id="扫码绑定"><a href="#扫码绑定" class="headerlink" title="扫码绑定"></a>扫码绑定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76663912,</div><div class="line">    &quot;msg_type&quot;: &quot;bind&quot;,</div><div class="line">    &quot;create_time&quot;: 1469896072,</div><div class="line">    &quot;open_id&quot;: &quot;ofkJSuL6kYUoIbknjbRY0EISgGEY&quot;,</div><div class="line">    &quot;session_id&quot;: 0,</div><div class="line">    &quot;content&quot;: &quot;&quot;,</div><div class="line">    &quot;qrcode_suffix_data&quot;: &quot;&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="设备上操作-开启"><a href="#设备上操作-开启" class="headerlink" title="设备上操作  开启"></a>设备上操作  开启</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76661379,</div><div class="line">    &quot;msg_type&quot;: &quot;notify&quot;,</div><div class="line">    &quot;services&quot;: &#123;</div><div class="line">        &quot;operation_status&quot;: &#123;</div><div class="line">            &quot;status&quot;: 0</div><div class="line">        &#125;,</div><div class="line">        &quot;power_switch&quot;: &#123;</div><div class="line">            &quot;on_off&quot;: true</div><div class="line">        &#125;,</div><div class="line">        &quot;lightbulb&quot;: &#123;</div><div class="line">            &quot;alpha&quot;: 19</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;create_time&quot;: 1469891527</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="设备上操作-关闭"><a href="#设备上操作-关闭" class="headerlink" title="设备上操作  关闭"></a>设备上操作  关闭</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76661314,</div><div class="line">    &quot;msg_type&quot;: &quot;notify&quot;,</div><div class="line">    &quot;services&quot;: &#123;</div><div class="line">        &quot;operation_status&quot;: &#123;</div><div class="line">            &quot;status&quot;: 1</div><div class="line">        &#125;,</div><div class="line">        &quot;power_switch&quot;: &#123;</div><div class="line">            &quot;on_off&quot;: true</div><div class="line">        &#125;,</div><div class="line">        &quot;lightbulb&quot;: &#123;</div><div class="line">            &quot;alpha&quot;: 19</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;create_time&quot;: 1469891412</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="面板控制-关闭"><a href="#面板控制-关闭" class="headerlink" title="面板控制 关闭"></a>面板控制 关闭</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;asy_error_code&quot;: 0,</div><div class="line">    &quot;asy_error_msg&quot;: &quot;ok&quot;,</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76656877,</div><div class="line">    &quot;msg_type&quot;: &quot;set_resp&quot;,</div><div class="line">    &quot;services&quot;: &#123;</div><div class="line">        &quot;operation_status&quot;: &#123;</div><div class="line">            &quot;status&quot;: 1</div><div class="line">        &#125;,</div><div class="line">        &quot;power_switch&quot;: &#123;</div><div class="line">            &quot;on_off&quot;: true</div><div class="line">        &#125;,</div><div class="line">        &quot;lightbulb&quot;: &#123;</div><div class="line">            &quot;alpha&quot;: 38</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;create_time&quot;: 1469886772</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="面板控制-开启"><a href="#面板控制-开启" class="headerlink" title="面板控制  开启"></a>面板控制  开启</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;asy_error_code&quot;: 0,</div><div class="line">    &quot;asy_error_msg&quot;: &quot;ok&quot;,</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76656853,</div><div class="line">    &quot;msg_type&quot;: &quot;set_resp&quot;,</div><div class="line">    &quot;services&quot;: &#123;</div><div class="line">        &quot;operation_status&quot;: &#123;</div><div class="line">            &quot;status&quot;: 0</div><div class="line">        &#125;,</div><div class="line">        &quot;power_switch&quot;: &#123;</div><div class="line">            &quot;on_off&quot;: true</div><div class="line">        &#125;,</div><div class="line">        &quot;lightbulb&quot;: &#123;</div><div class="line">            &quot;alpha&quot;: 38</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;create_time&quot;: 1469886730</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/weixindevice/设备1.png" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/images/public/weixindevice/设备2.png" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/images/public/weixindevice/IMG_1389.png" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/images/public/weixindevice/IMG_1388.png" alt=""></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[志强英语]]></title>
      <url>http://javen205.oschina.io/2999/07/17/%E5%BF%97%E5%BC%BA%E8%8B%B1%E8%AF%AD/</url>
      <content type="html"><![CDATA[<h3 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h3><ol>
<li>志强课程-微官网</li>
</ol>
<ul>
<li>热线电话</li>
<li>QQ在线咨询</li>
<li>订单查询</li>
<li>微社区</li>
<li>意见反馈</li>
<li>直播课程列表</li>
</ul>
<ol>
<li><p>课程介绍</p>
</li>
<li><p>课程购买</p>
<blockquote>
<p>微信支付</p>
</blockquote>
</li>
</ol>
<a id="more"></a> 
<ol>
<li>课程直播 <blockquote>
<p>接入第三方实时直播平台</p>
</blockquote>
</li>
</ol>
<p><a href="http://zqenglish.gensee.com/training/site/r/72441864" target="_blank" rel="external">直播测试地址72441864</a><br><a href="http://zqenglish.gensee.com/training/site/r/10481782" target="_blank" rel="external">直播测试地址10481782</a></p>
<ol>
<li>英语测评 <blockquote>
<p>6套题，每套题50题。测评时随机分配一套题并打乱顺序进行答题</p>
</blockquote>
</li>
</ol>
<h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/ZQEnglish/IMG_1347.png" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1348.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1349.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1350.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1352.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1353.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1354.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1346.png" alt=""></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[视频报警终端]]></title>
      <url>http://javen205.oschina.io/2999/07/17/%E8%A7%86%E9%A2%91%E6%8A%A5%E8%AD%A6%E7%BB%88%E7%AB%AF/</url>
      <content type="html"><![CDATA[<h3 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h3><ol>
<li>设备绑定</li>
</ol>
<ul>
<li>手动输入UID（设备号）绑定</li>
<li>扫码绑定</li>
<li>验证设备号</li>
<li>绑定限制（一个设备只支持3个openId绑定（包括分享））</li>
</ul>
<ol>
<li>绑定设备列表</li>
</ol>
<ul>
<li>设备管理员支持分享设备给好友绑定</li>
<li>管理员接收分享绑定通知，确定此好友是否绑定</li>
<li>分享管理</li>
<li>解除绑定</li>
<li>设置报警时间</li>
</ul>
<a id="more"></a> 
<p>3、通知</p>
<ul>
<li>绑定通知</li>
<li>解绑通知</li>
<li>设备报警通知</li>
<li>分享确定通知</li>
</ul>
<blockquote>
<p>报警图片视频存放在FTP服务器；当点击之报警通知之后下载资源并显示在终端</p>
</blockquote>
<h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/SPBJD/IMG_1356.png" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1357.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1358.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1359.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1360.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1361.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1362.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1363.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1364.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1365.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1366.png" alt=""></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号]]></title>
      <url>http://javen205.oschina.io/2999/07/17/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/</url>
      <content type="html"><![CDATA[<h3 id="项目开源地址"><a href="#项目开源地址" class="headerlink" title="项目开源地址"></a>项目开源地址</h3><p><a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">weixin_guide</a> </p>
<p><a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">http://git.oschina.net/javen205/weixin_guide</a></p>
<a id="more"></a> 
<h3 id="版本更新记录"><a href="#版本更新记录" class="headerlink" title="版本更新记录"></a>版本更新记录</h3><p><code>注意</code> 最新版本的会进行<code>bug</code>修复以及功能点的添加，建议大家尽量升级到最新版本，另外发现<code>bug</code>请及时反馈，谢谢！</p>
<h1 id="2016-7-6"><a href="#2016-7-6" class="headerlink" title="2016/7/6"></a>2016/7/6</h1><ul>
<li>异步单文件多文件上传  <code>@半曲恋江南</code></li>
</ul>
<h1 id="2016-5-30"><a href="#2016-5-30" class="headerlink" title="2016/5/30"></a>2016/5/30</h1><ul>
<li>自定义菜单的封装</li>
</ul>
<blockquote>
<p>详细的封装见：<code>com.javen.weixin.menu</code></p>
</blockquote>
<h1 id="2016-5-28"><a href="#2016-5-28" class="headerlink" title="2016/5/28"></a>2016/5/28</h1><ul>
<li>添加发送红包的接口以及Demo </li>
</ul>
<blockquote>
<p>API<code>com.javen.utils.ReadPackUtils.java</code><br>Demo<code>com.javen.weixin.controller.RedPackApiController.java</code></p>
</blockquote>
<h1 id="2016-5-24"><a href="#2016-5-24" class="headerlink" title="2016/5/24"></a>2016/5/24</h1><ul>
<li>添加人脸识别功能</li>
</ul>
<h1 id="2016-5-22"><a href="#2016-5-22" class="headerlink" title="2016/5/22"></a>2016/5/22</h1><ul>
<li>添加获取微信用户信息并导入到excel下载到本地</li>
</ul>
<h1 id="2016-5-19"><a href="#2016-5-19" class="headerlink" title="2016/5/19"></a>2016/5/19</h1><ul>
<li>修复数据创建表默认值异常的问题</li>
</ul>
<h1 id="weixin-guide-1-0-Change-log"><a href="#weixin-guide-1-0-Change-log" class="headerlink" title="weixin_guide 1.0 Change log"></a>weixin_guide 1.0 Change log</h1><ul>
<li>会员注册、找回密码、登陆（邮箱与手机验证码）</li>
<li>JSSDK封装（ShareInterceptor拦截器）</li>
<li>微信支付完整的Demo</li>
<li>分享朋友圈添加积分功能</li>
<li>授权获取用户信息</li>
<li>判断用户是否关注，如没有跳转到关注页面</li>
<li>在线翻译</li>
<li>星座查询</li>
<li>常用微信事件的封装</li>
<li>Ajax请求封装</li>
<li>添加定制器<a href="https://git.oschina.net/javen205/jfinal-scheduler.git" target="_blank" rel="external">SchedulerPlugin</a></li>
</ul>
<h3 id="目录结构说明"><a href="#目录结构说明" class="headerlink" title="目录结构说明"></a>目录结构说明</h3><p>注意：由于此项目是正式上线的项目，此次开源只是我抽离出来了核心代码。可能缺少那几个JSP</p>
<p>项目介绍详细介绍如下</p>
<ul>
<li>/msg             微信所有消息的入口（成为开发者<a href="http://域名【/项目名】/msg）" target="_blank" rel="external">http://域名【/项目名】/msg）</a></li>
<li>/toOauth         授权跳转指定页面 （如果没有关注就跳转到专注页面）  </li>
<li>/register        会员注册页面  </li>
<li>/forget          会员找回密码页面  </li>
<li>/idea            意见反馈页面  </li>
<li>/translate       在线翻译    </li>
<li>/constellation/  星座查询</li>
<li>/share  /share/customer分享以及微信支付页面参考</li>
<li>/pay             微信支付</li>
<li>/ajax            ajax控制器 </li>
<li>项目中定时调度使用的是<a href="https://git.oschina.net/javen205/jfinal-scheduler.git" target="_blank" rel="external">jfinal-scheduler</a></li>
</ul>
<h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/weixin_guide/8.pic.jpg" alt="登录"></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/9.pic.jpg" alt="注册"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/10.pic.jpg" alt="注册"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/11.pic.jpg" alt="找回密码"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/12.pic.jpg" alt="JSSDK签名"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/13.pic.jpg" alt="微信支付"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/14.pic.jpg" alt="JSSDK分享"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/15.pic.jpg" alt="意见反馈"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/18.pic.jpg" alt="百度翻译"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/19.pic.jpg" alt="百度翻译结果"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/20.pic.jpg" alt="星座查询首页"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/21.pic.jpg" alt="星座查询结果"></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发四（手机屏幕）]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%9B%9B(%E6%89%8B%E6%9C%BA%E5%B1%8F%E5%B9%95)/</url>
      <content type="html"><![CDATA[<ul>
<li>获取屏幕宽高</li>
<li>手机横竖屏的判断</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">public class ScreenUtils &#123;</div><div class="line"></div><div class="line">    public static int getWidth(Context context) &#123;</div><div class="line">        WindowManager manager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);</div><div class="line">        DisplayMetrics outMetrics = new DisplayMetrics();</div><div class="line">        manager.getDefaultDisplay().getMetrics(outMetrics);</div><div class="line"></div><div class="line">        return outMetrics.widthPixels;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static int getHeight(Context context) &#123;</div><div class="line">        WindowManager manager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);</div><div class="line">        DisplayMetrics outMetrics = new DisplayMetrics();</div><div class="line">        manager.getDefaultDisplay().getMetrics(outMetrics);</div><div class="line"></div><div class="line">        return outMetrics.heightPixels;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">public class ConfigUtils &#123;</div><div class="line"></div><div class="line">    public static boolean isOrientationPortrait(Context context) &#123;</div><div class="line">        if (context.getResources().getConfiguration().orientation ==</div><div class="line">                Configuration.ORIENTATION_PORTRAIT) &#123;</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static boolean isOrientationLandscape(Context context) &#123;</div><div class="line">        if (context.getResources().getConfiguration().orientation ==</div><div class="line">                Configuration.ORIENTATION_LANDSCAPE) &#123;</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发三（SD卡缓存目录）]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B8%89(SD%E5%8D%A1%E7%BC%93%E5%AD%98%E7%9B%AE%E5%BD%95)/</url>
      <content type="html"><![CDATA[<ul>
<li>读取某个文件夹中的所有Apk文件路径并打开安装页面</li>
<li>读取某文件夹下的所有apk文件</li>
<li>获取SD卡跟目录中的某个文件</li>
<li>弹出安装界面</li>
<li>卸载apk</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * </div><div class="line"> * @author Javen</div><div class="line"> *</div><div class="line"> */</div><div class="line">public class SDKUtil &#123;</div><div class="line">	private final static String TAG=SDKUtil.class.getSimpleName();</div><div class="line">	</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 读取某个文件夹中的所有Apk文件路径并打开安装页面</div><div class="line">	 * @param context</div><div class="line">	 * @param path</div><div class="line">	 */</div><div class="line">	 public static void readApkAndStart(Context context,String path)&#123;</div><div class="line">	    	List&lt;String&gt; listpath = readAllApkForPath(context, path);</div><div class="line">	    	if (listpath!=null &amp;&amp; listpath.size()&gt;0) &#123;</div><div class="line">	    		for (String string : listpath) &#123;</div><div class="line">	        		SDKUtil.openInstallView(context, string);</div><div class="line">	    		&#125;</div><div class="line">			&#125;else &#123;</div><div class="line">				L.e(&quot;xxxx-----&quot;, &quot;readApkAndStart null。。。。。。。&quot;);</div><div class="line">			&#125;</div><div class="line">	 &#125;</div><div class="line">	 /**</div><div class="line">     * 读取某文件夹下的所有apk文件</div><div class="line">     * @param context</div><div class="line">     * @param path</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static List&lt;String&gt; readAllApkForPath(Context context,String path)&#123;</div><div class="line">    	List&lt;String&gt; fileNameList=new ArrayList&lt;String&gt;();</div><div class="line">    	File dir;</div><div class="line">    	if (Parameter.isDebug) &#123;</div><div class="line">    		 dir = getSDir(context, path);</div><div class="line">		&#125;else &#123;</div><div class="line">			 dir = getDiskCacheDir(context, path);</div><div class="line">		&#125;</div><div class="line">    	</div><div class="line">    	if (dir.isDirectory()) &#123;</div><div class="line">			File[] files = dir.listFiles();</div><div class="line">			for (File file : files) &#123;</div><div class="line">				String filePath = file.getAbsolutePath();</div><div class="line">				if (filePath.endsWith(&quot;.apk&quot;)) &#123;</div><div class="line">					fileNameList.add(filePath);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			return fileNameList;</div><div class="line">		&#125;</div><div class="line">		return null;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 获取SD卡跟目录中的某个文件</div><div class="line">     * @param context</div><div class="line">     * @param uniqueName</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static File getSDir(Context context, String uniqueName) &#123;</div><div class="line">        boolean externalStorageAvailable = Environment</div><div class="line">                .getExternalStorageState().equals(Environment.MEDIA_MOUNTED);</div><div class="line">        String path = null;</div><div class="line">        if (externalStorageAvailable) &#123;</div><div class="line">        	path=Environment.getExternalStorageDirectory().getAbsolutePath();</div><div class="line">        &#125;</div><div class="line">        return new File(path + File.separator + uniqueName);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 获取缓存地址</div><div class="line">     * @param context</div><div class="line">     * @param uniqueName</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static File getDiskCacheDir(Context context, String uniqueName) &#123;</div><div class="line">        boolean externalStorageAvailable = Environment</div><div class="line">                .getExternalStorageState().equals(Environment.MEDIA_MOUNTED);</div><div class="line">        String cachePath;</div><div class="line">        if (externalStorageAvailable) &#123;</div><div class="line">            cachePath = context.getExternalCacheDir().getPath();</div><div class="line">           </div><div class="line">        &#125; else &#123;</div><div class="line">            cachePath = context.getCacheDir().getPath();</div><div class="line">        &#125;</div><div class="line">        L.i(TAG, cachePath);</div><div class="line">        return new File(cachePath + File.separator + uniqueName);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 弹出安装界面</div><div class="line">     * @param context </div><div class="line">     * @param pathString apk 路径</div><div class="line">     */</div><div class="line">    public static void openInstallView(Context context,String pathString)&#123;</div><div class="line">    	//启动安装界面</div><div class="line">//		Intent install = new Intent(Intent.ACTION_VIEW);</div><div class="line">//		install.setDataAndType(Uri.fromFile(new File(pathString)),</div><div class="line">//				&quot;application/vnd.android.package-archive&quot;);</div><div class="line">//		install.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">//		context.startActivity(install);</div><div class="line">    	ApkController.install(pathString, context);</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * 卸载apk</div><div class="line">     * @param context</div><div class="line">     * @param packageName</div><div class="line">     */</div><div class="line">    public static void uninstallApk(Context context, String packageName) &#123;  </div><div class="line">        Uri uri = Uri.parse(&quot;package:&quot; + packageName);  </div><div class="line">        Intent intent = new Intent(Intent.ACTION_DELETE, uri);  </div><div class="line">        context.startActivity(intent);  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发二（调节屏幕的亮度）]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%BA%8C(%E8%B0%83%E8%8A%82%E5%B1%8F%E5%B9%95%E4%BA%AE%E5%BA%A6)/</url>
      <content type="html"><![CDATA[<p>屏幕亮度调节</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">//设置应用中的亮度 不保存</div><div class="line">    public void Brightness(View view)&#123;</div><div class="line">        boolean autoBrightness = BrightnessTools.isAutoBrightness(getContentResolver());</div><div class="line">        if (autoBrightness) &#123;</div><div class="line">            T.showLong(this, &quot;关闭自动调节亮度&quot;);</div><div class="line">            BrightnessTools.stopAutoBrightness(this);</div><div class="line">        &#125;</div><div class="line">        BrightnessTools.setBrightness(this, 255);</div><div class="line">        T.showLong(this, &quot;亮度已经设置为了最大&quot;);</div><div class="line">    &#125;</div><div class="line">    //获取当前亮度 并设置最大的亮度保存</div><div class="line">    public void saveBrightness(View view)&#123;</div><div class="line">        int screenBrightness = BrightnessTools.getScreenBrightness(this);</div><div class="line">        T.showLong(this, &quot;当前屏幕亮度为：&quot;+screenBrightness);</div><div class="line">        BrightnessTools.saveBrightness(getContentResolver(), 255);</div><div class="line">    &#125;</div><div class="line">    //开启关闭自动调节亮度</div><div class="line">    public void offAuto(View view)&#123;</div><div class="line">        boolean autoBrightness = BrightnessTools.isAutoBrightness(getContentResolver());</div><div class="line">        if (autoBrightness) &#123;</div><div class="line">            T.showLong(this, &quot;关闭自动调节亮度&quot;);</div><div class="line">            BrightnessTools.stopAutoBrightness(this);</div><div class="line">        &#125;else &#123;</div><div class="line">            T.showLong(this, &quot;开启自动调节亮度&quot;);</div><div class="line">            BrightnessTools.startAutoBrightness(this);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line">import android.app.Activity;</div><div class="line">import android.content.ContentResolver;</div><div class="line">import android.net.Uri;</div><div class="line">import android.provider.Settings;</div><div class="line">import android.provider.Settings.SettingNotFoundException;</div><div class="line">import android.util.Log;</div><div class="line">import android.view.WindowManager;</div><div class="line"></div><div class="line">/* Android的屏幕亮度好像在2.1+的时候提供了自动调节的功能，  </div><div class="line"> * 所以，如果当开启自动调节功能的时候， 我们进行调节好像是没有一点作用的，  </div><div class="line"> * 这点让我很是无语，结果只有进行判断，看是否开启了屏幕亮度的自动调节功能。  </div><div class="line"> */</div><div class="line">public class BrightnessTools &#123;</div><div class="line"></div><div class="line">    /** * 判断是否开启了自动亮度调节 */</div><div class="line"></div><div class="line">    public static boolean isAutoBrightness(ContentResolver aContentResolver) &#123;</div><div class="line">        boolean automicBrightness = false;</div><div class="line">        try &#123;</div><div class="line">            automicBrightness = Settings.System.getInt(aContentResolver,</div><div class="line">            Settings.System.SCREEN_BRIGHTNESS_MODE) == Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC;</div><div class="line">        &#125;catch (SettingNotFoundException e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return automicBrightness;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取屏幕的亮度</div><div class="line">     * @param activity</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static int getScreenBrightness(Activity activity) &#123;</div><div class="line">        int nowBrightnessValue = 0;</div><div class="line">        ContentResolver resolver = activity.getContentResolver();</div><div class="line">        try &#123;</div><div class="line">            nowBrightnessValue = android.provider.Settings.System.getInt(</div><div class="line">                    resolver, Settings.System.SCREEN_BRIGHTNESS);</div><div class="line">        &#125;catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return nowBrightnessValue;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 设置亮度</div><div class="line">     * @param activity</div><div class="line">     * @param brightness</div><div class="line">     */</div><div class="line">    public static void setBrightness(Activity activity, int brightness) &#123;</div><div class="line">        // Settings.System.putInt(activity.getContentResolver(),</div><div class="line"></div><div class="line">        // Settings.System.SCREEN_BRIGHTNESS_MODE,</div><div class="line"></div><div class="line">        // Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);</div><div class="line"></div><div class="line">        WindowManager.LayoutParams lp = activity.getWindow().getAttributes();</div><div class="line"></div><div class="line">        lp.screenBrightness = Float.valueOf(brightness) * (1f / 255f);</div><div class="line">        Log.d(&quot;lxy&quot;, &quot;set  lp.screenBrightness == &quot; + lp.screenBrightness);</div><div class="line"></div><div class="line">        activity.getWindow().setAttributes(lp);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 那么，能设置了，但是为什么还是会出现，设置了，没反映呢？</div><div class="line"></div><div class="line">    // 嘿嘿，那是因为，开启了自动调节功能了，那如何关闭呢？这才是最重要的：</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 停止自动亮度调节</div><div class="line">     * @param activity</div><div class="line">     */</div><div class="line">    public static void stopAutoBrightness(Activity activity) &#123;</div><div class="line"></div><div class="line">        Settings.System.putInt(activity.getContentResolver(),</div><div class="line"></div><div class="line">        Settings.System.SCREEN_BRIGHTNESS_MODE,</div><div class="line"></div><div class="line">        Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * 开启亮度自动调节 </div><div class="line">     * @param activity</div><div class="line">     */</div><div class="line">    public static void startAutoBrightness(Activity activity) &#123;</div><div class="line"></div><div class="line">        Settings.System.putInt(activity.getContentResolver(),</div><div class="line"></div><div class="line">        Settings.System.SCREEN_BRIGHTNESS_MODE,</div><div class="line"></div><div class="line">        Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 至此，应该说操作亮度的差不多都有了，结束！</div><div class="line">    // 哎，本来认为是应该结束了，但是悲剧得是，既然像刚才那样设置的话，只能在当前的activity中有作用，一段退出的时候，会发现毫无作用，悲剧，原来是忘记了保存了。汗！</div><div class="line">    /**</div><div class="line">     * 保存亮度设置状态</div><div class="line">     * @param resolver</div><div class="line">     * @param brightness</div><div class="line">     */</div><div class="line">    public static void saveBrightness(ContentResolver resolver, int brightness) &#123;</div><div class="line">        Uri uri = android.provider.Settings.System</div><div class="line">                .getUriFor(&quot;screen_brightness&quot;);</div><div class="line"></div><div class="line">        android.provider.Settings.System.putInt(resolver, &quot;screen_brightness&quot;,</div><div class="line">                brightness);</div><div class="line">        // resolver.registerContentObserver(uri, true, myContentObserver);</div><div class="line">        resolver.notifyChange(uri, null);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Retrofit2+Rxjava+MVP实践]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Retrofit2+Rxjava+MVP%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<p>此博文根据前面两篇文章 <code>Android MVP 架构初试</code> <code>Android MVP 架构封装</code>  再结合主流框架<code>Retrofit2+Rxjava</code>来个实践</p>
<h3 id="源码地址RxMVP"><a href="#源码地址RxMVP" class="headerlink" title="源码地址RxMVP"></a><a href="https://github.com/Javen205/RxMVP" target="_blank" rel="external">源码地址RxMVP</a></h3><h3 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h3><p><img src="/images/public/MVP/MVP3.jpeg" alt=""></p>
<a id="more"></a> 
<h3 id="Retrofit2-Rxjava-封装"><a href="#Retrofit2-Rxjava-封装" class="headerlink" title="Retrofit2+Rxjava 封装"></a>Retrofit2+Rxjava 封装</h3><p>JuHeService 数据请求接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 请求示例：</div><div class="line"> * http://v.juhe.cn/dream/query</div><div class="line"> * q:梦境关键字，如：黄金 需要utf8 urlencode</div><div class="line"> * cid:指定分类，默认全部</div><div class="line"> * full: 是否显示详细信息，1:是 0:否，默认0</div><div class="line"> */</div><div class="line">public interface JuHeService &#123;</div><div class="line">    @GET(&quot;dream/query&quot;)</div><div class="line">    Observable&lt;HttpJuHeResult&lt;List&lt;JuHeDream&gt;&gt;&gt; getDreams(@QueryMap Map&lt;String, Object&gt; options);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>HttpJuHeMethods 聚合解梦封装的方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">public class HttpJuHeMethods &#123;</div><div class="line"></div><div class="line">    public static final String BASE_URL = &quot;http://v.juhe.cn/&quot;;</div><div class="line"></div><div class="line">    private static final int DEFAULT_TIMEOUT = 5;</div><div class="line"></div><div class="line">    private Retrofit retrofit;</div><div class="line"></div><div class="line">    private JuHeService juheService;</div><div class="line"></div><div class="line">    //构造方法私有</div><div class="line">    private HttpJuHeMethods() &#123;</div><div class="line">        //手动创建一个OkHttpClient并设置超时时间</div><div class="line">        OkHttpClient.Builder httpClientBuilder = new OkHttpClient.Builder();</div><div class="line">        httpClientBuilder.connectTimeout(DEFAULT_TIMEOUT, TimeUnit.SECONDS);</div><div class="line">        httpClientBuilder.addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY)).build();</div><div class="line"></div><div class="line">        retrofit = new Retrofit.Builder()</div><div class="line">                .client(httpClientBuilder.build())</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .baseUrl(BASE_URL)</div><div class="line">                .build();</div><div class="line"></div><div class="line">        juheService = retrofit.create(JuHeService.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //在访问HttpMethods时创建单例</div><div class="line">    private static class SingletonHolder&#123;</div><div class="line">        private static final HttpJuHeMethods INSTANCE = new HttpJuHeMethods();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //获取单例</div><div class="line">    public static HttpJuHeMethods getInstance()&#123;</div><div class="line">        return SingletonHolder.INSTANCE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用来统一处理Http的resultCode,并将HttpResult的Data部分剥离出来返回给subscriber</div><div class="line">     *</div><div class="line">     * @param &lt;T&gt; Subscriber真正需要的数据类型，也就是Data部分的数据类型</div><div class="line">     */</div><div class="line">    private class HttpResultFunc&lt;T&gt; implements Func1&lt;HttpJuHeResult&lt;T&gt;, T&gt; &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public T call(HttpJuHeResult&lt;T&gt; httpResult) &#123;</div><div class="line">            if (httpResult.getError_code() != 0) &#123;</div><div class="line">                throw new ApiException(httpResult.getError_code());</div><div class="line">            &#125;</div><div class="line">            return httpResult.getResult();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private &lt;T&gt; void toSubscribe(Observable&lt;T&gt; observable, Subscriber&lt;T&gt; subscriber)&#123;</div><div class="line">        observable.subscribeOn(Schedulers.io())</div><div class="line">                .unsubscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(subscriber);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用于获取聚合笑话的数据</div><div class="line">     * @param subscriber 由调用者传过来的观察者对象</div><div class="line">     * @param options 访问参数</div><div class="line">     */</div><div class="line">    public void getJokesByHttpResultMap(Subscriber&lt;List&lt;JuHeDream&gt;&gt; subscriber, Map&lt;String, Object&gt; options)&#123;</div><div class="line">//        juheService.getJokesByRxJavaHttpResult(options)</div><div class="line">//                .map(new HttpResultFunc&lt;JuHeDream&gt;())</div><div class="line">//                .subscribeOn(Schedulers.io())</div><div class="line">//                .unsubscribeOn(Schedulers.io())</div><div class="line">//                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">//                .subscribe(subscriber);</div><div class="line">        Observable&lt;List&lt;JuHeDream&gt;&gt; observable = juheService.getDreams(options)</div><div class="line">                .map(new HttpResultFunc&lt;List&lt;JuHeDream&gt;&gt;());</div><div class="line">        toSubscribe(observable,subscriber);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中包含异常的处理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">public class ApiException extends RuntimeException&#123;</div><div class="line">    public final static  int  TIME_MUST_10=209501;</div><div class="line">    public final static  int  TIME_OTHER=209502;</div><div class="line"></div><div class="line">    public ApiException(int resultCode) &#123;</div><div class="line">        this(getApiExceptionMessage(resultCode));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ApiException(String detailMessage) &#123;</div><div class="line">        super(detailMessage);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 由于服务器传递过来的错误信息直接给用户看的话，用户未必能够理解</div><div class="line">     * 需要根据错误码对错误信息进行一个转换，在显示给用户</div><div class="line">     * @param code</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    private static String getApiExceptionMessage(int code)&#123;</div><div class="line">        String message = &quot;&quot;;</div><div class="line">        switch (code) &#123;</div><div class="line">            case TIME_MUST_10:</div><div class="line">                message = &quot;必须为10位时间戳&quot;;</div><div class="line">                break;</div><div class="line">            case TIME_OTHER:</div><div class="line">                message = &quot;page、pagesize必须为int类型,time为10位时间戳&quot;;</div><div class="line">                break;</div><div class="line">            default:</div><div class="line">                message = &quot;未知错误&quot;;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        return message;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="BaseMvp封装"><a href="#BaseMvp封装" class="headerlink" title="BaseMvp封装"></a>BaseMvp封装</h3><p>请参考上篇文章 <code>Android MVP 架构封装</code></p>
<h3 id="Retrofit2-Rxjava-MVP实践"><a href="#Retrofit2-Rxjava-MVP实践" class="headerlink" title="Retrofit2+Rxjava+MVP实践"></a>Retrofit2+Rxjava+MVP实践</h3><p>MvpView </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">public interface MvpView extends BaseView &#123;</div><div class="line">     //ListView的初始化</div><div class="line">     void setListItem(List&lt;JuHeDream&gt; data);</div><div class="line">     //Toast 消息</div><div class="line">     void showMessage(String messgae);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MvpPresenter</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">public class MvpPresenter extends BasePresenter&lt;MvpView&gt; &#123;</div><div class="line">    private Context mContext;</div><div class="line">    private Subscriber subscriber;</div><div class="line">    private List&lt;JuHeDream&gt; mDatas;</div><div class="line"></div><div class="line">    public MvpPresenter(Context context) &#123;</div><div class="line">        this.mContext = context;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //获取数据</div><div class="line">    public void getData(String q) throws UnsupportedEncodingException &#123;</div><div class="line">        if (q.isEmpty()) &#123;</div><div class="line">            mView.showMessage(&quot;请输入解梦内容&quot;);</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        mView.showLoading();</div><div class="line">        getDream(q);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onItemClick(int position) &#123;</div><div class="line"></div><div class="line">        List&lt;String&gt; stringList = mDatas.get(position).getList();</div><div class="line"></div><div class="line">        StringBuffer sbf = new StringBuffer();</div><div class="line">        for (String s : stringList) &#123;</div><div class="line">            sbf.append(s).append(&quot;\n\n\n&quot;);</div><div class="line">        &#125;</div><div class="line">        new SweetAlertDialog(mContext)</div><div class="line">                .setTitleText(mDatas.get(position).getTitle())</div><div class="line">                .setContentText(sbf.toString())</div><div class="line">                .show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void getDream(String q) throws UnsupportedEncodingException &#123;</div><div class="line">        String content = URLDecoder.decode(q, &quot;utf-8&quot;);</div><div class="line">        Map&lt;String, Object&gt; options = new HashMap&lt;String, Object&gt;();</div><div class="line">        options.put(&quot;key&quot;, &quot;f86ed9f21931cd311deffada92b58ac7&quot;);</div><div class="line">        options.put(&quot;full&quot;, &quot;1&quot;);</div><div class="line">        options.put(&quot;q&quot;, content);</div><div class="line"></div><div class="line">        subscriber = new Subscriber&lt;List&lt;JuHeDream&gt;&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onCompleted() &#123;</div><div class="line">                mView.hideLoading();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                mView.hideLoading();</div><div class="line">                mView.showMessage(e.toString());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(List&lt;JuHeDream&gt; data) &#123;</div><div class="line">                for (JuHeDream  juheDream:data) &#123;</div><div class="line">                    Logger.e(juheDream.toString());</div><div class="line">                &#125;</div><div class="line">                mDatas = data;</div><div class="line">                mView.setListItem(mDatas);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        HttpJuHeMethods.getInstance().getJokesByHttpResultMap(subscriber,options);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void destory()&#123;</div><div class="line">        subscriber.unsubscribe();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>布局文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:orientation=&quot;vertical&quot;</div><div class="line">    tools:context=&quot;.view.MainActivity&quot;&gt;</div><div class="line"></div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=&quot;920px&quot;</div><div class="line">        android:layout_height=&quot;130px&quot;</div><div class="line">        android:layout_gravity=&quot;center_horizontal&quot;</div><div class="line">        android:layout_marginTop=&quot;20px&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot; &gt;</div><div class="line"></div><div class="line">        &lt;LinearLayout</div><div class="line">            android:layout_width=&quot;680px&quot;</div><div class="line">            android:layout_height=&quot;130px&quot;</div><div class="line">            android:background=&quot;@drawable/shape_query_normal_stroke&quot;</div><div class="line">            android:orientation=&quot;horizontal&quot; &gt;</div><div class="line"></div><div class="line">            &lt;ImageView</div><div class="line">                android:layout_width=&quot;57px&quot;</div><div class="line">                android:layout_height=&quot;70px&quot;</div><div class="line">                android:layout_gravity=&quot;center_vertical&quot;</div><div class="line">                android:layout_marginLeft=&quot;40px&quot;</div><div class="line">                android:src=&quot;@drawable/login_yanzhengma&quot;</div><div class="line">                android:text=&quot;设置密码&quot; /&gt;</div><div class="line"></div><div class="line">            &lt;View</div><div class="line">                android:layout_width=&quot;0.5px&quot;</div><div class="line">                android:layout_height=&quot;match_parent&quot;</div><div class="line">                android:layout_marginLeft=&quot;40px&quot;</div><div class="line">                android:background=&quot;@color/line&quot; /&gt;</div><div class="line"></div><div class="line">            &lt;EditText</div><div class="line">                android:id=&quot;@+id/id_dream_query&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;match_parent&quot;</div><div class="line">                android:layout_gravity=&quot;center_vertical&quot;</div><div class="line">                android:layout_marginLeft=&quot;13px&quot;</div><div class="line">                android:background=&quot;@null&quot;</div><div class="line">                android:hint=&quot;请输入解梦的内容&quot;</div><div class="line">                android:singleLine=&quot;true&quot;</div><div class="line">                android:textColor=&quot;@color/textcolor&quot;</div><div class="line">                android:textSize=&quot;40px&quot; /&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">        &lt;View</div><div class="line">            android:layout_width=&quot;20px&quot;</div><div class="line">            android:layout_height=&quot;match_parent&quot; /&gt;</div><div class="line"></div><div class="line">        &lt;Button</div><div class="line">            android:id=&quot;@+id/id_dream_btn&quot;</div><div class="line">            android:layout_width=&quot;0dp&quot;</div><div class="line">            android:layout_weight=&quot;1&quot;</div><div class="line">            android:layout_height=&quot;match_parent&quot;</div><div class="line">            android:background=&quot;@drawable/query&quot;</div><div class="line">            android:clickable=&quot;true&quot;</div><div class="line">            android:gravity=&quot;center&quot;</div><div class="line">            android:text=&quot;查询&quot;</div><div class="line">            android:textColor=&quot;@android:color/white&quot;</div><div class="line">            android:textSize=&quot;40px&quot; /&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">    &lt;ListView</div><div class="line">        android:id=&quot;@+id/id_dream_result&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:layout_marginTop=&quot;20dp&quot;</div><div class="line">         /&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>
<p>MainActivity</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line">public class MainActivity extends BaseMvpActivity&lt;MvpView, MvpPresenter&gt; implements MvpView, AdapterView.OnItemClickListener &#123;</div><div class="line"></div><div class="line">    @BindView(R.id.id_dream_query)</div><div class="line">    EditText dreamQuery;</div><div class="line">    @BindView(R.id.id_dream_btn)</div><div class="line">    Button dreamBtn;</div><div class="line">    @BindView(R.id.id_dream_result)</div><div class="line">    ListView listView;</div><div class="line"></div><div class="line">    private Context mContext;</div><div class="line">    MyAdapter myAdapter;</div><div class="line"></div><div class="line">    SweetAlertDialog pd;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mContext = this;</div><div class="line">        ButterKnife.bind(this);</div><div class="line">        initEvent();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    private void initEvent() &#123;</div><div class="line">        listView.setOnItemClickListener(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @OnClick(R.id.id_dream_btn)</div><div class="line">    public void onClick() &#123;</div><div class="line">        try &#123;</div><div class="line">            String q = dreamQuery.getText().toString();</div><div class="line">            presenter.getData(q);</div><div class="line">        &#125; catch (UnsupportedEncodingException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public MvpPresenter initPresenter() &#123;</div><div class="line">        return new MvpPresenter(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void setListItem(List&lt;JuHeDream&gt; data) &#123;</div><div class="line">        if (myAdapter == null)&#123;</div><div class="line">            myAdapter = new MyAdapter(mContext, data);</div><div class="line">        &#125;</div><div class="line">        if (listView.getAdapter() == null)&#123;</div><div class="line">            listView.setAdapter(myAdapter);</div><div class="line">        &#125;</div><div class="line">        myAdapter.refresh(data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showMessage(String messgae) &#123;</div><div class="line">        Toast.makeText(mContext, messgae, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showLoading() &#123;</div><div class="line">        if (pd == null) &#123;</div><div class="line">            pd = new SweetAlertDialog(mContext, SweetAlertDialog.PROGRESS_TYPE);</div><div class="line">            pd.getProgressHelper().setBarColor(Color.parseColor(&quot;#A5DC86&quot;));</div><div class="line">            pd.setTitleText(&quot;Loading&quot;);</div><div class="line">            pd.setCancelable(true);</div><div class="line">        &#125;</div><div class="line">        pd.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void hideLoading() &#123;</div><div class="line">        pd.hide();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onItemClick(AdapterView&lt;?&gt; adapterView, View view, int position, long id) &#123;</div><div class="line">        presenter.onItemClick(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDestroy() &#123;</div><div class="line">        presenter.destory();</div><div class="line">        super.onDestroy();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android MVP 构架封装]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%20MVP%20%E6%9E%B6%E6%9E%84%E5%B0%81%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>上一篇我们简单实现了一个<code>MVP</code>的构架，下面我们来做一个简单的封装使其使用更简单方便</p>
<h3 id="源码地址RxMVP分支Tag03"><a href="#源码地址RxMVP分支Tag03" class="headerlink" title="源码地址RxMVP分支Tag03"></a><a href="https://github.com/Javen205/RxMVP/tree/Tag03" target="_blank" rel="external">源码地址RxMVP分支Tag03</a></h3><h3 id="最终实现目录结构如下"><a href="#最终实现目录结构如下" class="headerlink" title="最终实现目录结构如下"></a>最终实现目录结构如下</h3><p><img src="/images/public/MVP/MVP2.png" alt=""><br><a id="more"></a> </p>
<h3 id="BasePresenter"><a href="#BasePresenter" class="headerlink" title="BasePresenter"></a>BasePresenter</h3><p>如果每一个Activity都需要做绑定和解绑操作就太麻烦了，现在我希望可以有一个通用的presenter来为我们添加view的绑定与销毁。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public abstract class BasePresenter&lt;T&gt; &#123;</div><div class="line">    public T mView;</div><div class="line"></div><div class="line">    public void attach(T mView)&#123;</div><div class="line">        this.mView = mView;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void dettach()&#123;</div><div class="line">        mView = null;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因为不能限定死传入的View，所以使用泛型来代替传入的对象。通过这个通用的presenter我就可以把原来的<code>MvpPresenter</code>简化成下面的样子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">public class NewMvpPresenter extends BasePresenter&lt;NewMvpView&gt; &#123;</div><div class="line">        private RequestBiz requestBiz;</div><div class="line">        private Handler mHandler;</div><div class="line"></div><div class="line">        public NewMvpPresenter() &#123;        </div><div class="line">            requestBiz = new RequestBizIml();</div><div class="line">            mHandler = new Handler(Looper.getMainLooper());</div><div class="line">        &#125;    </div><div class="line"></div><div class="line">        public void onResume()&#123;        </div><div class="line">            requestBiz.requestForData(new OnRequestListener() &#123;</div><div class="line">                @Override            </div><div class="line">                public void onSuccess(final List&lt;String&gt; data) &#123;</div><div class="line">                    //由于请求开启了新线程，所以用handler去更新界面</div><div class="line">                    mHandler.post(new Runnable() &#123;                    </div><div class="line">                      @Override                    </div><div class="line">                       public void run() &#123;                        </div><div class="line">                           mView.hideLoading();                        </div><div class="line">                           mView.setListItem(data);                    </div><div class="line">                        &#125;                </div><div class="line">                    &#125;);            </div><div class="line">                 &#125;            </div><div class="line"></div><div class="line">                 @Override            </div><div class="line">                 public void onFailed() &#123;                </div><div class="line">                     mView.showMessage(&quot;请求失败&quot;);            </div><div class="line">                 &#125;        </div><div class="line">            &#125;);    </div><div class="line">       &#125;   </div><div class="line"></div><div class="line">        public void onItemClick(int position)&#123;        </div><div class="line">              mView.showMessage(&quot;点击了item&quot;+position);     </div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="BaseView"><a href="#BaseView" class="headerlink" title="BaseView"></a>BaseView</h3><p>界面需要提供的UI方法中会有很多类似的UI方法，可以把它们提取到一个公共的父类接口中。比如提取显示loading界面和隐藏loading界面的方法，其他的view层接口就可以直接继承BaseView接口，不必重复的写显示和隐藏loading界面方法。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface BaseView &#123;</div><div class="line">    void showLoading();</div><div class="line">    void hideLoading();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="BaseMvpActivity"><a href="#BaseMvpActivity" class="headerlink" title="BaseMvpActivity"></a>BaseMvpActivity</h3><p>presenter绑定到activity和View的绑定和解绑操作是每个Activity都会去做的，同样这里我也希望能有一个父类来完成这个统一的操作。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">public abstract class BaseMvpActivity&lt;V,T extends BasePresenter&lt;V&gt;&gt; extends AppCompatActivity &#123;</div><div class="line"></div><div class="line">    public T presenter;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        presenter = initPresenter();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        super.onResume();</div><div class="line">        presenter.attach((V)this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDestroy() &#123;</div><div class="line">        presenter.dettach();</div><div class="line">        super.onDestroy();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public abstract T initPresenter();</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>同样使用泛型来提取通用的逻辑，presenter的初始化，以及view的绑定和解绑操作都提取到父类Activity中。向外部提供了一个 initPresenter(); 方法用来初始化presenter，如果想创建不同参数的构造函数都可以随意去创建。</p>
<h3 id="基于BaseMVP的栗子"><a href="#基于BaseMVP的栗子" class="headerlink" title="基于BaseMVP的栗子"></a>基于BaseMVP的栗子</h3><p>通过上面的base父类，对之前的例子进行优化，写一个更加好用的例子。</p>
<p>NewMvpView</p>
<ul>
<li>NewMvpView 继承BaseView接口，添加自己的初始化ListView和Toast信息方法<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface NewMvpView extends BaseView &#123;</div><div class="line">        void setListItem(List&lt;String&gt; data);</div><div class="line">        void showMessage(String message);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>NewMvpPresenter</p>
<ul>
<li>NewMvpPresenter 继承BasePresenter类，增加网络请求和处理点击事件的方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">public class NewMvpPresenter extends BasePresenter&lt;NewMvpView&gt; &#123;</div><div class="line">        private RequestBiz requestBiz;</div><div class="line">        private Handler mHandler;</div><div class="line"></div><div class="line">        public NewMvpPresenter() &#123;        </div><div class="line">            requestBiz = new RequestBizIml();</div><div class="line">            mHandler = new Handler(Looper.getMainLooper());</div><div class="line">        &#125;    </div><div class="line"></div><div class="line">        public void onResume()&#123;     </div><div class="line">            mView.showLoading();   </div><div class="line">            requestBiz.requestForData(new OnRequestListener() &#123;</div><div class="line">                @Override            </div><div class="line">                public void onSuccess(final List&lt;String&gt; data) &#123;</div><div class="line">                    //由于请求开启了新线程，所以用handler去更新界面</div><div class="line">                    mHandler.post(new Runnable() &#123;</div><div class="line">                      @Override                    </div><div class="line">                       public void run() &#123;                        </div><div class="line">                           mView.hideLoading();                        </div><div class="line">                           mView.setListItem(data);                    </div><div class="line">                        &#125;                </div><div class="line">                    &#125;);            </div><div class="line">                 &#125;            </div><div class="line"></div><div class="line">                 @Override            </div><div class="line">                 public void onFailed() &#123;                </div><div class="line">                     mView.showMessage(&quot;请求失败&quot;);            </div><div class="line">                 &#125;        </div><div class="line">            &#125;);    </div><div class="line">       &#125;   </div><div class="line"></div><div class="line">        public void onItemClick(int position)&#123;        </div><div class="line">              mView.showMessage(&quot;点击了item&quot;+position);     </div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>NewMvpActivity  最终的样子</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">public class NewMvpActivity extends BaseMvpActivity&lt;NewMvpView, NewMvpPresenter&gt; implements NewMvpView, AdapterView.OnItemClickListener &#123;</div><div class="line">    @BindView(R.id.mvp_listview)</div><div class="line">    ListView mvpListView;</div><div class="line"></div><div class="line">    MvpPresenter mvpPresenter;</div><div class="line">    SweetAlertDialog pd;</div><div class="line">    Context mContext;</div><div class="line"></div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mContext = this;</div><div class="line">        ButterKnife.bind(this);</div><div class="line">        mvpListView.setOnItemClickListener(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        super.onResume();</div><div class="line">        presenter.onResume();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public NewMvpPresenter initPresenter() &#123;</div><div class="line">        return new NewMvpPresenter();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) &#123;</div><div class="line">        presenter.onItemClick(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void setListItem(List&lt;String&gt; data) &#123;</div><div class="line">        ArrayAdapter adapter = new ArrayAdapter(this, android.R.layout.simple_list_item_1, data);</div><div class="line">        mvpListView.setAdapter(adapter);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showMessage(String message) &#123;</div><div class="line">        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showLoading() &#123;</div><div class="line">        if (pd == null) &#123;</div><div class="line">            pd = new SweetAlertDialog(mContext, SweetAlertDialog.PROGRESS_TYPE);</div><div class="line">            pd.getProgressHelper().setBarColor(Color.parseColor(&quot;#A5DC86&quot;));</div><div class="line">            pd.setTitleText(&quot;Loading&quot;);</div><div class="line">            pd.setCancelable(true);</div><div class="line">        &#125;</div><div class="line">        pd.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void hideLoading() &#123;</div><div class="line">        pd.hide();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发一（Apk安装）]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91(Apk%20%E5%AE%89%E8%A3%85)/</url>
      <content type="html"><![CDATA[<p>安装之前判断是否有root权限，如果有root权限就静默安转，如果没有就利用意图进行安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * </div><div class="line"> * @author Javen</div><div class="line"> * @since 2016/05/24</div><div class="line"> */</div><div class="line">public class ApkController &#123;</div><div class="line">    /**</div><div class="line">     * 描述: 安装</div><div class="line">     */</div><div class="line">    public static boolean install(String apkPath,Context context)&#123;</div><div class="line">        // 先判断手机是否有root权限</div><div class="line">        if(hasRootPerssion())&#123;</div><div class="line">            // 有root权限，利用静默安装实现</div><div class="line">            return clientInstall(apkPath);</div><div class="line">        &#125;else&#123;</div><div class="line">            // 没有root权限，利用意图进行安装</div><div class="line">            File file = new File(apkPath);</div><div class="line">            if(!file.exists())</div><div class="line">                return false; </div><div class="line">            Intent intent = new Intent();</div><div class="line">            intent.setAction(&quot;android.intent.action.VIEW&quot;);</div><div class="line">            intent.addCategory(&quot;android.intent.category.DEFAULT&quot;);</div><div class="line">            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">            intent.setDataAndType(Uri.fromFile(file),&quot;application/vnd.android.package-archive&quot;);</div><div class="line">            context.startActivity(intent);</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 描述: 卸载</div><div class="line">     */</div><div class="line">    public static boolean uninstall(String packageName,Context context)&#123;</div><div class="line">        if(hasRootPerssion())&#123;</div><div class="line">            // 有root权限，利用静默卸载实现</div><div class="line">            return clientUninstall(packageName);</div><div class="line">        &#125;else&#123;</div><div class="line">            Uri packageURI = Uri.parse(&quot;package:&quot; + packageName);</div><div class="line">            Intent uninstallIntent = new Intent(Intent.ACTION_DELETE,packageURI);</div><div class="line">            uninstallIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">            context.startActivity(uninstallIntent);</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 判断手机是否有root权限</div><div class="line">     */</div><div class="line">    private static boolean hasRootPerssion()&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 静默安装</div><div class="line">     */</div><div class="line">    private static boolean clientInstall(String apkPath)&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.println(&quot;chmod 777 &quot;+apkPath);</div><div class="line">            PrintWriter.println(&quot;export LD_LIBRARY_PATH=/vendor/lib:/system/lib&quot;);</div><div class="line">            PrintWriter.println(&quot;pm install -r &quot;+apkPath);</div><div class="line">//          PrintWriter.println(&quot;exit&quot;);</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 静默卸载</div><div class="line">     */</div><div class="line">    private static boolean clientUninstall(String packageName)&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.println(&quot;LD_LIBRARY_PATH=/vendor/lib:/system/lib &quot;);</div><div class="line">            PrintWriter.println(&quot;pm uninstall &quot;+packageName);</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value); </div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 启动app</div><div class="line">     * com.exmaple.client/.MainActivity</div><div class="line">     * com.exmaple.client/com.exmaple.client.MainActivity</div><div class="line">     */</div><div class="line">    public static boolean startApp(String packageName,String activityName)&#123;</div><div class="line">        boolean isSuccess = false;</div><div class="line">        String cmd = &quot;am start -n &quot; + packageName + &quot;/&quot; + activityName + &quot; \n&quot;;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">           process = Runtime.getRuntime().exec(cmd);</div><div class="line">           int value = process.waitFor();  </div><div class="line">           return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">          e.printStackTrace();</div><div class="line">        &#125; finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return isSuccess;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">     </div><div class="line">    private static boolean returnResult(int value)&#123;</div><div class="line">        // 代表成功  </div><div class="line">        if (value == 0) &#123;</div><div class="line">            return true;</div><div class="line">        &#125; else if (value == 1) &#123; // 失败</div><div class="line">            return false;</div><div class="line">        &#125; else &#123; // 未知情况</div><div class="line">            return false;</div><div class="line">        &#125;  </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 查询所有非系统app的信息</div><div class="line">     * @param mContext</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static List&lt;Map&lt;String, Object&gt;&gt; getAPPInstalled(Context mContext) &#123;</div><div class="line"></div><div class="line">        List&lt;Map&lt;String, Object&gt;&gt; listItems = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();</div><div class="line"></div><div class="line">        // 获取系统内的所有程序信息</div><div class="line">        Intent mainintent = new Intent(Intent.ACTION_MAIN, null);</div><div class="line">        mainintent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        List&lt;PackageInfo&gt; packageinfo = mContext.getPackageManager()</div><div class="line">                .getInstalledPackages(0);</div><div class="line"></div><div class="line">        int count = packageinfo.size();</div><div class="line">        for (int i = 0; i &lt; count; i++) &#123;</div><div class="line"></div><div class="line">            PackageInfo pinfo = packageinfo.get(i);</div><div class="line">            ApplicationInfo appInfo = pinfo.applicationInfo;</div><div class="line">            if ((appInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) &gt; 0) &#123;</div><div class="line">                // 系统程序 忽略</div><div class="line">            &#125; else &#123;</div><div class="line">                // 非系统程序</div><div class="line">                Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();</div><div class="line">                map.put(&quot;app_logo&quot;, pinfo.applicationInfo.loadIcon(mContext</div><div class="line">                        .getPackageManager()));</div><div class="line">                map.put(&quot;app_name&quot;, pinfo.applicationInfo.loadLabel(mContext</div><div class="line">                        .getPackageManager()));</div><div class="line">                map.put(&quot;package_name&quot;, pinfo.applicationInfo.packageName);</div><div class="line">                map.put(&quot;app_version_name&quot;, pinfo.versionName);</div><div class="line">                map.put(&quot;app_version_code&quot;, pinfo.versionCode);</div><div class="line"></div><div class="line">                listItems.add(map);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return listItems;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 判断应用是否需要安装</div><div class="line">     * @param mContext</div><div class="line">     * @param packageName</div><div class="line">     * @param versionCode</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static boolean isInstalled(Context mContext,String packageName,int versionCode) &#123;</div><div class="line"></div><div class="line">        // 获取系统内的所有程序信息</div><div class="line">        Intent mainintent = new Intent(Intent.ACTION_MAIN, null);</div><div class="line">        mainintent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        List&lt;PackageInfo&gt; packageinfo = mContext.getPackageManager()</div><div class="line">                .getInstalledPackages(0);</div><div class="line"></div><div class="line">        int count = packageinfo.size();</div><div class="line">        String pn;</div><div class="line">        int vc;</div><div class="line">        for (int i = 0; i &lt; count; i++) &#123;</div><div class="line"></div><div class="line">            PackageInfo pinfo = packageinfo.get(i);</div><div class="line">            ApplicationInfo appInfo = pinfo.applicationInfo;</div><div class="line">            if ((appInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) &gt; 0) &#123;</div><div class="line">                // 系统程序 忽略</div><div class="line">            &#125; else &#123;</div><div class="line">                // 非系统程序</div><div class="line">                pn=pinfo.applicationInfo.packageName;</div><div class="line">                vc=pinfo.versionCode;</div><div class="line"></div><div class="line">                if (pn.equalsIgnoreCase(packageName) &amp;&amp; vc &gt;= versionCode) &#123;</div><div class="line">                    return true;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>获取手机安装的非系统应用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public class App &#123;</div><div class="line"></div><div class="line">    public static List&lt;Map&lt;String, Object&gt;&gt; getAPPInstalled(Context mContext) &#123;</div><div class="line"></div><div class="line">        List&lt;Map&lt;String, Object&gt;&gt; listItems = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();</div><div class="line"></div><div class="line">        //查询所有非系统app的信息</div><div class="line">        Intent mainintent = new Intent(Intent.ACTION_MAIN, null);</div><div class="line">        mainintent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        List&lt;PackageInfo&gt; packageinfo = mContext.getPackageManager()</div><div class="line">                .getInstalledPackages(0);</div><div class="line"></div><div class="line">        int count = packageinfo.size();</div><div class="line">        for (int i = 0; i &lt; count; i++) &#123;</div><div class="line"></div><div class="line">            PackageInfo pinfo = packageinfo.get(i);</div><div class="line">            ApplicationInfo appInfo = pinfo.applicationInfo;</div><div class="line">            if ((appInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) &gt; 0) &#123;</div><div class="line">                // 系统程序 忽略</div><div class="line">            &#125; else &#123;</div><div class="line">                // 非系统程序</div><div class="line">                Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();</div><div class="line">                map.put(&quot;app_logo&quot;, pinfo.applicationInfo.loadIcon(mContext</div><div class="line">                        .getPackageManager()));</div><div class="line">                map.put(&quot;app_name&quot;, pinfo.applicationInfo.loadLabel(mContext</div><div class="line">                        .getPackageManager()));</div><div class="line">                map.put(&quot;package_name&quot;, pinfo.applicationInfo.packageName);</div><div class="line">                map.put(&quot;app_version_name&quot;, pinfo.versionName);</div><div class="line">                map.put(&quot;app_version_code&quot;, pinfo.versionCode);</div><div class="line"></div><div class="line">                listItems.add(map);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return listItems;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发一（Apk安装）]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B8%80(Apk%20%E5%AE%89%E8%A3%85)/</url>
      <content type="html"><![CDATA[<p>安装之前判断是否有root权限，如果有root权限就静默安转，如果没有就利用意图进行安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * </div><div class="line"> * @author Javen</div><div class="line"> * @since 2016/05/24</div><div class="line"> */</div><div class="line">public class ApkController &#123;</div><div class="line">    /**</div><div class="line">     * 描述: 安装</div><div class="line">     */</div><div class="line">    public static boolean install(String apkPath,Context context)&#123;</div><div class="line">        // 先判断手机是否有root权限</div><div class="line">        if(hasRootPerssion())&#123;</div><div class="line">            // 有root权限，利用静默安装实现</div><div class="line">            return clientInstall(apkPath);</div><div class="line">        &#125;else&#123;</div><div class="line">            // 没有root权限，利用意图进行安装</div><div class="line">            File file = new File(apkPath);</div><div class="line">            if(!file.exists())</div><div class="line">                return false; </div><div class="line">            Intent intent = new Intent();</div><div class="line">            intent.setAction(&quot;android.intent.action.VIEW&quot;);</div><div class="line">            intent.addCategory(&quot;android.intent.category.DEFAULT&quot;);</div><div class="line">            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">            intent.setDataAndType(Uri.fromFile(file),&quot;application/vnd.android.package-archive&quot;);</div><div class="line">            context.startActivity(intent);</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 描述: 卸载</div><div class="line">     */</div><div class="line">    public static boolean uninstall(String packageName,Context context)&#123;</div><div class="line">        if(hasRootPerssion())&#123;</div><div class="line">            // 有root权限，利用静默卸载实现</div><div class="line">            return clientUninstall(packageName);</div><div class="line">        &#125;else&#123;</div><div class="line">            Uri packageURI = Uri.parse(&quot;package:&quot; + packageName);</div><div class="line">            Intent uninstallIntent = new Intent(Intent.ACTION_DELETE,packageURI);</div><div class="line">            uninstallIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">            context.startActivity(uninstallIntent);</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 判断手机是否有root权限</div><div class="line">     */</div><div class="line">    private static boolean hasRootPerssion()&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 静默安装</div><div class="line">     */</div><div class="line">    private static boolean clientInstall(String apkPath)&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.println(&quot;chmod 777 &quot;+apkPath);</div><div class="line">            PrintWriter.println(&quot;export LD_LIBRARY_PATH=/vendor/lib:/system/lib&quot;);</div><div class="line">            PrintWriter.println(&quot;pm install -r &quot;+apkPath);</div><div class="line">//          PrintWriter.println(&quot;exit&quot;);</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 静默卸载</div><div class="line">     */</div><div class="line">    private static boolean clientUninstall(String packageName)&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.println(&quot;LD_LIBRARY_PATH=/vendor/lib:/system/lib &quot;);</div><div class="line">            PrintWriter.println(&quot;pm uninstall &quot;+packageName);</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value); </div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 启动app</div><div class="line">     * com.exmaple.client/.MainActivity</div><div class="line">     * com.exmaple.client/com.exmaple.client.MainActivity</div><div class="line">     */</div><div class="line">    public static boolean startApp(String packageName,String activityName)&#123;</div><div class="line">        boolean isSuccess = false;</div><div class="line">        String cmd = &quot;am start -n &quot; + packageName + &quot;/&quot; + activityName + &quot; \n&quot;;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">           process = Runtime.getRuntime().exec(cmd);</div><div class="line">           int value = process.waitFor();  </div><div class="line">           return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">          e.printStackTrace();</div><div class="line">        &#125; finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return isSuccess;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">     </div><div class="line">    private static boolean returnResult(int value)&#123;</div><div class="line">        // 代表成功  </div><div class="line">        if (value == 0) &#123;</div><div class="line">            return true;</div><div class="line">        &#125; else if (value == 1) &#123; // 失败</div><div class="line">            return false;</div><div class="line">        &#125; else &#123; // 未知情况</div><div class="line">            return false;</div><div class="line">        &#125;  </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 查询所有非系统app的信息</div><div class="line">     * @param mContext</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static List&lt;Map&lt;String, Object&gt;&gt; getAPPInstalled(Context mContext) &#123;</div><div class="line"></div><div class="line">        List&lt;Map&lt;String, Object&gt;&gt; listItems = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();</div><div class="line"></div><div class="line">        // 获取系统内的所有程序信息</div><div class="line">        Intent mainintent = new Intent(Intent.ACTION_MAIN, null);</div><div class="line">        mainintent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        List&lt;PackageInfo&gt; packageinfo = mContext.getPackageManager()</div><div class="line">                .getInstalledPackages(0);</div><div class="line"></div><div class="line">        int count = packageinfo.size();</div><div class="line">        for (int i = 0; i &lt; count; i++) &#123;</div><div class="line"></div><div class="line">            PackageInfo pinfo = packageinfo.get(i);</div><div class="line">            ApplicationInfo appInfo = pinfo.applicationInfo;</div><div class="line">            if ((appInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) &gt; 0) &#123;</div><div class="line">                // 系统程序 忽略</div><div class="line">            &#125; else &#123;</div><div class="line">                // 非系统程序</div><div class="line">                Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();</div><div class="line">                map.put(&quot;app_logo&quot;, pinfo.applicationInfo.loadIcon(mContext</div><div class="line">                        .getPackageManager()));</div><div class="line">                map.put(&quot;app_name&quot;, pinfo.applicationInfo.loadLabel(mContext</div><div class="line">                        .getPackageManager()));</div><div class="line">                map.put(&quot;package_name&quot;, pinfo.applicationInfo.packageName);</div><div class="line">                map.put(&quot;app_version_name&quot;, pinfo.versionName);</div><div class="line">                map.put(&quot;app_version_code&quot;, pinfo.versionCode);</div><div class="line"></div><div class="line">                listItems.add(map);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return listItems;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 判断应用是否需要安装</div><div class="line">     * @param mContext</div><div class="line">     * @param packageName</div><div class="line">     * @param versionCode</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static boolean isInstalled(Context mContext,String packageName,int versionCode) &#123;</div><div class="line"></div><div class="line">        // 获取系统内的所有程序信息</div><div class="line">        Intent mainintent = new Intent(Intent.ACTION_MAIN, null);</div><div class="line">        mainintent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        List&lt;PackageInfo&gt; packageinfo = mContext.getPackageManager()</div><div class="line">                .getInstalledPackages(0);</div><div class="line"></div><div class="line">        int count = packageinfo.size();</div><div class="line">        String pn;</div><div class="line">        int vc;</div><div class="line">        for (int i = 0; i &lt; count; i++) &#123;</div><div class="line"></div><div class="line">            PackageInfo pinfo = packageinfo.get(i);</div><div class="line">            ApplicationInfo appInfo = pinfo.applicationInfo;</div><div class="line">            if ((appInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) &gt; 0) &#123;</div><div class="line">                // 系统程序 忽略</div><div class="line">            &#125; else &#123;</div><div class="line">                // 非系统程序</div><div class="line">                pn=pinfo.applicationInfo.packageName;</div><div class="line">                vc=pinfo.versionCode;</div><div class="line"></div><div class="line">                if (pn.equalsIgnoreCase(packageName) &amp;&amp; vc &gt;= versionCode) &#123;</div><div class="line">                    return true;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android MVP 构架初试]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%20MVP%20%E6%9E%B6%E6%9E%84%E5%88%9D%E8%AF%95/</url>
      <content type="html"><![CDATA[<p>目前讨论<code>MVP</code>  <code>MVVM</code> 的架构也来越多，这种构架也很适合Android。研究MVP记录如下</p>
<h3 id="源码地址RxMVP分支Tag02"><a href="#源码地址RxMVP分支Tag02" class="headerlink" title="源码地址RxMVP分支Tag02"></a><a href="https://github.com/Javen205/RxMVP/tree/Tag02" target="_blank" rel="external">源码地址RxMVP分支Tag02</a></h3><h3 id="原有的MVC构架"><a href="#原有的MVC构架" class="headerlink" title="原有的MVC构架"></a>原有的MVC构架</h3><p>刚开始接触Android的时候会觉得Android的整个代码架构就是一个MVC。</p>
<ul>
<li>M : 业务层和模型层，相当与javabean和我们的业务请求代码</li>
<li>V : 视图层，对应Android的layout.xml布局文件</li>
<li>C : 控制层，对应于Activity中对于UI 的各种操作</li>
</ul>
<p>看起来MVC架构很清晰，但是实际的开发中，请求的业务代码往往被丢到了Activity里面，大家都知道layout.xml的布局文件只能提供默认的UI设置，所以开发中视图层的变化也被丢到了Activity里面，再加上Activity本身承担着控制层的责任。所以Activity达成了MVC集合的成就，最终我们的Activity就变得越来越难看，从几百行变成了几千行。维护的成本也越来越高</p>
<h3 id="新的MVP架构"><a href="#新的MVP架构" class="headerlink" title="新的MVP架构"></a>新的MVP架构</h3><ul>
<li>M : 还是业务层和模型层</li>
<li>V : 视图层的责任由Activity来担当</li>
<li>P : 新成员Prensenter 用来代理 C(control) 控制层</li>
</ul>
<p>MVP与MVC最大的不同，其实是Activity职责的变化，由原来的C (控制层) 变成了 V(视图层)，不再管控制层的问题，只管如何去显示。控制层的角色就由我们的新人 Presenter来担当，这种架构就解决了Activity过度耦合控制层和视图层的问题。</p>
<a id="more"></a> 
<h3 id="一个简单实践"><a href="#一个简单实践" class="headerlink" title="一个简单实践"></a>一个简单实践</h3><p><img src="/images/public/MVP/MVP1.png" alt=""></p>
<p>声明了一个接口，带有请求数据业务的方法</p>
<p>RequestBiz<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface RequestBiz &#123;</div><div class="line">    //请求数据业务</div><div class="line">    void requestForData(OnRequestListener listener);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>RequestBizIml</p>
<p>请求的实现类为了模拟网络请求，开启了一个会sleep 10秒的线程，然后装填请求的数据，通过OnRequestListener 接口回调出去，与我们平时开发的方式一致。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">public class RequestBizIml implements RequestBiz &#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void requestForData(final OnRequestListener listener) &#123;</div><div class="line"></div><div class="line">        new Thread(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                try &#123;</div><div class="line">                    Thread.sleep(1000*10);</div><div class="line">                    ArrayList&lt;String&gt; data = new ArrayList&lt;String&gt;();</div><div class="line">                    for(int i = 1 ; i&lt; 10 ; i++)&#123;</div><div class="line">                        data.add(&quot;item&quot;+i);</div><div class="line">                    &#125;</div><div class="line">                    if(null != listener)&#123;</div><div class="line">                        listener.onSuccess(data);</div><div class="line">                    &#125;</div><div class="line">                &#125;catch(Exception e)&#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;).start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>OnRequestListener</p>
<p>数据请求的回掉接口，声明了成功和失败的方法 。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public interface OnRequestListener &#123;</div><div class="line"></div><div class="line">    void onSuccess(List&lt;String&gt; data);</div><div class="line">    void onFailed();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>到此业务层完成，开始MVP的写法.</p>
<p>由于Activity变成了view层不再去控制界面，但是具体的界面的改变api其实还是由Activity来提供的，所以在写MVP之前需要思考，View层需要哪些方法。</p>
<ul>
<li>显示loading</li>
<li>隐藏loading</li>
<li>listview的初始化</li>
<li>弹出Toast消息</li>
</ul>
<p>MvpView </p>
<p>写MvpView之前接口需要想想界面有哪些交互，根据业务逻辑来确定</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public interface MvpView &#123;</div><div class="line">     //显示loading progress</div><div class="line">     void showLoading();</div><div class="line">     //隐藏loading progress</div><div class="line">     void hideLoading();</div><div class="line">     //ListView的初始化</div><div class="line">     void setListItem(List&lt;String&gt; data);</div><div class="line">     //Toast 消息</div><div class="line">     void showMessage(String messgae);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来开始写presenter层， 同样在写presenter之前想想控制层需要哪些方法</p>
<ul>
<li>网络请求</li>
<li>点击事件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">public class MvpPresenter &#123;</div><div class="line"></div><div class="line">    private MvpView mvpView;</div><div class="line">    RequestBiz requestBiz;</div><div class="line">    private Handler mHandler;</div><div class="line"></div><div class="line">    public MvpPresenter(MvpView mvpView) &#123;</div><div class="line">        this.mvpView = mvpView;</div><div class="line">        requestBiz = new RequestBizIml();</div><div class="line">        mHandler = new Handler(Looper.getMainLooper());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onResume()&#123;</div><div class="line">        mvpView.showLoading();</div><div class="line">        requestBiz.requestForData(new OnRequestListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onSuccess(final List&lt;String&gt; data) &#123;</div><div class="line">               //由于请求开启了新线程，所以用handler去更新界面</div><div class="line">                mHandler.post(new Runnable() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void run() &#123;</div><div class="line">                        mvpView.hideLoading();</div><div class="line">                        mvpView.setListItem(data);</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onFailed() &#123;</div><div class="line">                mvpView.showMessage(&quot;请求失败&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    public void onDestroy()&#123;</div><div class="line">        mvpView = null;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onItemClick(int position)&#123;</div><div class="line">        mvpView.showMessage(&quot;点击了item&quot; + position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Presenter完成，现在就剩下一件事，Activity中使用Presenter</p>
<p>完整版MVPActivity</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">public class MVPActivity extends AppCompatActivity implements MvpView, AdapterView.OnItemClickListener &#123;</div><div class="line">    @BindView(R.id.mvp_listview)</div><div class="line">    ListView mvpListView;</div><div class="line"></div><div class="line">    MvpPresenter mvpPresenter;</div><div class="line">    SweetAlertDialog pd;</div><div class="line">    Context mContext;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mContext= this;</div><div class="line">        ButterKnife.bind(this);</div><div class="line">        mvpListView.setOnItemClickListener(this);</div><div class="line">        mvpPresenter = new MvpPresenter(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        super.onResume();</div><div class="line">        mvpPresenter.onResume();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDestroy() &#123;</div><div class="line">        mvpPresenter.onDestroy();</div><div class="line">        super.onDestroy();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) &#123;</div><div class="line">        mvpPresenter.onItemClick(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showLoading() &#123;</div><div class="line">        if (pd == null) &#123;</div><div class="line">            pd = new SweetAlertDialog(mContext, SweetAlertDialog.PROGRESS_TYPE);</div><div class="line">            pd.getProgressHelper().setBarColor(Color.parseColor(&quot;#A5DC86&quot;));</div><div class="line">            pd.setTitleText(&quot;Loading&quot;);</div><div class="line">            pd.setCancelable(true);</div><div class="line">        &#125;</div><div class="line">        pd.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void hideLoading() &#123;</div><div class="line">        pd.hide();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void setListItem(List&lt;String&gt; data) &#123;</div><div class="line">        ArrayAdapter adapter = new ArrayAdapter(MVPActivity.this,</div><div class="line">                android.R.layout.simple_list_item_1, data);</div><div class="line">        mvpListView.setAdapter(adapter);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showMessage(String message) &#123;</div><div class="line">        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio 添加apt的支持]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%20Studio%20%E6%B7%BB%E5%8A%A0apt%E7%9A%84%E6%94%AF%E6%8C%81/</url>
      <content type="html"><![CDATA[<p>我们在使用butterknife的时候需要apt的支持<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//注解绑定view</div><div class="line">compile &apos;com.jakewharton:butterknife:8.2.1&apos;</div><div class="line">apt &apos;com.jakewharton:butterknife-compiler:8.2.1&apos;</div></pre></td></tr></table></figure></p>
<p>默认的情况下gradle 是支持的，下面是解决方案</p>
<a id="more"></a> 
<ul>
<li>在项目工程级别build.gradle中添加</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">        classpath &apos;com.android.tools.build:gradle:2.1.2&apos;</div><div class="line">        //添加apt的支持</div><div class="line">        classpath &apos;com.neenbedankt.gradle.plugins:android-apt:1.8&apos;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<ul>
<li>在项目Module级别build.gradle中添加</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apply plugin: &apos;com.android.application&apos;</div><div class="line">apply plugin: &apos;android-apt&apos;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RxJava + Retrofit 完成网络请求]]></title>
      <url>http://javen205.oschina.io/2016/08/06/RxJava%20%E4%B8%8E%20Retrofit%20%E7%BB%93%E5%90%88%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>RxJava和Retrofit也火了一段时间了。一直没有时间研究这些新东西，最近有时间准备写个项目练手，打算先用Android写一个Demo出来，却发现Android的世界发生了天翻地覆的变化，EventBus和OKHttp3 都不见了，RxJava和Retrofit是什么东东？</p>
<p>如果你对Retrofit不熟悉就先看 <a href="https://github.com/square/retrofit" target="_blank" rel="external">官网的介绍</a></p>
<p>如果你对RxJava不熟悉请先看 <a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">官网介绍</a> 以及 <code>gank.io</code> <a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">给 Android 开发者的 RxJava 详解</a> 这篇文章 </p>
<p>当然也有很多RxJava与Retrofit的文章，我是参考<code>tough1985</code>大神的 <a href="http://gank.io/post/56e80c2c677659311bed9841" target="_blank" rel="external">这篇文章</a></p>
<p>学(好)习(记)就(性)要(不)做(如)个(烂)笔(笔)记(头)</p>
<a id="more"></a> 
<h3 id="RxJava如何与Retrofit结合"><a href="#RxJava如何与Retrofit结合" class="headerlink" title="RxJava如何与Retrofit结合"></a>RxJava如何与Retrofit结合</h3><h2 id="本文实现的目标"><a href="#本文实现的目标" class="headerlink" title="本文实现的目标"></a>本文实现的目标</h2><ol>
<li>RxJava如何与Retrofit结合</li>
<li>相同格式的Http请求数据该如何封装</li>
<li>相同格式的Http请求数据统一进行预处理</li>
<li>如何取消一个Http请求 – 观察者之间的对决，Oberver VS Subscriber</li>
<li>一个需要ProgressDialog的Subscriber该有的样子</li>
</ol>
<h2 id="添加依赖包"><a href="#添加依赖包" class="headerlink" title="添加依赖包"></a>添加依赖包</h2><p>先贴出<code>build.gradle</code>文件的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile fileTree(include: [&apos;*.jar&apos;], dir: &apos;libs&apos;)</div><div class="line">    testCompile &apos;junit:junit:4.12&apos;</div><div class="line">    compile &apos;com.android.support:appcompat-v7:23.3.0&apos;</div><div class="line">    compile &apos;com.android.support:support-v4:23.3.0&apos;</div><div class="line">    compile &apos;com.android.support:recyclerview-v7:23.3.0&apos;</div><div class="line">    //日志</div><div class="line">    compile &apos;com.orhanobut:logger:1.15&apos;</div><div class="line">    //广告</div><div class="line">    compile &apos;com.bigkoo:convenientbanner:2.0.5&apos;</div><div class="line">    compile &apos;com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar&apos;</div><div class="line">    //注解绑定view</div><div class="line">    compile &apos;com.jakewharton:butterknife:8.2.1&apos;</div><div class="line">    apt &apos;com.jakewharton:butterknife-compiler:8.2.1&apos;</div><div class="line">    //ViewPage指示器</div><div class="line">    compile &apos;com.astuetz:pagerslidingtabstrip:1.0.1&apos;</div><div class="line">    //rx系列</div><div class="line">    compile &apos;io.reactivex:rxjava:1.1.6&apos;</div><div class="line">    compile &apos;io.reactivex:rxandroid:1.2.1&apos;</div><div class="line">    compile &apos;com.squareup.retrofit2:retrofit:2.1.0&apos;</div><div class="line">    compile &apos;com.squareup.retrofit2:retrofit-adapters:2.1.0&apos;</div><div class="line">    compile &apos;com.squareup.retrofit2:adapter-rxjava:2.1.0&apos;</div><div class="line">    compile &apos;com.squareup.retrofit2:converter-gson:2.1.0&apos;</div><div class="line">    compile &apos;com.google.code.gson:gson:2.7&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>本文是基于<code>RxJava 1.1.6</code> 和 <code>Retrofit 2.1.0</code> 来进行的。 添加<code>rxandroid</code>是因为<code>rxjava</code>中的线程问题。</p>
<p>如需查看项目代码 –&gt; 代码地址:<br><code>https://github.com/Javen205/SmartCloud</code>  选择Tag1</p>
<h2 id="原生的Retrofit请求"><a href="#原生的Retrofit请求" class="headerlink" title="原生的Retrofit请求"></a>原生的Retrofit请求</h2><p>添加Retrofit 接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 请求示例：http://japi.juhe.cn/joke/content/list.from?</div><div class="line"> * key=您申请的KEY&amp;page=2&amp;pagesize=10&amp;sort=asc&amp;time=1418745237</div><div class="line"> */</div><div class="line">public interface JokeService &#123;</div><div class="line">    //Retrofit原生请求</div><div class="line">    @GET(&quot;content/list.from&quot;)</div><div class="line">    Call&lt;JokeEntity&gt; getJokes(@QueryMap Map&lt;String, Object&gt; options);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Fragment 或者Activity中 调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * </div><div class="line"> * 原生的Retrofit请求</div><div class="line"> */</div><div class="line">private void getJokes(Map&lt;String, Object&gt; options) &#123;</div><div class="line"></div><div class="line">    String baseUrl=&quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">    Retrofit retrofit = new Retrofit.Builder()</div><div class="line">            .baseUrl(baseUrl)</div><div class="line">            .addConverterFactory(GsonConverterFactory.create())</div><div class="line">            .build();</div><div class="line"></div><div class="line">    JokeService jokeService = retrofit.create(JokeService.class);</div><div class="line"></div><div class="line">    Call&lt;JokeEntity&gt; call = jokeService.getJokes(options);</div><div class="line">    call.enqueue(new Callback&lt;JokeEntity&gt;() &#123;</div><div class="line">        @Override</div><div class="line">        public void onResponse(Call&lt;JokeEntity&gt; call, Response&lt;JokeEntity&gt; response) &#123;</div><div class="line">            JokeEntity jokeEntity = response.body();</div><div class="line">            Logger.i(jokeEntity.toString());</div><div class="line">            if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                    Logger.i(subject.toString());</div><div class="line">                &#125;</div><div class="line">                textview.setText(data.get(0).toString());</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onFailure(Call&lt;JokeEntity&gt; call, Throwable t) &#123;</div><div class="line">            textview.setText(t.getMessage());</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="添加Rxjava"><a href="#添加Rxjava" class="headerlink" title="添加Rxjava"></a>添加Rxjava</h2><p>Retrofit本身对Rxjava提供了支持。</p>
<p>添加Retrofit对Rxjava的支持需要在Gradle文件中添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile &apos;io.reactivex:rxjava:1.1.6&apos;</div></pre></td></tr></table></figure>
<p>上文中已经添加</p>
<p>然后在创建Retrofit的过程中添加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Retrofit retrofit = new Retrofit.Builder()</div><div class="line">        .baseUrl(baseUrl)</div><div class="line">        .addConverterFactory(GsonConverterFactory.create())</div><div class="line">        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">        .build();</div></pre></td></tr></table></figure>
<p>这样一来我们定义的service返回值就不在是一个Call了，而是一个Observable</p>
<p>重新定义 JokeService 方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 请求示例：http://japi.juhe.cn/joke/content/list.from?</div><div class="line"> * key=您申请的KEY&amp;page=2&amp;pagesize=10&amp;sort=asc&amp;time=1418745237</div><div class="line"> */</div><div class="line">public interface JokeService &#123;</div><div class="line">    @GET(&quot;content/list.from&quot;)</div><div class="line">    Observable&lt;HttpJokeResult&lt;JokeEntity.Data&gt;&gt; getJokes(@QueryMap Map&lt;String, Object&gt; options);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>getJokes方法改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * Retrofit + RxJava</div><div class="line">     * @param options</div><div class="line">     */</div><div class="line">    private void getJokes2(Map&lt;String, Object&gt; options) &#123;</div><div class="line"></div><div class="line">        String baseUrl=&quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">        Retrofit retrofit = new Retrofit.Builder()</div><div class="line">                .baseUrl(baseUrl)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        JokeService jokeService = retrofit.create(JokeService.class);</div><div class="line"></div><div class="line"></div><div class="line">        jokeService.getJokesByRxJava(options)</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(new Subscriber&lt;JokeEntity&gt;() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void onCompleted() &#123;</div><div class="line">                        Toast.makeText(mContext, &quot;Get Top Joke Completed&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onError(Throwable e) &#123;</div><div class="line">                        textview.setText(e.getMessage());</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onNext(JokeEntity jokeEntity) &#123;</div><div class="line">                        Logger.i(jokeEntity.toString());</div><div class="line">                        if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                            List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                            for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                                Logger.i(subject.toString());</div><div class="line">                            &#125;</div><div class="line">                            textview.setText(data.get(0).toString());</div><div class="line">                        &#125;else &#123;</div><div class="line">                            textview.setText(jokeEntity.toString());</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>这样基本上就完成了Retrofit和Rxjava的结合，但是这样封装还是不太满意。</p>
<p>接下来我们把创建Retrofit的过程封装一下，然后希望Activity/Fargment创建Subscriber对象传进来。</p>
<h2 id="将请求过程进行封装"><a href="#将请求过程进行封装" class="headerlink" title="将请求过程进行封装"></a>将请求过程进行封装</h2><p>创建一个对象HttpMethods</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line">package com.javen.smartcloud.http;</div><div class="line"></div><div class="line">import com.javen.smartcloud.entity.HttpJokeResult;</div><div class="line">import com.javen.smartcloud.entity.JokeEntity;</div><div class="line"></div><div class="line">import java.util.Map;</div><div class="line">import java.util.concurrent.TimeUnit;</div><div class="line"></div><div class="line">import okhttp3.OkHttpClient;</div><div class="line">import retrofit2.Retrofit;</div><div class="line">import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;</div><div class="line">import retrofit2.converter.gson.GsonConverterFactory;</div><div class="line">import rx.Observable;</div><div class="line">import rx.Subscriber;</div><div class="line">import rx.android.schedulers.AndroidSchedulers;</div><div class="line">import rx.functions.Func1;</div><div class="line">import rx.schedulers.Schedulers;</div><div class="line"></div><div class="line">public class HttpMethods &#123;</div><div class="line"></div><div class="line">    public static final String BASE_URL = &quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">    private static final int DEFAULT_TIMEOUT = 5;</div><div class="line"></div><div class="line">    private Retrofit retrofit;</div><div class="line"></div><div class="line">    private JokeService jokeService;</div><div class="line"></div><div class="line">    //构造方法私有</div><div class="line">    private HttpMethods() &#123;</div><div class="line">        //手动创建一个OkHttpClient并设置超时时间</div><div class="line">        OkHttpClient.Builder httpClientBuilder = new OkHttpClient.Builder();</div><div class="line">        httpClientBuilder.connectTimeout(DEFAULT_TIMEOUT, TimeUnit.SECONDS);</div><div class="line"></div><div class="line">        retrofit = new Retrofit.Builder()</div><div class="line">                .client(httpClientBuilder.build())</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .baseUrl(BASE_URL)</div><div class="line">                .build();</div><div class="line"></div><div class="line">        jokeService = retrofit.create(JokeService.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //在访问HttpMethods时创建单例</div><div class="line">    private static class SingletonHolder&#123;</div><div class="line">        private static final HttpMethods INSTANCE = new HttpMethods();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //获取单例</div><div class="line">    public static HttpMethods getInstance()&#123;</div><div class="line">        return SingletonHolder.INSTANCE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用来统一处理Http的resultCode,并将HttpResult的Data部分剥离出来返回给subscriber</div><div class="line">     *</div><div class="line">     * @param &lt;T&gt; Subscriber真正需要的数据类型，也就是Data部分的数据类型</div><div class="line">     */</div><div class="line">    private class HttpResultFunc&lt;T&gt; implements Func1&lt;HttpJokeResult&lt;T&gt;, T&gt; &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public T call(HttpJokeResult&lt;T&gt; httpResult) &#123;</div><div class="line">            if (httpResult.getError_code() != 0) &#123;</div><div class="line">                throw new ApiException(httpResult.getError_code());</div><div class="line">            &#125;</div><div class="line">            return httpResult.getResult();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private &lt;T&gt; void toSubscribe(Observable&lt;T&gt; observable, Subscriber&lt;T&gt; subscriber)&#123;</div><div class="line">        observable.subscribeOn(Schedulers.io())</div><div class="line">                .unsubscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(subscriber);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用于获取聚合笑话的数据</div><div class="line">     * @param subscriber 由调用者传过来的观察者对象</div><div class="line">     * @param options 访问参数</div><div class="line">     */</div><div class="line">    public void getJokes(Subscriber&lt;JokeEntity&gt; subscriber, Map&lt;String, Object&gt; options)&#123;</div><div class="line">//        jokeService.getJokesByRxJava(options)</div><div class="line">//                .subscribeOn(Schedulers.io())</div><div class="line">//                .unsubscribeOn(Schedulers.io())</div><div class="line">//                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">//                .subscribe(subscriber);</div><div class="line">        Observable&lt;JokeEntity&gt; observable = jokeService.getJokesByRxJava(options);</div><div class="line">        toSubscribe(observable,subscriber);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>用一个单例来封装该对象，在构造方法中创建Retrofit和对应的Service。 如果需要访问不同的基地址，那么你可能需要创建多个Retrofit对象，或者干脆根据不同的基地址封装不同的HttpMethod类。</p>
<p>再来看Activity/Fargment中的getJokes方法：  以下代码中的 getJokes3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div></pre></td><td class="code"><pre><div class="line">package com.javen.smartcloud.fragment;</div><div class="line"></div><div class="line">import android.view.LayoutInflater;</div><div class="line">import android.view.View;</div><div class="line">import android.view.ViewGroup;</div><div class="line">import android.widget.Button;</div><div class="line">import android.widget.TextView;</div><div class="line">import android.widget.Toast;</div><div class="line"></div><div class="line">import com.javen.smartcloud.R;</div><div class="line">import com.javen.smartcloud.entity.HttpJokeResult;</div><div class="line">import com.javen.smartcloud.entity.JokeEntity;</div><div class="line">import com.javen.smartcloud.http.HttpMethods;</div><div class="line">import com.javen.smartcloud.http.JokeService;</div><div class="line">import com.javen.smartcloud.subscribers.ProgressSubscriber;</div><div class="line">import com.orhanobut.logger.Logger;</div><div class="line"></div><div class="line">import java.util.HashMap;</div><div class="line">import java.util.List;</div><div class="line">import java.util.Map;</div><div class="line"></div><div class="line">import butterknife.BindView;</div><div class="line">import butterknife.ButterKnife;</div><div class="line">import butterknife.OnClick;</div><div class="line">import retrofit2.Call;</div><div class="line">import retrofit2.Callback;</div><div class="line">import retrofit2.Response;</div><div class="line">import retrofit2.Retrofit;</div><div class="line">import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;</div><div class="line">import retrofit2.converter.gson.GsonConverterFactory;</div><div class="line">import rx.Subscriber;</div><div class="line">import rx.android.schedulers.AndroidSchedulers;</div><div class="line">import rx.schedulers.Schedulers;</div><div class="line"></div><div class="line"></div><div class="line">public class FragmentOne extends BaseFragment &#123;</div><div class="line">    @BindView(R.id.id_joke_tv)</div><div class="line">    TextView textview;</div><div class="line">    @BindView(R.id.id_joke_btn)</div><div class="line">    Button jokeBtn;</div><div class="line"></div><div class="line">    Subscriber&lt;JokeEntity&gt; subscriber;</div><div class="line"></div><div class="line">    Subscriber&lt;HttpJokeResult&lt;JokeEntity.Data&gt;&gt; subscriber2;</div><div class="line"></div><div class="line">    Subscriber&lt;JokeEntity.Data&gt; subscriber3;</div><div class="line"></div><div class="line">    public FragmentOne() &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public View initView(LayoutInflater inflater, ViewGroup container) &#123;</div><div class="line">        View view = inflater.inflate(R.layout.fragment_one, container, false);</div><div class="line">        ButterKnife.bind(this, view);</div><div class="line">        return view;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void initData() &#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    @OnClick(R.id.id_joke_btn)</div><div class="line">    public void onClick() &#123;</div><div class="line">        long timeMillis = System.currentTimeMillis();</div><div class="line">        String time=String.valueOf(timeMillis).substring(0,10);</div><div class="line">        Logger.e(&quot;当前时间戳:&quot;+timeMillis+&quot;  前10位:&quot;+time);</div><div class="line">        Toast.makeText(mContext, &quot;点我&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        Map&lt;String,Object&gt; options = new HashMap&lt;String, Object&gt;();</div><div class="line">        options.put(&quot;key&quot;,&quot;bd19bfd8cb856884b5739b0267ec24c9&quot;);</div><div class="line">        options.put(&quot;sort&quot;,&quot;desc&quot;);</div><div class="line">        options.put(&quot;page&quot;,1);</div><div class="line">        options.put(&quot;pagesize&quot;,2);</div><div class="line">        options.put(&quot;time&quot;,time);</div><div class="line"></div><div class="line">//        getJokes1(options);</div><div class="line">//        getJokes2(options);</div><div class="line">//        getJokes3(options);</div><div class="line">    &#125;</div><div class="line">   </div><div class="line"></div><div class="line">    /**</div><div class="line">     * Retrofit + RxJava 封装版</div><div class="line">     * 3.添加HttpMethods</div><div class="line">     * @param options</div><div class="line">     */</div><div class="line">    private void getJokes3(Map&lt;String, Object&gt; options)&#123;</div><div class="line">        subscriber = new Subscriber&lt;JokeEntity&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onCompleted() &#123;</div><div class="line">                Toast.makeText(mContext, &quot;Get Top Joke Completed&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textview.setText(e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(JokeEntity jokeEntity) &#123;</div><div class="line">                Logger.i(jokeEntity.toString());</div><div class="line">                if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                    List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                    for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                        Logger.i(subject.toString());</div><div class="line">                    &#125;</div><div class="line">                    textview.setText(data.get(0).toString());</div><div class="line">                &#125;else &#123;</div><div class="line">                    textview.setText(jokeEntity.toString());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        HttpMethods.getInstance().getJokes(subscriber,options);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * Retrofit + RxJava</div><div class="line">     * @param options</div><div class="line">     */</div><div class="line">    private void getJokes2(Map&lt;String, Object&gt; options) &#123;</div><div class="line"></div><div class="line">        String baseUrl=&quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">        Retrofit retrofit = new Retrofit.Builder()</div><div class="line">                .baseUrl(baseUrl)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        JokeService jokeService = retrofit.create(JokeService.class);</div><div class="line"></div><div class="line"></div><div class="line">        jokeService.getJokesByRxJava(options)</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(new Subscriber&lt;JokeEntity&gt;() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void onCompleted() &#123;</div><div class="line">                        Toast.makeText(mContext, &quot;Get Top Joke Completed&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onError(Throwable e) &#123;</div><div class="line">                        textview.setText(e.getMessage());</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onNext(JokeEntity jokeEntity) &#123;</div><div class="line">                        Logger.i(jokeEntity.toString());</div><div class="line">                        if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                            List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                            for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                                Logger.i(subject.toString());</div><div class="line">                            &#125;</div><div class="line">                            textview.setText(data.get(0).toString());</div><div class="line">                        &#125;else &#123;</div><div class="line">                            textview.setText(jokeEntity.toString());</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 原生的Retrofit请求</div><div class="line">     */</div><div class="line">    private void getJokes1(Map&lt;String, Object&gt; options) &#123;</div><div class="line"></div><div class="line">        String baseUrl=&quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">        Retrofit retrofit = new Retrofit.Builder()</div><div class="line">                .baseUrl(baseUrl)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        JokeService jokeService = retrofit.create(JokeService.class);</div><div class="line"></div><div class="line">        Call&lt;JokeEntity&gt; call = jokeService.getJokes(options);</div><div class="line">        call.enqueue(new Callback&lt;JokeEntity&gt;() &#123;</div><div class="line">            @Override</div><div class="line">            public void onResponse(Call&lt;JokeEntity&gt; call, Response&lt;JokeEntity&gt; response) &#123;</div><div class="line">                JokeEntity jokeEntity = response.body();</div><div class="line">                Logger.i(jokeEntity.toString());</div><div class="line">                if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                    List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                    for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                        Logger.i(subject.toString());</div><div class="line">                    &#125;</div><div class="line">                    textview.setText(data.get(0).toString());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onFailure(Call&lt;JokeEntity&gt; call, Throwable t) &#123;</div><div class="line">                textview.setText(t.getMessage());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onDestroy() &#123;</div><div class="line">        super.onDestroy();</div><div class="line">        if (subscriber!=null)&#123;</div><div class="line">            subscriber.unsubscribe();</div><div class="line">        &#125;</div><div class="line">        if (subscriber2!=null)&#123;</div><div class="line">            subscriber2.unsubscribe();</div><div class="line">        &#125;</div><div class="line">        if (subscriber3!=null)&#123;</div><div class="line">            subscriber3.unsubscribe();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="相同格式的Http请求数据该如何封装"><a href="#相同格式的Http请求数据该如何封装" class="headerlink" title="相同格式的Http请求数据该如何封装"></a>相同格式的Http请求数据该如何封装</h2><p>参考资料  <a href="https://www.zhihu.com/question/39182019" target="_blank" rel="external">RxJava+Retrofit，在联网返回后如何先进行统一的判断？</a></p>
<p>查看封装最终结果 <a href="https://github.com/Javen205/SmartCloud/tree/Tag2" target="_blank" rel="external">选择Tag2</a></p>
<p>实现聚合笑话加载刷新 <a href="https://github.com/Javen205/SmartCloud/tree/Tag3" target="_blank" rel="external">选择Tag3</a></p>
<p>实现干货网福利（图片）接口  <a href="https://github.com/Javen205/SmartCloud/tree/Tag4" target="_blank" rel="external">选择Tag4</a></p>
<h2 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h2><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/SmartCloud/joke.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/girls.jpg" alt="girls"></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/OnLongItemClick.jpg" alt="长按效果图"></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/OnItemClick.jpg" alt="点击效果图"></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/OnItemClick2.jpg" alt="点击效果图2"></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/loading.jpg" alt=""></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/load_error.jpg" alt=""></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/loading.jpg" alt=""></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/load_error.jpg" alt=""></div></div></div></div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[从零开始使用Git]]></title>
      <url>http://javen205.oschina.io/2016/07/31/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8Git/</url>
      <content type="html"><![CDATA[<h2 id="此篇文章是共享资源做记录，我就不重复造轮子了"><a href="#此篇文章是共享资源做记录，我就不重复造轮子了" class="headerlink" title="此篇文章是共享资源做记录，我就不重复造轮子了"></a>此篇文章是共享资源做记录，我就不重复造轮子了</h2><h3 id="什么是Git，Git与GitHub以及码云的区别，如何安转，如何提交编辑代码"><a href="#什么是Git，Git与GitHub以及码云的区别，如何安转，如何提交编辑代码" class="headerlink" title="什么是Git，Git与GitHub以及码云的区别，如何安转，如何提交编辑代码"></a>什么是Git，Git与GitHub以及码云的区别，如何安转，如何提交编辑代码</h3><p>参考地址：<a href="http://stormzhang.com/github/2016/05/25/learn-github-from-zero1/" target="_blank" rel="external">http://stormzhang.com/github/2016/05/25/learn-github-from-zero1/</a></p>
<p>参考地址：<a href="http://blog.csdn.net/marktheone/article/category/6333885" target="_blank" rel="external">http://blog.csdn.net/marktheone/article/category/6333885</a></p>
<h3 id="Git下载地址："><a href="#Git下载地址：" class="headerlink" title="Git下载地址："></a>Git下载地址：</h3><p><a href="https://git-scm.com/download/" target="_blank" rel="external">https://git-scm.com/download/</a></p>
<h3 id="github-使用帮助文档"><a href="#github-使用帮助文档" class="headerlink" title="github 使用帮助文档"></a>github 使用帮助文档</h3><p><a href="https://help.github.com/articles/generating-an-ssh-key/" target="_blank" rel="external">https://help.github.com/articles/generating-an-ssh-key/</a></p>
<h3 id="git-oschina-使用帮助文档"><a href="#git-oschina-使用帮助文档" class="headerlink" title="git.oschina 使用帮助文档"></a>git.oschina 使用帮助文档</h3><p> <a href="http://git.oschina.net/oschina/git-osc/wikis/%E5%B8%AE%E5%8A%A9#ssh-keys" target="_blank" rel="external">http://git.oschina.net/oschina/git-osc/wikis/%E5%B8%AE%E5%8A%A9#ssh-keys</a></p>
<p><strong>Git 学习笔记</strong></p>
<a id="more"></a> 
<ul>
<li><p>配置身份认证</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --user.name=&quot;Javen205&quot;</div><div class="line">git config --user.email=&quot;javen205@163.com&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>创建代码仓库</p>
<p>进入项目目录执行</p>
<figure class="highlight plain"><figcaption><span>init ```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">  创建完成之后目录中就会生成一个隐藏的文件.git文件夹，这个文件夹就是用来记录本地所有的Git操作的。如果你想删除本地的代码库，只需要删除这个文件夹就行。使用 ```ls -al ``` 可以查看隐藏的文件</div><div class="line">  </div><div class="line">- 提交本地代码</div><div class="line"></div><div class="line">  只需要使用add和commit命令就可以了。add是用于把想提交的代码先添加进去，而commit则是真正地去执行添加操作。</div><div class="line">  </div><div class="line">  ``` git add AndroidManifest.xml``` 添加单个文件</div><div class="line">  </div><div class="line">  ``` git add src ``` 添加一个目录</div><div class="line">  </div><div class="line">  ``` git add .```  添加所有的文件 </div><div class="line">  </div><div class="line">  ``` git commit -m &quot;First commit&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>配置忽略文件</p>
<p>创建<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"> 例如：</div><div class="line">```# Built application files</div><div class="line">*.apk</div><div class="line">*.ap_</div><div class="line"></div><div class="line"># Files for the Dalvik VM</div><div class="line">*.dex</div><div class="line"></div><div class="line"># Java class files</div><div class="line">*.class</div><div class="line"></div><div class="line"># Generated files</div><div class="line">bin/</div><div class="line">gen/</div><div class="line"></div><div class="line"># Gradle files</div><div class="line">.gradle/</div><div class="line">build/</div><div class="line"></div><div class="line"># Local configuration file (sdk path, etc)</div><div class="line">local.properties</div><div class="line"></div><div class="line"># Proguard folder generated by Eclipse</div><div class="line">proguard/</div><div class="line"></div><div class="line"># Log Files</div><div class="line">*.log</div><div class="line"></div><div class="line"># Android Studio (InteliJ)</div><div class="line">.idea/</div><div class="line">/.idea/workspace.xml</div><div class="line">*.iml</div><div class="line">*.iws</div><div class="line">*.ipr</div><div class="line">/*/out</div><div class="line">/*/build</div><div class="line">/*/*/production</div><div class="line"></div><div class="line">#OSx</div><div class="line">.DS_Store</div></pre></td></tr></table></figure></p>
</li>
<li><p>查看上次修改的内容</p>
 <figure class="highlight plain"><figcaption><span>stauts```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">- 查看更改的内容</div><div class="line"></div><div class="line">  ``` git diff</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>撤销未提交的修改</p>
<figure class="highlight plain"><figcaption><span>checkout xxx.java```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">- 取消添加</div><div class="line">  </div><div class="line">  ``` git reset HEAD xxx.java</div></pre></td></tr></table></figure>
</li>
<li><p>查看提交记录</p>
<figure class="highlight plain"><figcaption><span>log ``` </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line">- 查看一条提交记录</div><div class="line"></div><div class="line">  ``` git log id -1``` </div><div class="line"> </div><div class="line"> - 查看一条提交的详细记录</div><div class="line"></div><div class="line">   ``` git log id -1 -p``` </div><div class="line">   </div><div class="line">- 删除</div><div class="line"></div><div class="line">   ``` git rm src/com/javen205/MainActivity.java</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>提交同步</p>
<p> <code>git push origin master</code></p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Contos/Linux 安装FTP详解]]></title>
      <url>http://javen205.oschina.io/2016/07/16/Centos%20%E5%AE%89%E8%A3%85FTP%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h3 id="安装FTP"><a href="#安装FTP" class="headerlink" title="安装FTP"></a>安装FTP</h3><h2 id="使用yum安装"><a href="#使用yum安装" class="headerlink" title="使用yum安装"></a>使用yum安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -yinstall ftp vsftpd</div></pre></td></tr></table></figure>
<h2 id="使用RPM安装"><a href="#使用RPM安装" class="headerlink" title="使用RPM安装"></a>使用RPM安装</h2><p>需要安装一下两个包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ftp-0.17-66.el7.x86_64</div><div class="line"></div><div class="line">vsftpd-3.0.2-9.el7.x86_64</div></pre></td></tr></table></figure>
<a id="more"></a> 
<p>另外需要安装db包，用来加密虚拟用户的账户信息（这个包在centos7中默认已经安装了）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -qf/usr/bin/db_load libdb-utils-5.3.21-17.el7_0.1.x86_64</div></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h2 id="创建Ftp文件保存路径"><a href="#创建Ftp文件保存路径" class="headerlink" title="创建Ftp文件保存路径"></a>创建Ftp文件保存路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir/ftp/open</div></pre></td></tr></table></figure>
<h2 id="添加测试文件"><a href="#添加测试文件" class="headerlink" title="添加测试文件"></a>添加测试文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">echo opentest &gt; /ftp/open/open.txt</div><div class="line"></div><div class="line">touch /ftp/open/anontest.txt</div></pre></td></tr></table></figure>
<h2 id="查看配置文件所在路径"><a href="#查看配置文件所在路径" class="headerlink" title="查看配置文件所在路径"></a>查看配置文件所在路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">rpm -qc vsftpd</div><div class="line"></div><div class="line">/etc/logrotate.d/vsftpd</div><div class="line">/etc/pam.d/vsftpd</div><div class="line">/etc/vsftpd/ftpusers</div><div class="line">/etc/vsftpd/user_list</div><div class="line">/etc/vsftpd/vsftpd.conf</div></pre></td></tr></table></figure>
<h2 id="备份原有配置文件"><a href="#备份原有配置文件" class="headerlink" title="备份原有配置文件"></a>备份原有配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp vsftpd.conf vsftpd.conf.origin</div></pre></td></tr></table></figure>
<h2 id="创建密码明文文件"><a href="#创建密码明文文件" class="headerlink" title="创建密码明文文件"></a>创建密码明文文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/vsftpd/vftpuser.txt</div></pre></td></tr></table></figure>
<p>添加如下类容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">javen</div><div class="line">javen123</div><div class="line">test</div><div class="line">test123</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：基数行是用户名；偶数行是密码</p>
</blockquote>
<h2 id="根据明文创建密码DB文件"><a href="#根据明文创建密码DB文件" class="headerlink" title="根据明文创建密码DB文件"></a>根据明文创建密码DB文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db_load -T -t hash -f /etc/vsftpd/vftpuser.txt  /etc/vsftpd/vftpuser.db</div></pre></td></tr></table></figure>
<h2 id="查看密码数据文件"><a href="#查看密码数据文件" class="headerlink" title="查看密码数据文件"></a>查看密码数据文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">file /etc/vsftpd/vftpuser.db</div></pre></td></tr></table></figure>
<p>输出结果如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/vsftpd/vftpuser.db: Berkeley DB (Hash, version 9, native byte-order)</div></pre></td></tr></table></figure>
<h2 id="创建vftpd的guest账户"><a href="#创建vftpd的guest账户" class="headerlink" title="创建vftpd的guest账户"></a>创建vftpd的guest账户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd -d /ftp/private -s /sbin/nologin vftpuser</div></pre></td></tr></table></figure>
<h2 id="编辑生成虚拟用户所需的PAM-配置文件"><a href="#编辑生成虚拟用户所需的PAM-配置文件" class="headerlink" title="编辑生成虚拟用户所需的PAM 配置文件"></a>编辑生成虚拟用户所需的PAM 配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/pam.d/vsftpd</div></pre></td></tr></table></figure>
<p>再将auth及account的所有配置行行均注释掉，添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">auth required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div><div class="line"></div><div class="line">account required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div></pre></td></tr></table></figure>
<p>如果你是64位系统则添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div><div class="line"></div><div class="line">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div></pre></td></tr></table></figure>
<p>如何查询系统的版本？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getconf LONG_BIT</div></pre></td></tr></table></figure>
<blockquote>
<p>如果没有填写出错将会出现以下异常：</p>
<p>530 Login incorrect错误</p>
<p>查看日志<br>tail -f /var/log/secure</p>
<p>发现 PAM unable to dlopen(/lib/security/pam_userdb.so): /lib/security/pam_userdb.so: cannot open shared object file: No such file or directory</p>
<p>原来pam_userdb.so在/lib64/security/pam_userdb.so</p>
</blockquote>
<h2 id="最终的配置"><a href="#最终的配置" class="headerlink" title="最终的配置"></a>最终的配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#%PAM-1.0</div><div class="line">#session    optional     pam_keyinit.so    force revoke</div><div class="line">#auth       required    pam_listfile.so item=user sense=deny file=/etc/vsftpd/ftpusers onerr=succeed</div><div class="line">#auth       required    pam_shells.so</div><div class="line">#auth       include     password-auth</div><div class="line">#account    include     password-auth</div><div class="line">#session    required     pam_loginuid.so</div><div class="line">#session    include     password-auth</div><div class="line">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div><div class="line">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div></pre></td></tr></table></figure>
<h2 id="修改vsftpd-conf配置文件"><a href="#修改vsftpd-conf配置文件" class="headerlink" title="修改vsftpd.conf配置文件"></a>修改vsftpd.conf配置文件</h2><p>在最后添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">anon_root=/ftp/open</div><div class="line">virtual_use_local_privs=YES</div><div class="line">guest_enable=YES</div><div class="line">guest_username=vftpuser</div><div class="line">chroot_local_user=YES</div><div class="line">allow_writeable_chroot=YES</div></pre></td></tr></table></figure>
<p>详细配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line"># Example config file /etc/vsftpd/vsftpd.conf</div><div class="line">#</div><div class="line"># The default compiled in settings are fairly paranoid. This sample file</div><div class="line"># loosens things up a bit, to make the ftp daemon more usable.</div><div class="line"># Please see vsftpd.conf.5 for all compiled in defaults.</div><div class="line">#</div><div class="line"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</div><div class="line"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd&apos;s</div><div class="line"># capabilities.</div><div class="line">#</div><div class="line"># Allow anonymous FTP? (Beware - allowed by default if you comment this out).</div><div class="line">anonymous_enable=NO</div><div class="line">#</div><div class="line"># Uncomment this to allow local users to log in.</div><div class="line"># When SELinux is enforcing check for SE bool ftp_home_dir</div><div class="line">local_enable=YES</div><div class="line">#</div><div class="line"># Uncomment this to enable any form of FTP write command.</div><div class="line">write_enable=YES</div><div class="line">#</div><div class="line"># Default umask for local users is 077. You may wish to change this to 022,</div><div class="line"># if your users expect that (022 is used by most other ftpd&apos;s)</div><div class="line">local_umask=022</div><div class="line">#</div><div class="line"># Uncomment this to allow the anonymous FTP user to upload files. This only</div><div class="line"># has an effect if the above global write enable is activated. Also, you will</div><div class="line"># obviously need to create a directory writable by the FTP user.</div><div class="line"># When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access</div><div class="line">anon_upload_enable=YES</div><div class="line">#</div><div class="line"># Uncomment this if you want the anonymous FTP user to be able to create</div><div class="line"># new directories.</div><div class="line">anon_mkdir_write_enable=YES</div><div class="line">#</div><div class="line"># Activate directory messages - messages given to remote users when they</div><div class="line"># go into a certain directory.</div><div class="line">dirmessage_enable=YES</div><div class="line">#</div><div class="line"># Activate logging of uploads/downloads.</div><div class="line">xferlog_enable=YES</div><div class="line">#</div><div class="line"># Make sure PORT transfer connections originate from port 20 (ftp-data).</div><div class="line">connect_from_port_20=YES</div><div class="line">#</div><div class="line"># If you want, you can arrange for uploaded anonymous files to be owned by</div><div class="line"># a different user. Note! Using &quot;root&quot; for uploaded files is not</div><div class="line"># recommended!</div><div class="line">#chown_uploads=YES</div><div class="line">#chown_username=whoever</div><div class="line">#</div><div class="line"># You may override where the log file goes if you like. The default is shown</div><div class="line"># below.</div><div class="line">xferlog_file=/var/log/xferlog</div><div class="line">#</div><div class="line"># If you want, you can have your log file in standard ftpd xferlog format.</div><div class="line"># Note that the default log file location is /var/log/xferlog in this case.</div><div class="line">xferlog_std_format=YES</div><div class="line">#</div><div class="line"># You may change the default value for timing out an idle session.</div><div class="line">#idle_session_timeout=600</div><div class="line">#</div><div class="line"># You may change the default value for timing out a data connection.</div><div class="line">#data_connection_timeout=120</div><div class="line">#</div><div class="line"># It is recommended that you define on your system a unique user which the</div><div class="line"># ftp server can use as a totally isolated and unprivileged user.</div><div class="line">#nopriv_user=ftpsecure</div><div class="line">#</div><div class="line"># Enable this and the server will recognise asynchronous ABOR requests. Not</div><div class="line"># recommended for security (the code is non-trivial). Not enabling it,</div><div class="line"># however, may confuse older FTP clients.</div><div class="line">#async_abor_enable=YES</div><div class="line">#</div><div class="line"># By default the server will pretend to allow ASCII mode but in fact ignore</div><div class="line"># the request. Turn on the below options to have the server actually do ASCII</div><div class="line"># mangling on files when in ASCII mode.</div><div class="line"># Beware that on some FTP servers, ASCII support allows a denial of service</div><div class="line"># attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd</div><div class="line"># predicted this attack and has always been safe, reporting the size of the</div><div class="line"># raw file.</div><div class="line"># ASCII mangling is a horrible feature of the protocol.</div><div class="line">#ascii_upload_enable=YES</div><div class="line">#ascii_download_enable=YES</div><div class="line">#</div><div class="line"># You may fully customise the login banner string:</div><div class="line">ftpd_banner=Welcome to blah FTP service.</div><div class="line">#</div><div class="line"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</div><div class="line"># useful for combatting certain DoS attacks.</div><div class="line">#deny_email_enable=YES</div><div class="line"># (default follows)</div><div class="line">#banned_email_file=/etc/vsftpd/banned_emails</div><div class="line">#</div><div class="line"># You may specify an explicit list of local users to chroot() to their home</div><div class="line"># directory. If chroot_local_user is YES, then this list becomes a list of</div><div class="line"># users to NOT chroot().</div><div class="line"># (Warning! chroot&apos;ing can be very dangerous. If using chroot, make sure that</div><div class="line"># the user does not have write access to the top level directory within the</div><div class="line"># chroot)</div><div class="line">#chroot_local_user=YES</div><div class="line">#chroot_list_enable=YES</div><div class="line"># (default follows)</div><div class="line">#chroot_list_file=/etc/vsftpd/chroot_list</div><div class="line">#</div><div class="line"># You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by</div><div class="line"># default to avoid remote users being able to cause excessive I/O on large</div><div class="line"># sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume</div><div class="line"># the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.</div><div class="line">#ls_recurse_enable=YES</div><div class="line">#</div><div class="line"># When &quot;listen&quot; directive is enabled, vsftpd runs in standalone mode and</div><div class="line"># listens on IPv4 sockets. This directive cannot be used in conjunction</div><div class="line"># with the listen_ipv6 directive.</div><div class="line">listen=YES</div><div class="line">#</div><div class="line"># This directive enables listening on IPv6 sockets. By default, listening</div><div class="line"># on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6</div><div class="line"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</div><div class="line"># sockets. If you want that (perhaps because you want to listen on specific</div><div class="line"># addresses) then you must run two copies of vsftpd with two configuration</div><div class="line"># files.</div><div class="line"># Make sure, that one of the listen options is commented !!</div><div class="line">#listen_ipv6=YES</div><div class="line"></div><div class="line">pam_service_name=vsftpd</div><div class="line">userlist_enable=YES</div><div class="line">tcp_wrappers=YES</div><div class="line"></div><div class="line">anon_root=/home/ftp/open</div><div class="line">virtual_use_local_privs=YES</div><div class="line">guest_enable=YES</div><div class="line">guest_username=vftpuser</div><div class="line">chroot_local_user=YES</div><div class="line">allow_writeable_chroot=YES</div></pre></td></tr></table></figure>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start vsftpd</div></pre></td></tr></table></figure>
<h3 id="查看目前的状态"><a href="#查看目前的状态" class="headerlink" title="查看目前的状态"></a>查看目前的状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl status vsftpd</div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftp localhost</div></pre></td></tr></table></figure>
<p>输入用户名以及密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@iZ94hjirr10Z vsftpd]# ftp localhost</div><div class="line">Trying 127.0.0.1...</div><div class="line">Connected to localhost (127.0.0.1).</div><div class="line">220 Welcome to blah FTP service.</div><div class="line">Name (localhost:root): javen</div><div class="line">331 Please specify the password.</div><div class="line">Password:</div><div class="line">230 Login successful.</div><div class="line">Remote system type is UNIX.</div><div class="line">Using binary mode to transfer files.</div><div class="line">ftp&gt; ls</div><div class="line">227 Entering Passive Mode (127,0,0,1,38,217).</div><div class="line">150 Here comes the directory listing.</div><div class="line">-rw-r--r--    1 1000     1000        11641 Jul 13 07:22 00_1.jpg</div><div class="line">-rw-r--r--    1 1000     1000        13024 Jul 13 07:23 00_2.jpg</div><div class="line">-rw-r--r--    1 1000     1000        10989 Jul 13 07:23 00_3.jpg</div><div class="line">-rwxrwxrwx    1 1000     1000           10 Jul 05 06:14 ftptest.txt</div><div class="line">drwxrwxrwx    2 1000     1000        20480 Jul 16 06:15 images</div><div class="line">-rw-r--r--    1 0        0              12 Jul 05 06:13 ss</div><div class="line">226 Directory send OK.</div><div class="line">ftp&gt; bye</div><div class="line">221 Goodbye.</div></pre></td></tr></table></figure>
<p>以上是配置的详细教程，有问题请在评论区留言。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux防火墙]]></title>
      <url>http://javen205.oschina.io/2016/07/16/Linux%E9%98%B2%E7%81%AB%E5%A2%99/</url>
      <content type="html"><![CDATA[<h3 id="重启后生效"><a href="#重启后生效" class="headerlink" title="重启后生效"></a>重启后生效</h3><p>开启：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig iptables on</div></pre></td></tr></table></figure></p>
<p>关闭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig iptables off</div></pre></td></tr></table></figure></p>
<h3 id="即时生效，重启后失效"><a href="#即时生效，重启后失效" class="headerlink" title="即时生效，重启后失效"></a>即时生效，重启后失效</h3><p>开启：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables start</div></pre></td></tr></table></figure></p>
<p>关闭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables stop</div></pre></td></tr></table></figure></p>
<blockquote>
<p>需要说明的是对于Linux下的其它服务都可以用以上命令执行开启和关闭操作。<br><a id="more"></a> </p>
<h3 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h3></blockquote>
<p>在开启了防火墙时，做如下设置，开启相关端口，修改/etc/sysconfig/iptables 文件，添加以下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT </div><div class="line"></div><div class="line">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下启动与关闭Oracle]]></title>
      <url>http://javen205.oschina.io/2016/07/16/Linux%E4%B8%8B%E5%90%AF%E5%8A%A8%E4%B8%8E%E5%85%B3%E9%97%ADOracle/</url>
      <content type="html"><![CDATA[<h3 id="linux下启动oracle"><a href="#linux下启动oracle" class="headerlink" title="linux下启动oracle"></a>linux下启动oracle</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">su - oracle //切换到Oracle用户</div><div class="line">sqlplus /nolog //启动SQLPLUS</div><div class="line">conn /as sysdba //登陆到本机的数据库 </div><div class="line">startup //启动</div><div class="line">exit </div><div class="line">lsnrctl start  //启动监听</div><div class="line">exit</div></pre></td></tr></table></figure>
<h3 id="linux下关闭oracle"><a href="#linux下关闭oracle" class="headerlink" title="linux下关闭oracle"></a>linux下关闭oracle</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">su - oracle </div><div class="line"></div><div class="line">sqlplus /nolog </div><div class="line"></div><div class="line">conn /as sysdba </div><div class="line"></div><div class="line">shutdown immediate //关闭实例</div><div class="line"></div><div class="line">exit </div><div class="line"></div><div class="line">lsnrctl stop </div><div class="line"></div><div class="line">exit</div></pre></td></tr></table></figure>
<a id="more"></a> 
<h3 id="启动监听器"><a href="#启动监听器" class="headerlink" title="启动监听器"></a>启动监听器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsnrctl start</div></pre></td></tr></table></figure>
<h3 id="停止监听器"><a href="#停止监听器" class="headerlink" title="停止监听器"></a>停止监听器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsnrctl stop</div></pre></td></tr></table></figure>
<h3 id="查看监听器状态"><a href="#查看监听器状态" class="headerlink" title="查看监听器状态"></a>查看监听器状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsnrctl status</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下定时删除指定目下n天前的文件]]></title>
      <url>http://javen205.oschina.io/2016/07/10/Linux%E4%B8%8B%E5%AE%9A%E6%97%B6%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E7%9B%AE%E4%B8%8Bn%E5%A4%A9%E5%89%8D%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">* 2 * * * find /home/ftp/private/* ctime 1 -exec rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure>
<h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><p>表示每天两点删除<code>/home/ftp/private/</code>目录下一天前创建的所有文件，不删除文件夹<code>private</code>，如果这个文件夹也要删除的话用<code>* 2 * * * find /home/ftp/private ctime 1 -exec rm -rf {} \;</code></p>
<a id="more"></a> 
<p>其中</p>
<p><code>* 6 * * *</code></p>
<ul>
<li><p>第一个*号表示时间中的 分钟  取值范围：0-59</p>
</li>
<li><p>第二个*号表示时间中的 小时  取值范围：0-23</p>
</li>
<li><p>第三个*号表示一个月中的第几天，取值范围：1-31</p>
</li>
<li><p>第四个*号表示一年中的第几个月，取值范围：1-12</p>
</li>
<li><p>第五个*号表示一个星期中的第几天，以星期天开始依次的取值为0～7，0、7都表示星期天</p>
</li>
</ul>
<p><code>ctime</code> 表示创建时间，1 表示一天前.</p>
<blockquote>
<p>其实Linux中不存在文件创建时间，只有访问时间（<code>atime</code>）、修改时间（<code>mtime</code>）、状态改动时间（<code>ctime</code>） </p>
<p>可以通过命令 <code>stat + 文件路径</code> 查看时间</p>
</blockquote>
<h3 id="删除目录下的指定文件"><a href="#删除目录下的指定文件" class="headerlink" title="删除目录下的指定文件"></a>删除目录下的指定文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find 对应目录 -mtime +天数 -name &quot;文件名&quot; -exec rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure>
<h3 id="删除目录下的指定类型文件"><a href="#删除目录下的指定类型文件" class="headerlink" title="删除目录下的指定类型文件"></a>删除目录下的指定类型文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find 对应目录 -mtime +天数 -name &quot;*.jpg&quot; -exec rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure>
<p>栗子如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">* 2 * * * find /home/ftp/private/images -mtime +5 -name &quot;*.jpg&quot; -exec rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure></p>
<h3 id="启动定时任务"><a href="#启动定时任务" class="headerlink" title="启动定时任务"></a>启动定时任务</h3><p>首先要创建一个<code>crontab</code>,输入命令<code>crontab -e</code> 进入编辑界面，编写你的定时任务，即上面的命令。</p>
<p>也可以不使用<code>crontab -e</code> 命令。可以创建<code>crontab</code>配置文件，其他任何文本编辑器编写命令序列，比如文件名为<code>abc.cron</code>，然后使用命令：<code>crontab abc.cron</code>将命令序列添加到<code>crontab</code>中。</p>
<p>创建好<code>crontab</code>之后，就可以把上面的命令写道 <code>/etc/crontab</code>这个文件中<br>通过<code>crontab /etc/crontab</code> 命令启动这个定时任务，可以通过 <code>crontab -l</code> 命令查看当下的定时任务</p>
<h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><p>为保险起见，最好再重启服务，之后查看下crontab的服务状态<br>命令如下：</p>
<p>查看crontab服务状态：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service crond status</div></pre></td></tr></table></figure>
<p>启动服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service crond start</div></pre></td></tr></table></figure></p>
<p>关闭服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service crond stop</div></pre></td></tr></table></figure></p>
<p>重启服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service crond restart</div></pre></td></tr></table></figure></p>
<p>以上就是定时删除指定目下n天前的文件操作流程。</p>
<blockquote>
<p>如有问题请再评论区留言</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[美图欣赏(一)]]></title>
      <url>http://javen205.oschina.io/2016/07/04/%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/</url>
      <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/beautiful/3.jpeg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/4.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/6.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/9.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/10.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/13.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/15.jpeg" alt=""></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux/Centos 局域网内文件传送]]></title>
      <url>http://javen205.oschina.io/2016/07/03/linux%20%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E6%96%87%E4%BB%B6%E4%BC%A0%E9%80%81/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Linux scp命令用于Linux之间复制文件和目录，具体如何使用这里好好介绍一下，从本地复制到远程、从远程复制到本地是两种使用方式。这里有具体举例</p>
</blockquote>
<p>==================</p>
<h3 id="Linux-scp-命令"><a href="#Linux-scp-命令" class="headerlink" title="Linux scp 命令"></a>Linux scp 命令</h3><p>==================</p>
<p>scp 可以在 2个 linux 主机间复制文件；</p>
<p>命令基本格式：</p>
<p>scp [可选参数] file_source file_target</p>
<p>======<br><a id="more"></a> </p>
<h2 id="从-本地-复制到-远程"><a href="#从-本地-复制到-远程" class="headerlink" title="从 本地 复制到 远程"></a>从 本地 复制到 远程</h2><p>======</p>
<h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><ul>
<li>命令格式：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_username@remote_ip:remote_folder</div></pre></td></tr></table></figure>
</li>
</ul>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_username@remote_ip:remote_file</div></pre></td></tr></table></figure></p>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_ip:remote_folder</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_ip:remote_file</div></pre></td></tr></table></figure>
<blockquote>
<p>第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；</p>
<p>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名；</p>
</blockquote>
<ul>
<li>例子：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /home/space/music/1.mp3 root@192.168.0.168:/home/root/others/music</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /home/space/music/1.mp3 root@192.168.0.168:/home/root/others/music/001.mp3</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /home/space/music/1.mp3 192.168.0.168:/home/root/others/music</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /home/space/music/1.mp3 192.168.0.168:/home/root/others/music/001.mp3</div></pre></td></tr></table></figure>
<h2 id="复制目录"><a href="#复制目录" class="headerlink" title="复制目录"></a>复制目录</h2><ul>
<li>命令格式:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -r local_folder remote_username@remote_ip:remote_folder</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -r local_folder remote_ip:remote_folder</div></pre></td></tr></table></figure></p>
<blockquote>
<p>第1个指定了用户名，命令执行后需要再输入密码；</p>
<p>第2个没有指定用户名，命令执行后需要输入用户名和密码；</p>
</blockquote>
<ul>
<li>例子：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp -r /home/space/music/ root@192.168.0.168:/home/root/others/</div><div class="line"></div><div class="line">scp -r /home/space/music/ 192.168.0.168:/home/root/others/</div></pre></td></tr></table></figure>
<blockquote>
<p>上面 命令 将 本地 music 目录 复制 到 远程 others 目录下，即复制后远程有 /home/root/others/music/ 目录</p>
</blockquote>
<p>======</p>
<h2 id="从-远程-复制到-本地"><a href="#从-远程-复制到-本地" class="headerlink" title="从 远程 复制到 本地"></a>从 远程 复制到 本地</h2><p>======</p>
<p>从 远程 复制到 本地，只要将 从 本地 复制到 远程 的命令 的 后2个参数 调换顺序 即可；</p>
<ul>
<li>例如：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp root@192.168.1.168:/home/root/others/music /home/space/music/1.mp3</div><div class="line"></div><div class="line">scp -r 192.168.1.168:/home/root/others/ /home/space/music/</div></pre></td></tr></table></figure>
<p>最简单的应用如下 :</p>
<p>scp 本地用户名 @IP 地址 : 文件名 1 远程用户名 @IP 地址 : 文件名 2</p>
<p>[ 本地用户名 @IP 地址 :] 可以不输入 , 可能需要输入远程用户名所对应的密码 .</p>
<p>可能有用的几个参数 :</p>
<p>-v 和大多数 linux 命令中的 -v 意思一样 , 用来显示进度 . 可以用来查看连接 , 认证 , 或是配置错误 .</p>
<p>-C 使能压缩选项 .</p>
<p>-P 选择端口 . 注意 -p 已经被 rcp 使用 .</p>
<p>-4 强行使用 IPV4 地址 .</p>
<p>-6 强行使用 IPV6 地址 .</p>
<p>Linux scp命令的使用方法应该可以满足大家对Linux文件和目录的复制使用了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux/Centos mysql 更改MySQL数据库目录位置]]></title>
      <url>http://javen205.oschina.io/2016/07/03/linux%20mysql%20%E6%9B%B4%E6%94%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%AE%E5%BD%95%E4%BD%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<blockquote>
<p>引言：MySQL默认的数据文件存储目录为/var/lib/mysql。假如要把目录移到/home/data下该如何操作呢？</p>
</blockquote>
<h3 id="1、home目录下建立data目录"><a href="#1、home目录下建立data目录" class="headerlink" title="1、home目录下建立data目录"></a>1、home目录下建立data目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /home</div><div class="line">mkdir data</div></pre></td></tr></table></figure>
<h3 id="2、把MySQL服务进程停掉"><a href="#2、把MySQL服务进程停掉" class="headerlink" title="2、把MySQL服务进程停掉"></a>2、把MySQL服务进程停掉</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqladmin -u root -p shutdown</div></pre></td></tr></table></figure>
<h3 id="3、把-var-lib-mysql整个目录移到-home-data"><a href="#3、把-var-lib-mysql整个目录移到-home-data" class="headerlink" title="3、把/var/lib/mysql整个目录移到/home/data"></a>3、把/var/lib/mysql整个目录移到/home/data</h3><a id="more"></a> 
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv /var/lib/mysql　/home/data/</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp  -R /var/lib/mysql　/home/data/</div></pre></td></tr></table></figure></p>
<p>这样就把MySQL的数据文件移动到了/home/data/mysql下</p>
<h3 id="4、找到my-cnf配置文件"><a href="#4、找到my-cnf配置文件" class="headerlink" title="4、找到my.cnf配置文件"></a>4、找到my.cnf配置文件</h3><p>如果/etc/目录下没有my.cnf配置文件，请到/usr/share/mysql/下找到*.cnf文件，拷贝其中一个到/etc/并改名为my.cnf)中。</p>
<p>命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># cp /usr/share/mysql/my-medium.cnf　/etc/my.cnf</div></pre></td></tr></table></figure></p>
<h3 id="5、编辑MySQL的配置文件-etc-my-cnf"><a href="#5、编辑MySQL的配置文件-etc-my-cnf" class="headerlink" title="5、编辑MySQL的配置文件/etc/my.cnf"></a>5、编辑MySQL的配置文件/etc/my.cnf</h3><p>为保证MySQL能够正常工作，需要指明mysql.sock文件的产生位置。修改socket=/var/lib/mysql/mysql.sock一行中等号右边的值为：/home/mysql/mysql.sock 。</p>
<p>(用vi工具编辑my.cnf文件，找到下列数据修改之)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi　 my.cnf</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># The MySQL server</div><div class="line">　　　 [mysqld]</div><div class="line">　　　 port　　　= 3306</div><div class="line">　　　 #socket　 = /var/lib/mysql/mysql.sock #（原内容，为了更稳妥用“#”注释此行）</div><div class="line">　　　 socket　 = /home/data/mysql/mysql.sock　　　#（加上此行）</div></pre></td></tr></table></figure>
<h3 id="6、修改MySQL启动脚本-etc-init-d-mysql有些版本在my-cnf文件"><a href="#6、修改MySQL启动脚本-etc-init-d-mysql有些版本在my-cnf文件" class="headerlink" title="6、修改MySQL启动脚本/etc/init.d/mysql有些版本在my.cnf文件"></a>6、修改MySQL启动脚本/etc/init.d/mysql有些版本在my.cnf文件</h3><p>最后，需要修改MySQL启动脚本/etc/init.d/mysql，把其中datadir=/var/lib/mysql一行中，等号右边的路径改成你现在的实际存放路径：home/data/mysql。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi　/etc/init.d/mysql</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#datadir=/var/lib/mysql　　　　#（注释此行）</div><div class="line">datadir=/home/data/mysql　#(加上此行）</div></pre></td></tr></table></figure>
<h3 id="7、重新启动MySQL服务"><a href="#7、重新启动MySQL服务" class="headerlink" title="7、重新启动MySQL服务"></a>7、重新启动MySQL服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/mysqld start</div></pre></td></tr></table></figure></p>
<p>如果工作正常移动就成功了，否则对照前面的7步再检查一下。</p>
<blockquote>
<p>注意目录的属主和权限。 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R mysql:mysql /home/data/mysql</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Centos7下使用yum安装mysql]]></title>
      <url>http://javen205.oschina.io/2016/07/03/centos7%E4%B8%8B%E4%BD%BF%E7%94%A8yum%E5%AE%89%E8%A3%85mysql/</url>
      <content type="html"><![CDATA[<blockquote>
<p>引言：CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源。</p>
</blockquote>
<h2 id="官网下载地址"><a href="#官网下载地址" class="headerlink" title="官网下载地址"></a>官网下载地址</h2><p>官网yum详细介绍地址：<a href="http://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="external">http://dev.mysql.com/downloads/repo/yum/</a></p>
<blockquote>
<p>找到对应的版本下载安装</p>
</blockquote>
<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><h3 id="下载mysql的repo源"><a href="#下载mysql的repo源" class="headerlink" title="下载mysql的repo源"></a>下载mysql的repo源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</div></pre></td></tr></table></figure>
<h3 id="安装mysql-community-release-el7-5-noarch-rpm包"><a href="#安装mysql-community-release-el7-5-noarch-rpm包" class="headerlink" title="安装mysql-community-release-el7-5.noarch.rpm包"></a>安装mysql-community-release-el7-5.noarch.rpm包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</div></pre></td></tr></table></figure>
<a id="more"></a> 
<h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-community-server</div></pre></td></tr></table></figure>
<p>成功安装之后重启mysql服务</p>
<p>查看mysql进程：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#ps -ef | grep mysqld </div><div class="line"># service mysqld restart 或者 # service mysql restart</div></pre></td></tr></table></figure>
<p>根据步骤安装就可以了，不过安装完成后，没有密码，需要重置密码。</p>
<h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># mysql -u root</div><div class="line">mysql &gt; use mysql;</div><div class="line">mysql&gt; set password for ‘root’@‘localhost’ = password(&apos;root123&apos;);</div><div class="line">mysql&gt;flush privileges;</div><div class="line">mysql&gt; exit</div></pre></td></tr></table></figure>
<h3 id="开放3306端口"><a href="#开放3306端口" class="headerlink" title="开放3306端口"></a>开放3306端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysconfig/iptables</div></pre></td></tr></table></figure>
<p>添加以下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</div></pre></td></tr></table></figure>
<h3 id="授权其他机器登陆"><a href="#授权其他机器登陆" class="headerlink" title="授权其他机器登陆"></a>授权其他机器登陆</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;mypassword&apos; WITH GRANT OPTION;</div><div class="line"></div><div class="line">FLUSH   PRIVILEGES;</div></pre></td></tr></table></figure>
<h3 id="mysql的几个重要目录"><a href="#mysql的几个重要目录" class="headerlink" title="mysql的几个重要目录"></a>mysql的几个重要目录</h3><ul>
<li><p>数据库目录
　　　</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/var/lib/mysql/</div></pre></td></tr></table></figure>
</li>
<li><p>配置文件</p>
<p>  /usr/share /mysql（mysql.server命令及配置文件）</p>
</li>
</ul>
<ul>
<li>相关命令<br>　<br>/usr/bin（mysqladmin mysqldump等命令）</li>
<li><p>启动脚本</p>
<p>  /etc/rc.d/init.d/（启动脚本文件mysql的目录）</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 安转JDK]]></title>
      <url>http://javen205.oschina.io/2016/07/03/Linux%E5%AE%89%E8%A3%85JDK/</url>
      <content type="html"><![CDATA[<h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><p>Ubuntu版本：ubuntukylin-14.04.1-desktop-amd64</p>
<p>JDK版本：jdk1.8.0_60</p>
<p>安装目录：/usr/local/development/jdk1.8.0_60</p>
<blockquote>
<p>其实不管什么版本配置的方法都一样</p>
</blockquote>
<h3 id="JDK8下载地址"><a href="#JDK8下载地址" class="headerlink" title="JDK8下载地址"></a>JDK8下载地址</h3><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>
<blockquote>
<p>或者去官网下载对应的版本</p>
</blockquote>
<p>下载如下图：</p>
<p><img src="http://images2015.cnblogs.com/blog/441423/201509/441423-20150901184232435-325800184.png" alt="image"><br><a id="more"></a> </p>
<h3 id="解压到安转目录"><a href="#解压到安转目录" class="headerlink" title="解压到安转目录"></a>解压到安转目录</h3><p><img src="http://images2015.cnblogs.com/blog/441423/201509/441423-20150901185118591-1444525076.png" alt="image"></p>
<h3 id="命令解压到对应的目录"><a href="#命令解压到对应的目录" class="headerlink" title="命令解压到对应的目录"></a>命令解压到对应的目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf jdk_xxx.tar.gz   /usr/local/devlopment</div></pre></td></tr></table></figure>
<h3 id="配置java的环境"><a href="#配置java的环境" class="headerlink" title="配置java的环境"></a>配置java的环境</h3><p>创建文件<code>/etc/profile.d/development.sh</code>，将下面的内容复制到该文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/local/development/jdk1.8.0_60</div><div class="line">export JRE_HOME=$JAVA_HOME/jre</div><div class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH</div><div class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</div></pre></td></tr></table></figure>
<h3 id="检查JDK是否安装成功"><a href="#检查JDK是否安装成功" class="headerlink" title="检查JDK是否安装成功"></a>检查JDK是否安装成功</h3><p>重启电脑（source /etc/profile）</p>
<p> <code>java -version</code> 检查JDK版本。</p>
<h2 id="技巧一"><a href="#技巧一" class="headerlink" title="技巧一"></a>技巧一</h2><p> <code>使用development.sh设置环境变量</code></p>
<p> 网络上很多关于设置JDK环境变量的方法，都是说修改/etc/environment，/etc/profile，~/,bash_profile等文件。</p>
<p>　　其实如果打开/etc/profile，在最后我们可以发现有这样一段代码：
　　</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">f [ -d /etc/profile.d ]; then</div><div class="line">  for i in /etc/profile.d/*.sh; do</div><div class="line">    if [ -r $i ]; then</div><div class="line">      . $i</div><div class="line">    fi</div><div class="line">  done</div><div class="line">  unset i</div><div class="line">fi</div></pre></td></tr></table></figure>
<blockquote>
<p>也就是说，在/etc/profile执行的最后，它会自动的执行/etc/profile.d目录下的所有可读的文件。这就是我们将设置JDK环境变量的工作放在/etc/profile.d/development.sh的原因，可以不用修改操作系统自带的/etc/profile内容，方便系统的移植。</p>
</blockquote>
<h2 id="技巧二"><a href="#技巧二" class="headerlink" title="技巧二"></a>技巧二</h2><p><code>将development.sh放到/usr/local/profile.d</code></p>
<blockquote>
<p>我的系统/usr/local挂载点是一个单独的磁盘分区，这样做的目的是方便系统的维护。/usr/local目录除了存放安装的软件以外，其实还可以将配置文件放在这个目录下面，例如上面的development.sh，这样重装系统的时候就不需要重做该文件。所以，可以新建目录/usr/local/profile.d，然后将development.sh复制到该新目录。至于怎么放到/etc/profile.d下面，我觉得可以采用符号链接的方式。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /ect/profile.d</div><div class="line">sudo ln -s /usr/local/profile.d/development.sh</div></pre></td></tr></table></figure>
<p>============================</p>
<p>拓展：配置tomcat自启动 </p>
<p>============================</p>
<p>开机启动程序的脚本要放在哪个目录下</p>
<p>Ubentu 目录为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/</div></pre></td></tr></table></figure></p>
<p>centos 目录为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/rc.d/rc.local</div></pre></td></tr></table></figure></p>
<p>在末尾添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/local/development/jdk1.8.0_60</div><div class="line">$JAVA_HOME/bin/startup.sh</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[捐赠、打赏列表]]></title>
      <url>http://javen205.oschina.io/2016/07/02/%E6%89%93%E8%B5%8F%E6%8D%90%E8%B5%A0%E5%88%97%E8%A1%A8/</url>
      <content type="html"><![CDATA[<hr>
<h2 id="捐赠、打赏列表"><a href="#捐赠、打赏列表" class="headerlink" title="捐赠、打赏列表"></a>捐赠、打赏列表</h2><table>
<thead>
<tr>
<th>金额</th>
<th>昵称</th>
<th>渠道</th>
<th>时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>  ￥50</td>
<td>cxx</td>
<td>支付宝捐赠</td>
<td>2016-06-29</td>
</tr>
<tr>
<td>  ￥20</td>
<td>ghostsf</td>
<td>微信捐赠</td>
<td>2016-06-20</td>
</tr>
<tr>
<td> ￥10</td>
<td>Az</td>
<td>微信捐赠</td>
<td>2016-06-20</td>
</tr>
</tbody>
</table>
<h3 id="感谢以上同学捐赠打赏，坚持原创技术分享，您的支持将鼓励我继续创作！"><a href="#感谢以上同学捐赠打赏，坚持原创技术分享，您的支持将鼓励我继续创作！" class="headerlink" title="感谢以上同学捐赠打赏，坚持原创技术分享，您的支持将鼓励我继续创作！"></a>感谢以上同学捐赠打赏，坚持原创技术分享，您的支持将鼓励我继续创作！</h3><h2 id="捐赠、打赏前5名可以添加友情链接，需要的请在下面评论区留言"><a href="#捐赠、打赏前5名可以添加友情链接，需要的请在下面评论区留言" class="headerlink" title="捐赠、打赏前5名可以添加友情链接，需要的请在下面评论区留言"></a>捐赠、打赏前5名可以添加友情链接，需要的请在下面评论区留言</h2><hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis 禁用危险指令]]></title>
      <url>http://javen205.oschina.io/2016/06/30/Redis%E7%A6%81%E7%94%A8%E5%8D%B1%E9%99%A9%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p><strong>禁用危险指令</strong></p>
<p>在redis.conf中，通过将指令禁用达到避免人为误操作的可能<br>rename-command 是表示重命名指令，如果是指令后是空字符串 “” ， 那么就表示禁用，如果填入其他值，就表示改名，另外还有一个更绝的方法，是redis在安装时，修改redis的源码src/redis.c中。<br>研发环境可以改名，但是生产环境建议禁用。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;flushdb&quot;,flushdbCommand,1,&quot;w&quot;,0,NULL,0,0,0,0,0&#125;,</div><div class="line">&#123;&quot;flushall&quot;,flushallCommand,1,&quot;w&quot;,0,NULL,0,0,0,0,0&#125;</div></pre></td></tr></table></figure></p>
<p>的部分，注释掉也可以解决。<br>主要的危险命令如下：<br>FLUSHALL 删除所有库中的key<br>FLUSHDB 删除当前库中所有的key<br>KEYS 匹配数据库中的key 如果是在生产库使用KEYS * 对性能影响非常大，研发或者测试环境可以保留<br>以下是具体使用方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rename-command FLUSHALL &quot;&quot;</div><div class="line">rename-command FLUSHDB &quot;&quot;</div><div class="line">rename-command KEYS &quot;&quot;</div></pre></td></tr></table></figure>
<p><a href="http://blog.csdn.net/chwshuang/article/details/48465501" target="_blank" rel="external">参考地址：http://blog.csdn.net/chwshuang/article/details/48465501</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis 配置认证密码]]></title>
      <url>http://javen205.oschina.io/2016/06/29/Redis%E9%85%8D%E7%BD%AE%E8%AE%A4%E8%AF%81%E5%AF%86%E7%A0%81/</url>
      <content type="html"><![CDATA[<p><strong>redis配置密码</strong></p>
<p>引导语</p>
<p>Redis安全设置<br>redis默认安装完成后，没有登录密码和安全设置，没有密码的系统安全隐患很大，另外如果发生一些误操作，比如FLUSHALL会导致整个库被清空，所以为了安全起见，需要设置reids的安全配置项。比如&lt;设置密码、禁用危险指令&gt;</p>
<a id="more"></a> 
<blockquote>
<p>说明我redis安装目录如下<br>/mnt/redis/redis-3.2.0</p>
<p>1、通过配置文件进行配置</p>
</blockquote>
<p>redis配置文件在/mnt/redis/redis-3.2.0/redis.conf中，打开配置文件找到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#requirepass foobared</div></pre></td></tr></table></figure>
<p>去掉行前的注释，并修改密码为所需的密码,保存文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">requirepass javen</div></pre></td></tr></table></figure>
<p>重启redis</p>
<blockquote>
<p>2、通过命令行进行配置</p>
</blockquote>
<p>后台启动服务端</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/redis-server &amp;</div></pre></td></tr></table></figure>
<p>启动客户端</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@localhost redis-3.2.0]# src/redis-cli </div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">1) &quot;sex&quot;</div><div class="line">2) &quot;age&quot;</div><div class="line">3) &quot;name&quot;</div><div class="line">127.0.0.1:6379&gt; config get requirepass </div><div class="line">1) &quot;requirepass&quot;</div><div class="line">2) &quot;&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<p>设置密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost redis-3.2.0]# src/redis-cli </div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">1) &quot;sex&quot;</div><div class="line">2) &quot;age&quot;</div><div class="line">3) &quot;name&quot;</div><div class="line">127.0.0.1:6379&gt; config get requirepass </div><div class="line">1) &quot;requirepass&quot;</div><div class="line">2) &quot;&quot;</div><div class="line">127.0.0.1:6379&gt; config set requirepass javen</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<p>==无需重启== 使用原来的无密码登录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost redis-3.2.0]# src/redis-cli </div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">(error) NOAUTH Authentication required.</div></pre></td></tr></table></figure>
<p>使用修改后的密码登录redis，可以执行相应操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@localhost redis-3.2.0]# src/redis-cli -h 127.0.0.1 -a javen</div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">1) &quot;sex&quot;</div><div class="line">2) &quot;age&quot;</div><div class="line">3) &quot;name&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<p>==尝试重启一下redis，用新配置的密码登录redis执行操作，发现新的密码失效，原因是redis重新使用了配置文件中的密码==</p>
<p>除了在登录时通过 -a 参数制定密码外，还可以登录时不指定密码，而在执行操作前进行认证。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; </div><div class="line">[root@localhost redis-3.2.0]# src/redis-cli </div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">(error) NOAUTH Authentication required.</div><div class="line">127.0.0.1:6379&gt; </div><div class="line">[root@localhost redis-3.2.0]# src/redis-cli -h 127.0.0.1 -p 6379  </div><div class="line">127.0.0.1:6379&gt; config get requirepass </div><div class="line">(error) NOAUTH Authentication required.</div><div class="line">127.0.0.1:6379&gt; auth javen</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; config get requirepass</div><div class="line">1) &quot;requirepass&quot;</div><div class="line">2) &quot;javen&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>3.master配置了密码，slave如何配置</p>
</blockquote>
<p>若master配置了密码则slave也要配置相应的密码参数否则无法进行正常复制的。<br>slave中配置文件内找到如下行，移除注释，修改密码即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#masterauth  mstpassword</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis 的三种启动方式]]></title>
      <url>http://javen205.oschina.io/2016/06/29/Redis%E7%9A%84%E4%B8%89%E7%A7%8D%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p><strong>Redis的三种启动方式</strong></p>
<p><strong>Part I. 直接启动</strong></p>
<blockquote>
<p>启动</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//加上`&amp;`号使redis以后台程序方式运行</div><div class="line">./redis-server &amp;</div></pre></td></tr></table></figure>
<blockquote>
<p>检测</p>
</blockquote>
<ul>
<li>检测后台进程是否存在</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -ef |grep redis</div></pre></td></tr></table></figure>
<ul>
<li>检测6379端口是否在监听</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -lntp | grep 6379</div></pre></td></tr></table></figure>
<ul>
<li>使用<code>redis-cli</code>客户端检测连接是否正常</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">./redis-cli</div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">(empty list or set)</div><div class="line">127.0.0.1:6379&gt; set key &quot;hello world&quot;</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get key</div><div class="line">&quot;hello world&quot;</div></pre></td></tr></table></figure>
<a id="more"></a> 
<blockquote>
<p>停止</p>
</blockquote>
<ul>
<li>使用客户端</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-cli shutdown</div></pre></td></tr></table></figure>
<ul>
<li>因为Redis可以妥善处理SIGTERM信号，所以直接kill -9也是可以的<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">kill -9 PID</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>Part II. 通过指定配置文件启动</strong></p>
<p><strong>配置文件</strong> </p>
<p>可为redis服务启动指定配置文件，配置文件 redis.conf 在Redis根目录下。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#修改daemonize为yes，即默认以后台程序方式运行（还记得前面手动使用&amp;号强制后台运行吗）。</div><div class="line">daemonize no</div><div class="line">#可修改默认监听端口</div><div class="line">port 6379</div><div class="line">#修改生成默认日志文件位置</div><div class="line">logfile &quot;/home/javen/logs/redis.log&quot;</div><div class="line">#配置持久化文件存放位置</div><div class="line">dir /home/javen/data/redisData</div></pre></td></tr></table></figure>
<p><strong>启动时指定配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">redis-server ./redis.conf</div><div class="line">#如果更改了端口，使用`redis-cli`客户端连接时，也需要指定端口，例如：</div><div class="line">redis-cli -p 6379</div></pre></td></tr></table></figure>
<p>其启动停止同直接启动方式。配置文件是非常重要的配置工具，随着使用的逐渐深入将显得尤为重要，推荐在一开始就使用配置文件。</p>
<p><strong>Part III. 使用Redis启动脚本设置开机自启动</strong></p>
<p><strong>启动脚本</strong></p>
<p>推荐在生产环境中使用启动脚本方式启动redis服务。启动脚本 redis_init_script 位于位于Redis的 /utils/ 目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#大致浏览下该启动脚本，发现redis习惯性用监听的端口名作为配置文件等命名，我们后面也遵循这个约定。</div><div class="line">#redis服务器监听的端口</div><div class="line">REDISPORT=6379</div><div class="line">#服务端所处位置，在make install后默认存放与`/usr/local/bin/redis-server`，如果未make install则需要修改该路径，下同。</div><div class="line">EXEC=/usr/local/bin/redis-server</div><div class="line">#客户端位置</div><div class="line">CLIEXEC=/usr/local/bin/redis-cli</div><div class="line">#Redis的PID文件位置</div><div class="line">PIDFILE=/var/run/redis_$&#123;REDISPORT&#125;.pid</div><div class="line">#配置文件位置，需要修改</div><div class="line">CONF=&quot;/etc/redis/$&#123;REDISPORT&#125;.conf&quot;</div></pre></td></tr></table></figure>
<p><strong>配置环境</strong></p>
<ol>
<li>根据启动脚本要求，将修改好的配置文件以端口为名复制一份到指定目录。需使用root用户。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /etc/redis</div><div class="line">cp redis.conf /etc/redis/6379.conf</div></pre></td></tr></table></figure>
<ol>
<li>将启动脚本复制到/etc/init.d目录下，本例将启动脚本命名为redisd（通常都以d结尾表示是后台自启动服务）。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp redis_init_script /etc/init.d/redisd</div></pre></td></tr></table></figure>
<ol>
<li>设置为开机自启动</li>
</ol>
<p>此处直接配置开启自启动 chkconfig redisd on 将报错误： service redisd does not support chkconfig </p>
<p>参照 <a href="http://www.cnblogs.com/goodspeed/archive/2012/10/18/2729615.html" target="_blank" rel="external">此篇文章</a> ，在启动脚本开头添加如下两行注释以修改其运行级别：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line"># chkconfig:   2345 90 10</div><div class="line"># description:  Redis is a persistent key-value database</div><div class="line">#</div></pre></td></tr></table></figure>
<p> 再设置即可成功。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#设置为开机自启动服务器</div><div class="line">chkconfig redisd on</div><div class="line">#打开服务</div><div class="line">service redisd start</div><div class="line">#关闭服务</div><div class="line">service redisd stop</div></pre></td></tr></table></figure>
<p><a href="http://www.tuicool.com/articles/aQbQ3u" target="_blank" rel="external">参考文档 http://www.tuicool.com/articles/aQbQ3u</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis 安装]]></title>
      <url>http://javen205.oschina.io/2016/06/29/Redis%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="Redis-安装"><a href="#Redis-安装" class="headerlink" title="Redis 安装"></a><strong>Redis 安装</strong></h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p> <a href="http://redis.io/download" target="_blank" rel="external">官网下载地址</a></p>
<h2 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h2><blockquote>
<p> 目前最新文档版3.2.0</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://download.redis.io/releases/redis-3.2.0.tar.gz</div><div class="line">$ tar xzf redis-3.2.0.tar.gz</div><div class="line">$ cd redis-3.2.0</div><div class="line">$ make</div></pre></td></tr></table></figure>
<a id="more"></a> 
<p>==注意==</p>
<p>执行 编译过程中make报错，make[3]: gcc：命令未找到</p>
<p>==问题原因==:没有gcc编译器。需要安装gcc、g++编译器;如果还提示其他的命令未找到直接使用yum 安装即可</p>
<blockquote>
<p>执行安装</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y gcc g++ gcc-c++ make</div></pre></td></tr></table></figure>
<blockquote>
<p>再次执行 make</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/4523bd7a85406b4689e419df61d674ff/xmlnote/WEBRESOURCE15dd44a0559ed68431e3e1127c19159e/1186" alt="image"></p>
<blockquote>
<p>执行 检查是否安装成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make test</div></pre></td></tr></table></figure></p>
</blockquote>
<p>出现如下结果表示安装成功</p>
<p><img src="http://note.youdao.com/yws/public/resource/4523bd7a85406b4689e419df61d674ff/xmlnote/WEBRESOURCE471ec9627e018acc056cdd438c71c5b3/1193" alt="image"></p>
<blockquote>
<p>启动服务端 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/redis-server  或者 ./redis-server</div></pre></td></tr></table></figure>
<p>后者需要进入安装目录 /mnt/redis/redis-3.2.0/src</p>
<blockquote>
<p>启动客户端</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/redis-cli 或者./redis-cli</div></pre></td></tr></table></figure>
<p><img src="http://note.youdao.com/yws/public/resource/4523bd7a85406b4689e419df61d674ff/xmlnote/WEBRESOURCEe4de2fb679d2cf4285b64485ab227f5e/1210" alt="image"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://javen205.oschina.io/2016/06/28/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a> </p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
