<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[直连微信硬件回调]]></title>
      <url>http://javen205.oschina.io/2999/07/31/%E7%9B%B4%E8%BF%9E%E5%BE%AE%E4%BF%A1%E7%A1%AC%E4%BB%B6%E5%9B%9E%E8%B0%83/</url>
      <content type="html"><![CDATA[<h3 id="智能设备"><a href="#智能设备" class="headerlink" title="智能设备"></a>智能设备</h3><p>智能设备—–灯控<br>控制开关，调节亮度。</p>
<font color="red"><br>开源项目源码：<a href="https://git.oschina.net/javen205/jfinal-weixin.git" target="_blank" rel="external">https://git.oschina.net/javen205/jfinal-weixin.git</a><br><br>谁有做蓝牙硬件设备并准备与微信公众号对接可以一起交流<br><br></font>

<p>回调模式返回的json如下</p>
<a id="more"></a> 
<p>直连设备回调   <strong>灯控</strong> </p>
<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><font color="red">注意：测试发现在Wifi直连微信硬件回调中，无能设置的是加密模式还是明文模式回调返回的json都是明文。所以目前只支持明文模式</font>

<ol>
<li><p>clone 项目<br> 如有不会的伙伴参考：<a href="https://javen205.github.io/2016/07/31/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8Git/" target="_blank" rel="external">从零开始使用Git</a></p>
</li>
<li><p>修改配置文件</p>
<p> <code>src/main/resources/a_little_config.txt</code> 中的 <code>token</code> <code>appId</code>  <code>appSecret</code> 或者复制一份命名为<code>a_little_config_pro.txt</code> 将其修改</p>
<p> 如下图<br><img src="/images/public/weixindevice/设备4.png" alt=""><br><img src="/images/public/weixindevice/设备3.png" alt=""></p>
</li>
<li><p>设置回调的URL</p>
<p>回调的URL为 <code>http://域名/msg</code> ;<code>Token</code> 与您修改的配置保持一致；<code>消息加解密方式</code> 设置为 <code>明文模式</code>；配置文件中将 <code>encryptMessage</code> 设置为 <code>false</code> 或者注释掉</p>
</li>
</ol>
<font color="red">如果任何疑问请留言</font>

<p>   博客评论区留言亦或者在开源项目<code>Issue</code>中提出</p>
<p>openId:ofkJSuGtXgB8n23e-y0kqDjJLXxk</p>
<h3 id="扫码绑定"><a href="#扫码绑定" class="headerlink" title="扫码绑定"></a>扫码绑定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76663912,</div><div class="line">    &quot;msg_type&quot;: &quot;bind&quot;,</div><div class="line">    &quot;create_time&quot;: 1469896072,</div><div class="line">    &quot;open_id&quot;: &quot;ofkJSuL6kYUoIbknjbRY0EISgGEY&quot;,</div><div class="line">    &quot;session_id&quot;: 0,</div><div class="line">    &quot;content&quot;: &quot;&quot;,</div><div class="line">    &quot;qrcode_suffix_data&quot;: &quot;&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="设备上操作-开启"><a href="#设备上操作-开启" class="headerlink" title="设备上操作  开启"></a>设备上操作  开启</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76661379,</div><div class="line">    &quot;msg_type&quot;: &quot;notify&quot;,</div><div class="line">    &quot;services&quot;: &#123;</div><div class="line">        &quot;operation_status&quot;: &#123;</div><div class="line">            &quot;status&quot;: 0</div><div class="line">        &#125;,</div><div class="line">        &quot;power_switch&quot;: &#123;</div><div class="line">            &quot;on_off&quot;: true</div><div class="line">        &#125;,</div><div class="line">        &quot;lightbulb&quot;: &#123;</div><div class="line">            &quot;alpha&quot;: 19</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;create_time&quot;: 1469891527</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="设备上操作-关闭"><a href="#设备上操作-关闭" class="headerlink" title="设备上操作  关闭"></a>设备上操作  关闭</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76661314,</div><div class="line">    &quot;msg_type&quot;: &quot;notify&quot;,</div><div class="line">    &quot;services&quot;: &#123;</div><div class="line">        &quot;operation_status&quot;: &#123;</div><div class="line">            &quot;status&quot;: 1</div><div class="line">        &#125;,</div><div class="line">        &quot;power_switch&quot;: &#123;</div><div class="line">            &quot;on_off&quot;: true</div><div class="line">        &#125;,</div><div class="line">        &quot;lightbulb&quot;: &#123;</div><div class="line">            &quot;alpha&quot;: 19</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;create_time&quot;: 1469891412</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="面板控制-关闭"><a href="#面板控制-关闭" class="headerlink" title="面板控制 关闭"></a>面板控制 关闭</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;asy_error_code&quot;: 0,</div><div class="line">    &quot;asy_error_msg&quot;: &quot;ok&quot;,</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76656877,</div><div class="line">    &quot;msg_type&quot;: &quot;set_resp&quot;,</div><div class="line">    &quot;services&quot;: &#123;</div><div class="line">        &quot;operation_status&quot;: &#123;</div><div class="line">            &quot;status&quot;: 1</div><div class="line">        &#125;,</div><div class="line">        &quot;power_switch&quot;: &#123;</div><div class="line">            &quot;on_off&quot;: true</div><div class="line">        &#125;,</div><div class="line">        &quot;lightbulb&quot;: &#123;</div><div class="line">            &quot;alpha&quot;: 38</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;create_time&quot;: 1469886772</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="面板控制-开启"><a href="#面板控制-开启" class="headerlink" title="面板控制  开启"></a>面板控制  开启</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;asy_error_code&quot;: 0,</div><div class="line">    &quot;asy_error_msg&quot;: &quot;ok&quot;,</div><div class="line">    &quot;device_id&quot;: &quot;gh_8746b7fa293e_f1e10a4eb78b8148&quot;,</div><div class="line">    &quot;device_type&quot;: &quot;gh_8746b7fa293e&quot;,</div><div class="line">    &quot;msg_id&quot;: 76656853,</div><div class="line">    &quot;msg_type&quot;: &quot;set_resp&quot;,</div><div class="line">    &quot;services&quot;: &#123;</div><div class="line">        &quot;operation_status&quot;: &#123;</div><div class="line">            &quot;status&quot;: 0</div><div class="line">        &#125;,</div><div class="line">        &quot;power_switch&quot;: &#123;</div><div class="line">            &quot;on_off&quot;: true</div><div class="line">        &#125;,</div><div class="line">        &quot;lightbulb&quot;: &#123;</div><div class="line">            &quot;alpha&quot;: 38</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;create_time&quot;: 1469886730</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/weixindevice/设备1.png" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/images/public/weixindevice/设备2.png" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/images/public/weixindevice/IMG_1389.png" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/images/public/weixindevice/IMG_1388.png" alt=""></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[志强英语]]></title>
      <url>http://javen205.oschina.io/2999/07/17/%E5%BF%97%E5%BC%BA%E8%8B%B1%E8%AF%AD/</url>
      <content type="html"><![CDATA[<h3 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h3><ol>
<li>志强课程-微官网</li>
</ol>
<ul>
<li>热线电话</li>
<li>QQ在线咨询</li>
<li>订单查询</li>
<li>微社区</li>
<li>意见反馈</li>
<li>直播课程列表</li>
</ul>
<ol>
<li><p>课程介绍</p>
</li>
<li><p>课程购买</p>
<blockquote>
<p>微信支付</p>
</blockquote>
</li>
</ol>
<a id="more"></a> 
<ol>
<li>课程直播 <blockquote>
<p>接入第三方实时直播平台</p>
</blockquote>
</li>
</ol>
<p><a href="http://zqenglish.gensee.com/training/site/r/72441864" target="_blank" rel="external">直播测试地址72441864</a><br><a href="http://zqenglish.gensee.com/training/site/r/10481782" target="_blank" rel="external">直播测试地址10481782</a></p>
<ol>
<li>英语测评 <blockquote>
<p>6套题，每套题50题。测评时随机分配一套题并打乱顺序进行答题</p>
</blockquote>
</li>
</ol>
<h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/ZQEnglish/IMG_1347.png" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1348.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1349.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1350.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1352.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1353.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1354.png" alt=""></div><div class="group-picture-column" style="width: 14.285714285714286%;"><img src="/images/public/ZQEnglish/IMG_1346.png" alt=""></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[视频报警终端]]></title>
      <url>http://javen205.oschina.io/2999/07/17/%E8%A7%86%E9%A2%91%E6%8A%A5%E8%AD%A6%E7%BB%88%E7%AB%AF/</url>
      <content type="html"><![CDATA[<h3 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h3><ol>
<li>设备绑定</li>
</ol>
<ul>
<li>手动输入UID（设备号）绑定</li>
<li>扫码绑定</li>
<li>验证设备号</li>
<li>绑定限制（一个设备只支持3个openId绑定（包括分享））</li>
</ul>
<ol>
<li>绑定设备列表</li>
</ol>
<ul>
<li>设备管理员支持分享设备给好友绑定</li>
<li>管理员接收分享绑定通知，确定此好友是否绑定</li>
<li>分享管理</li>
<li>解除绑定</li>
<li>设置报警时间</li>
</ul>
<a id="more"></a> 
<p>3、通知</p>
<ul>
<li>绑定通知</li>
<li>解绑通知</li>
<li>设备报警通知</li>
<li>分享确定通知</li>
</ul>
<blockquote>
<p>报警图片视频存放在FTP服务器；当点击之报警通知之后下载资源并显示在终端</p>
</blockquote>
<h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/SPBJD/IMG_1356.png" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1357.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1358.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1359.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1360.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1361.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1362.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1363.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1364.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1365.png" alt=""></div><div class="group-picture-column" style="width: 10%;"><img src="/images/public/SPBJD/IMG_1366.png" alt=""></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号]]></title>
      <url>http://javen205.oschina.io/2999/07/17/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/</url>
      <content type="html"><![CDATA[<h3 id="项目开源地址"><a href="#项目开源地址" class="headerlink" title="项目开源地址"></a>项目开源地址</h3><p><a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">weixin_guide</a> </p>
<p><a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">http://git.oschina.net/javen205/weixin_guide</a></p>
<a id="more"></a> 
<p>服务器号、订阅号开源项目源码地址   <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<p><a href="http://git.oschina.net/javen205/weixin_guide/wikis/%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C%E5%9B%BE" target="_blank" rel="external">项目运行截图</a></p>
<p>1、<a href="http://www.jianshu.com/p/ab209e163614" target="_blank" rel="external">项目导入IDE并启动运行</a></p>
<p>2、<a href="http://www.jianshu.com/p/a87d4b9f9424" target="_blank" rel="external">如何成为开发者模式</a></p>
<p>3、<a href="http://www.jianshu.com/p/6e8caa616577" target="_blank" rel="external">如何实现消息交互</a></p>
<p>4、<a href="http://www.jianshu.com/p/41ce83878f05" target="_blank" rel="external">如何自定义菜单</a></p>
<p>5、<a href="http://www.jianshu.com/p/01b04bdf9645" target="_blank" rel="external">如何授权获取用户信息</a></p>
<p>6、<a href="http://www.jianshu.com/p/fd34c859e069" target="_blank" rel="external">如何将微信所有用户信息一键导出到Excel</a></p>
<p>7、<a href="http://www.jianshu.com/p/bb88f7520b9e" target="_blank" rel="external">如何使用JSSDK</a></p>
<p>8、微信支付</p>
<p>8.1 <a href="http://www.jianshu.com/p/e28eb52830c5" target="_blank" rel="external">微信支付-微信买单</a></p>
<p>8.2 <a href="http://www.jianshu.com/p/cb2456a2d7a7" target="_blank" rel="external">微信支付-公众号支付</a></p>
<p>8.3 <a href="http://www.jianshu.com/p/474af73eb176" target="_blank" rel="external">微信支付-扫码支付</a></p>
<p>8.4 <a href="http://www.jianshu.com/p/ef6c9c5c5807" target="_blank" rel="external">微信支付-刷卡支付</a></p>
<p>8.5 <a href="http://www.jianshu.com/p/c06120bc1f5c" target="_blank" rel="external">微信红包</a></p>
<p>9、会员注册、找回密码、登陆（邮箱与手机验证码）</p>
<p>10、<a href="http://www.jianshu.com/p/eb0e9c4dcdfe" target="_blank" rel="external">模板消息</a></p>
<p>如果对企业微信公众号开发有需求的可以参考下面的开源框架</p>
<p><a href="https://github.com/Javen205/jfinal_qyweixin" target="_blank" rel="external">https://github.com/Javen205/jfinal_qyweixin</a></p>
<h3 id="版本更新记录"><a href="#版本更新记录" class="headerlink" title="版本更新记录"></a>版本更新记录</h3><p><code>注意</code> 最新版本的会进行<code>bug</code>修复以及功能点的添加，建议大家尽量升级到最新版本，另外发现<code>bug</code>请及时反馈，谢谢！</p>
<h1 id="2016-7-6"><a href="#2016-7-6" class="headerlink" title="2016/7/6"></a>2016/7/6</h1><ul>
<li>异步单文件多文件上传  <code>@半曲恋江南</code></li>
</ul>
<h1 id="2016-5-30"><a href="#2016-5-30" class="headerlink" title="2016/5/30"></a>2016/5/30</h1><ul>
<li>自定义菜单的封装</li>
</ul>
<blockquote>
<p>详细的封装见：<code>com.javen.weixin.menu</code></p>
</blockquote>
<h1 id="2016-5-28"><a href="#2016-5-28" class="headerlink" title="2016/5/28"></a>2016/5/28</h1><ul>
<li>添加发送红包的接口以及Demo </li>
</ul>
<blockquote>
<p>API<code>com.javen.utils.ReadPackUtils.java</code><br>Demo<code>com.javen.weixin.controller.RedPackApiController.java</code></p>
</blockquote>
<h1 id="2016-5-24"><a href="#2016-5-24" class="headerlink" title="2016/5/24"></a>2016/5/24</h1><ul>
<li>添加人脸识别功能</li>
</ul>
<h1 id="2016-5-22"><a href="#2016-5-22" class="headerlink" title="2016/5/22"></a>2016/5/22</h1><ul>
<li>添加获取微信用户信息并导入到excel下载到本地</li>
</ul>
<h1 id="2016-5-19"><a href="#2016-5-19" class="headerlink" title="2016/5/19"></a>2016/5/19</h1><ul>
<li>修复数据创建表默认值异常的问题</li>
</ul>
<h1 id="weixin-guide-1-0-Change-log"><a href="#weixin-guide-1-0-Change-log" class="headerlink" title="weixin_guide 1.0 Change log"></a>weixin_guide 1.0 Change log</h1><ul>
<li>会员注册、找回密码、登陆（邮箱与手机验证码）</li>
<li>JSSDK封装（ShareInterceptor拦截器）</li>
<li>微信支付完整的Demo</li>
<li>分享朋友圈添加积分功能</li>
<li>授权获取用户信息</li>
<li>判断用户是否关注，如没有跳转到关注页面</li>
<li>在线翻译</li>
<li>星座查询</li>
<li>常用微信事件的封装</li>
<li>Ajax请求封装</li>
<li>添加定制器<a href="https://git.oschina.net/javen205/jfinal-scheduler.git" target="_blank" rel="external">SchedulerPlugin</a></li>
</ul>
<h3 id="目录结构说明"><a href="#目录结构说明" class="headerlink" title="目录结构说明"></a>目录结构说明</h3><p>注意：由于此项目是正式上线的项目，此次开源只是我抽离出来了核心代码。可能缺少那几个JSP</p>
<p>项目介绍详细介绍如下</p>
<ul>
<li>/msg             微信所有消息的入口（成为开发者<a href="http://域名【/项目名】/msg）" target="_blank" rel="external">http://域名【/项目名】/msg）</a></li>
<li>/toOauth         授权跳转指定页面 （如果没有关注就跳转到专注页面）  </li>
<li>/register        会员注册页面  </li>
<li>/forget          会员找回密码页面  </li>
<li>/idea            意见反馈页面  </li>
<li>/translate       在线翻译    </li>
<li>/constellation/  星座查询</li>
<li>/share  /share/customer分享以及微信支付页面参考</li>
<li>/pay             微信支付</li>
<li>/ajax            ajax控制器 </li>
<li>项目中定时调度使用的是<a href="https://git.oschina.net/javen205/jfinal-scheduler.git" target="_blank" rel="external">jfinal-scheduler</a></li>
</ul>
<h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/weixin_guide/8.pic.jpg" alt="登录"></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/9.pic.jpg" alt="注册"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/10.pic.jpg" alt="注册"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/11.pic.jpg" alt="找回密码"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/12.pic.jpg" alt="JSSDK签名"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/13.pic.jpg" alt="微信支付"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/14.pic.jpg" alt="JSSDK分享"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/15.pic.jpg" alt="意见反馈"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/18.pic.jpg" alt="百度翻译"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/19.pic.jpg" alt="百度翻译结果"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/20.pic.jpg" alt="星座查询首页"></div><div class="group-picture-column" style="width: 9.090909090909092%;"><img src="/images/public/weixin_guide/21.pic.jpg" alt="星座查询结果"></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之推广支持]]></title>
      <url>http://javen205.oschina.io/2016/12/26/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A8%E5%B9%BF%E6%94%AF%E6%8C%81/</url>
      <content type="html"><![CDATA[<p>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">点击喜欢不迷路</a></p>
<p>前几篇文章详细介绍了微信App支付、公众号支付、微信红包、微信刷卡以及支付宝支付,今天来聊聊 <strong>推广支持之<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1443433542&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">生成带参数的二维码</a>、<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1443433600&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">长链接转短链接</a></strong></p>
<blockquote>
<p>目录<br>1、查看权限<br>2、生成带参数的二维码简介<br>3、接口说明<br>4、具体实现<br>5、测试<br>6、长链接转短链接</p>
</blockquote>
<a id="more"></a>
<h1 id="1、查看权限"><a href="#1、查看权限" class="headerlink" title="1、查看权限"></a>1、查看权限</h1><blockquote>
<p><a href="https://mp.weixin.qq.com" target="_blank" rel="external">登录微信公众平台</a> &gt;开发&gt;接口权限进行查看如下图</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-1739b7bab5235273.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看权限"></p>
<h1 id="2、生成带参数的二维码简介"><a href="#2、生成带参数的二维码简介" class="headerlink" title="2、生成带参数的二维码简介"></a>2、生成带参数的二维码简介</h1><blockquote>
<p>为了满足用户渠道推广分析和用户帐号绑定等场景的需要，公众平台提供了生成带参数二维码的接口。使用该接口可以获得多个带不同场景值的二维码，用户扫描后，公众号可以接收到事件推送。</p>
</blockquote>
<p>【<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1443433542&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">生成带参数的二维码官方介绍文档</a>】</p>
<blockquote>
<p>目前有<strong>2种类型</strong>的二维码：</p>
</blockquote>
<p>1、<strong>临时二维码</strong>，是有过期时间的，最长可以设置为在二维码生成后的30天（即2592000秒）后过期，但能够生成较多数量。临时二维码主要用于帐号绑定等不要求二维码永久保存的业务场景</p>
<p>2、<strong>永久二维码</strong>，是无过期时间的，但数量较少（目前为最多10万个）。永久二维码主要用于适用于帐号绑定、用户来源统计等场景。</p>
<blockquote>
<p>当用户扫描带场景值二维码时，可能推送以下两种事件：</p>
</blockquote>
<p>如果用户 <strong>还未关注公众号</strong>，则用户可以关注公众号，关注后微信会将带场景值关注事件推送给开发者。</p>
<p>如果用户 <strong>已经关注公众号</strong>，在用户扫描后会自动进入会话，微信也会将带场景值扫描事件推送给开发者。</p>
<p>#3、接口说明</p>
<blockquote>
<p>获取带参数的二维码的过程包括两步，首先创建二维码ticket，然后凭借ticket到指定URL换取二维码。</p>
</blockquote>
<p><strong>创建二维码ticket</strong><br>每次创建二维码ticket需要提供一个开发者自行设定的参数（scene_id），分别介绍临时二维码和永久二维码的创建二维码ticket过程。</p>
<p><strong>临时二维码请求说明</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">http请求方式: POST</div><div class="line">URL: https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKEN</div><div class="line">POST数据格式：json</div><div class="line">POST数据例子：</div><div class="line">&#123;</div><div class="line">  &quot;expire_seconds&quot;: 604800,</div><div class="line">  &quot;action_name&quot;: &quot;QR_SCENE&quot;,</div><div class="line">  &quot;action_info&quot;: &#123;</div><div class="line">    &quot;scene&quot;: &#123;</div><div class="line">      &quot;scene_id&quot;: 123</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>永久二维码请求说明</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">http请求方式: POST</div><div class="line">URL: https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKEN</div><div class="line">POST数据格式：json</div><div class="line">POST数据例子：</div><div class="line">&#123;</div><div class="line">  &quot;action_name&quot;: &quot;QR_LIMIT_SCENE&quot;,</div><div class="line">  &quot;action_info&quot;: &#123;</div><div class="line">    &quot;scene&quot;: &#123;</div><div class="line">      &quot;scene_id&quot;: 123</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">或者也可以使用以下POST数据创建字符串形式的二维码参数：</div><div class="line"></div><div class="line">&#123;</div><div class="line">  &quot;action_name&quot;: &quot;QR_LIMIT_STR_SCENE&quot;,</div><div class="line">  &quot;action_info&quot;: &#123;</div><div class="line">    &quot;scene&quot;: &#123;</div><div class="line">      &quot;scene_str&quot;: &quot;123&quot;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>参数说明</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>expire_seconds</td>
<td>该二维码有效时间，以秒为单位。 最大不超过2592000（即30天），此字段如果不填，则默认有效期为30秒。</td>
</tr>
<tr>
<td>action_name</td>
<td>二维码类型，QR_SCENE为临时,QR_LIMIT_SCENE为永久,QR_LIMIT_STR_SCENE为永久的字符串参数值</td>
</tr>
<tr>
<td>action_info</td>
<td>二维码详细信息</td>
</tr>
<tr>
<td>scene_id</td>
<td>场景值ID，临时二维码时为32位非0整型，永久二维码时最大值为100000（目前参数只支持1–100000）</td>
</tr>
<tr>
<td>scene_str</td>
<td>场景值ID（字符串形式的ID），字符串类型，长度限制为1到64，仅永久二维码支持此字段   </td>
</tr>
</tbody>
</table>
<p><strong>返回说明</strong></p>
<p>正确的Json返回结果:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;expire_seconds&quot;: 60,</div><div class="line">  &quot;ticket&quot;: &quot;gQH47joAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL2taZ2Z3TVRtNzJXV1Brb3ZhYmJJAAIEZ23sUwMEmm3sUw==&quot;,</div><div class="line">  &quot;url&quot;: &quot;http://weixin.qq.com/q/kZgfwMTm72WWPkovabbI&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>ticket</td>
<td>获取的二维码ticket，凭借此ticket可以在有效时间内换取二维码。</td>
</tr>
<tr>
<td>expire_seconds</td>
<td>该二维码有效时间，以秒为单位。 最大不超过2592000（即30天）。</td>
</tr>
<tr>
<td>url</td>
<td>二维码图片解析后的地址，开发者可根据该地址自行生成需要的二维码图片</td>
</tr>
</tbody>
</table>
<p><strong>通过ticket换取二维码</strong><br>获取二维码ticket后，开发者可用ticket换取二维码图片。请注意，本接口无须登录态即可调用。</p>
<p><strong>请求说明</strong></p>
<blockquote>
<p>HTTP GET请求（请使用https协议）<a href="https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=TICKET" target="_blank" rel="external">https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=TICKET</a><br>提醒：TICKET记得进行UrlEncode</p>
</blockquote>
<p><strong>返回说明</strong></p>
<p><strong>ticket正确情况下</strong>，http 返回码是200，是一张图片，可以直接展示或者下载。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">HTTP头（示例）如下：</div><div class="line">Accept-Ranges:bytes</div><div class="line">Cache-control:max-age=604800</div><div class="line">Connection:keep-alive</div><div class="line">Content-Length:28026</div><div class="line">Content-Type:image/jpg</div><div class="line">Date:Wed, 16 Oct 2013 06:37:10 GMT</div><div class="line">Expires:Wed, 23 Oct 2013 14:37:10 +0800</div><div class="line">Server:nginx/1.4.1</div></pre></td></tr></table></figure>
<p><strong>错误情况下</strong>（如ticket非法）返回HTTP错误码404。</p>
<h1 id="4、具体实现"><a href="#4、具体实现" class="headerlink" title="4、具体实现"></a>4、具体实现</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/**</div><div class="line"> * 生成带参数的二维码 API</div><div class="line"> */</div><div class="line">public class QrcodeApi</div><div class="line">&#123;</div><div class="line">    private static String apiUrl = &quot;https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=&quot;;</div><div class="line">    </div><div class="line">    public static ApiResult create(String jsonStr) &#123;</div><div class="line">        String jsonResult = HttpUtils.post(apiUrl + AccessTokenApi.getAccessTokenStr(), jsonStr);</div><div class="line">        return new ApiResult(jsonResult);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 创建临时二维码</div><div class="line">     * @param expireSeconds 该二维码有效时间，以秒为单位。 最大不超过604800（即7天）。</div><div class="line">     * @param sceneId 场景值ID，临时二维码时为32位非0整型</div><div class="line">     * @return ApiResult 二维码信息</div><div class="line">     */</div><div class="line">    public static ApiResult createTemporary(int expireSeconds, int sceneId) &#123;</div><div class="line">        Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();</div><div class="line">        params.put(&quot;expire_seconds&quot;, expireSeconds);</div><div class="line">        params.put(&quot;action_name&quot;, &quot;QR_SCENE&quot;);</div><div class="line">        </div><div class="line">        Map&lt;String, Object&gt; actionInfo = new HashMap&lt;String, Object&gt;();</div><div class="line">        Map&lt;String, Object&gt; scene = new HashMap&lt;String, Object&gt;();</div><div class="line">        scene.put(&quot;scene_id&quot;, sceneId);</div><div class="line">        </div><div class="line">        actionInfo.put(&quot;scene&quot;, scene);</div><div class="line">        params.put(&quot;action_info&quot;, actionInfo);</div><div class="line">        return create(JsonUtils.toJson(params));</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 创建永久二维码</div><div class="line">     * @param sceneId 场景值ID，永久二维码时最大值为100000（目前参数只支持1--100000）</div><div class="line">     * @return ApiResult 二维码信息</div><div class="line">     */</div><div class="line">    public static ApiResult createPermanent(int sceneId) &#123;</div><div class="line">        Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();</div><div class="line">        params.put(&quot;action_name&quot;, &quot;QR_LIMIT_SCENE&quot;);</div><div class="line">        </div><div class="line">        Map&lt;String, Object&gt; actionInfo = new HashMap&lt;String, Object&gt;();</div><div class="line">        Map&lt;String, Object&gt; scene = new HashMap&lt;String, Object&gt;();</div><div class="line">        scene.put(&quot;scene_id&quot;, sceneId);</div><div class="line">        </div><div class="line">        actionInfo.put(&quot;scene&quot;, scene);</div><div class="line">        params.put(&quot;action_info&quot;, actionInfo);</div><div class="line">        return create(JsonUtils.toJson(params));</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 创建永久二维码</div><div class="line">     * @param sceneStr 场景值ID（字符串形式的ID），字符串类型，长度限制为1到64，仅永久二维码支持此字段</div><div class="line">     * @return ApiResult 二维码信息</div><div class="line">     */</div><div class="line">    public static ApiResult createPermanent(String sceneStr) &#123;</div><div class="line">        Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();</div><div class="line">        params.put(&quot;action_name&quot;, &quot;QR_LIMIT_STR_SCENE&quot;);</div><div class="line">        </div><div class="line">        Map&lt;String, Object&gt; actionInfo = new HashMap&lt;String, Object&gt;();</div><div class="line">        Map&lt;String, Object&gt; scene = new HashMap&lt;String, Object&gt;();</div><div class="line">        scene.put(&quot;scene_str&quot;, sceneStr);</div><div class="line">        </div><div class="line">        actionInfo.put(&quot;scene&quot;, scene);</div><div class="line">        params.put(&quot;action_info&quot;, actionInfo);</div><div class="line">        return create(JsonUtils.toJson(params));</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    private static String showQrcodeUrl = &quot;https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=&quot;;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 通过ticket换取二维码地址</div><div class="line">     * @param ticket 换取二维码参数</div><div class="line">     * @return String url</div><div class="line">     */</div><div class="line">    public static String getShowQrcodeUrl(String ticket) &#123;</div><div class="line">        return showQrcodeUrl + ticket;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>封装接口说明：<br>1、<code>QrcodeApi. create(String jsonStr)</code> 自定义json参数生成二维码<br>2、<code>QrcodeApi. createTemporary(int expireSeconds, int sceneId)</code> 创建临时二维码，可自定义时间以及场景ID<br>3、<code>QrcodeApi. createPermanent(int sceneId)</code> 创建永久二维码，可自定义场景ID<br>4、<code>QrcodeApi. createPermanent(String sceneStr)</code>  创建永久二维码,可自定义场景值ID（字符串形式的ID）</p>
</blockquote>
<p>#5、测试</p>
<blockquote>
<p>使用测试号进行测试,如果没有测试号可以【<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1443433542&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">在此</a>】申请</p>
</blockquote>
<p>临时二维码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">public void getQrcode()</div><div class="line">   &#123;</div><div class="line">       String str = &quot;&#123;\&quot;expire_seconds\&quot;: 604800, \&quot;action_name\&quot;: \&quot;QR_SCENE\&quot;, \&quot;action_info\&quot;: &#123;\&quot;scene\&quot;: &#123;\&quot;scene_id\&quot;: 123&#125;&#125;&#125;&quot;;</div><div class="line">       ApiResult apiResult = QrcodeApi.create(str);</div><div class="line">       renderText(apiResult.getJson());</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>如果没有权限则返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;errcode&quot;:48001,&quot;errmsg&quot;:&quot;api unauthorized hint: [Rkwbna0770rsz7!]&quot;&#125;</div></pre></td></tr></table></figure></p>
<p>正确返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;expire_seconds&quot;: 604800,</div><div class="line">  &quot;ticket&quot;: &quot;gQEd8DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyYXdOV2xWLTI5aVUxdWhWRXhvMWwAAgQRv19YAwSAOgkA&quot;,</div><div class="line">  &quot;url&quot;: &quot;http://weixin.qq.com/q/02awNWlV-29iU1uhVExo1l&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>使用第三方工具根据以上Url<code>http://weixin.qq.com/q/02awNWlV-29iU1uhVExo1l</code>生成二维码</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-d8a0306d49152fee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="使用第三方工具根据Url生成二维码"></p>
<blockquote>
<p>使用微信扫码如果未关注将会跳转是关注页，点击关注则推送<code>subscribe</code>事件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;</div><div class="line">&lt;ToUserName&gt;&lt;![CDATA[gh_8746b7fa293e]]&gt;&lt;/ToUserName&gt;</div><div class="line">&lt;FromUserName&gt;&lt;![CDATA[ofkJSuGtXgB8n23e-y0kqDjJLXxk]]&gt;&lt;/FromUserName&gt;</div><div class="line">&lt;CreateTime&gt;1482670578&lt;/CreateTime&gt;</div><div class="line">&lt;MsgType&gt;&lt;![CDATA[event]]&gt;&lt;/MsgType&gt;</div><div class="line">&lt;Event&gt;&lt;![CDATA[subscribe]]&gt;&lt;/Event&gt;</div><div class="line">&lt;EventKey&gt;&lt;![CDATA[qrscene_123]]&gt;&lt;/EventKey&gt;</div><div class="line">&lt;Ticket&gt;&lt;![CDATA[gQEd8DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyYXdOV2xWLTI5aVUxdWhWRXhvMWwAAgQRv19YAwSAOgkA]]&gt;&lt;/Ticket&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>使用微信扫码如果已关注将会向开发者推送扫码事件<code>SCAN</code> 如以下</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;xml&gt;</div><div class="line">&lt;ToUserName&gt;&lt;![CDATA[gh_8746b7fa293e]]&gt;&lt;/ToUserName&gt;</div><div class="line">&lt;FromUserName&gt;&lt;![CDATA[ofkJSuGtXgB8n23e-y0kqDjJLXxk]]&gt;&lt;/FromUserName&gt;</div><div class="line">&lt;CreateTime&gt;1482670378&lt;/CreateTime&gt;</div><div class="line">&lt;MsgType&gt;&lt;![CDATA[event]]&gt;&lt;/MsgType&gt;</div><div class="line">&lt;Event&gt;&lt;![CDATA[SCAN]]&gt;&lt;/Event&gt;</div><div class="line">&lt;EventKey&gt;&lt;![CDATA[123]]&gt;&lt;/EventKey&gt;</div><div class="line">&lt;Ticket&gt;&lt;![CDATA[gQEd8DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyYXdOV2xWLTI5aVUxdWhWRXhvMWwAAgQRv19YAwSAOgkA]]&gt;&lt;/Ticket&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>生成永久二维码并使用<code>ticket</code>换取二维码</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public void getQrcode2()&#123;</div><div class="line">        ApiResult apiResult = QrcodeApi.createPermanent(100);</div><div class="line">        String qrcodeUrl = QrcodeApi.getShowQrcodeUrl(apiResult.getStr(&quot;ticket&quot;));</div><div class="line">        renderText(&quot;create&gt;&gt;&quot;+apiResult.getJson()+&quot; qrcodeUrl:&quot;+qrcodeUrl);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;ticket&quot;: &quot;gQFo8DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0cwT21FZjNtM3RXbmd3REF6Ml82AAIEzyFQVwMEAAAAAA==&quot;,</div><div class="line">  &quot;url&quot;: &quot;http://weixin.qq.com/q/G0OmEf3m3tWngwDAz2_6&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>使用使用<code>ticket</code>换取二维码RUL<br>qrcodeUrl:<a href="https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=gQFo8DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0cwT21FZjNtM3RXbmd3REF6Ml82AAIEzyFQVwMEAAAAAA==" target="_blank" rel="external">https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=gQFo8DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0cwT21FZjNtM3RXbmd3REF6Ml82AAIEzyFQVwMEAAAAAA==</a></p>
</blockquote>
<p>直接浏览访问即可查看二维码，当然也可以下载到本地</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-2d8ba01e55c7ba5a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="使用`ticket`换取到的二维码"></p>
<blockquote>
<p>扫码后开发者响应的内容如下</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;</div><div class="line">&lt;ToUserName&gt;&lt;![CDATA[gh_8746b7fa293e]]&gt;&lt;/ToUserName&gt;</div><div class="line">&lt;FromUserName&gt;&lt;![CDATA[ofkJSuGtXgB8n23e-y0kqDjJLXxk]]&gt;&lt;/FromUserName&gt;</div><div class="line">&lt;CreateTime&gt;1482671133&lt;/CreateTime&gt;</div><div class="line">&lt;MsgType&gt;&lt;![CDATA[event]]&gt;&lt;/MsgType&gt;</div><div class="line">&lt;Event&gt;&lt;![CDATA[SCAN]]&gt;&lt;/Event&gt;</div><div class="line">&lt;EventKey&gt;&lt;![CDATA[100]]&gt;&lt;/EventKey&gt;</div><div class="line">&lt;Ticket&gt;&lt;![CDATA[gQFo8DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0cwT21FZjNtM3RXbmd3REF6Ml82AAIEzyFQVwMEAAAAAA==]]&gt;&lt;/Ticket&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>如果是<code>action_name</code>值为<code>QR_LIMIT_STR_SCENE</code>为永久的字符串参数值则响应以下内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;</div><div class="line">&lt;ToUserName&gt;&lt;![CDATA[gh_8746b7fa293e]]&gt;&lt;/ToUserName&gt;</div><div class="line">&lt;FromUserName&gt;&lt;![CDATA[ofkJSuGtXgB8n23e-y0kqDjJLXxk]]&gt;&lt;/FromUserName&gt;</div><div class="line">&lt;CreateTime&gt;1482671258&lt;/CreateTime&gt;</div><div class="line">&lt;MsgType&gt;&lt;![CDATA[event]]&gt;&lt;/MsgType&gt;</div><div class="line">&lt;Event&gt;&lt;![CDATA[SCAN]]&gt;&lt;/Event&gt;</div><div class="line">&lt;EventKey&gt;&lt;![CDATA[Javen测试二维码]]&gt;&lt;/EventKey&gt;</div><div class="line">&lt;Ticket&gt;&lt;![CDATA[gQGm8TwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyMXdXUmtXLTI5aVUxMDAwMGcwN1IAAgSOxF9YAwQAAAAA]]&gt;&lt;/Ticket&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure>
<p>#6、长链接转短链接</p>
<blockquote>
<p>将一条长链接转成短链接。<br><strong>主要使用场景</strong>： 开发者用于生成二维码的原链接（商品、支付二维码等）太长导致扫码速度和成功率下降，将原长链接通过此接口转成短链接再生成二维码将大大提升扫码速度和成功率。</p>
</blockquote>
<p><strong>接口调用请求说明</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http请求方式: POST</div><div class="line">https://api.weixin.qq.com/cgi-bin/shorturl?access_token=ACCESS_TOKEN</div></pre></td></tr></table></figure></p>
<p><strong>参数说明</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>是否必须</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>access_token</td>
<td>是</td>
<td>调用接口凭证</td>
</tr>
<tr>
<td>action</td>
<td>是</td>
<td>此处填long2short，代表长链接转短链接</td>
</tr>
<tr>
<td>long_url</td>
<td>是</td>
<td>需要转换的长链接，支持<a href="http://、https://、weixin://wxpay" target="_blank" rel="external">http://、https://、weixin://wxpay</a> 格式的url</td>
</tr>
</tbody>
</table>
<p><strong>接口封装</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 将一条长链接转成短链接 API</div><div class="line"> * 文档地址：http://mp.weixin.qq.com/wiki/6/d2ec191ffdf5a596238385f75f95ecbe.html</div><div class="line"> */</div><div class="line">public class ShorturlApi</div><div class="line">&#123;</div><div class="line">    private static String apiUrl = &quot;https://api.weixin.qq.com/cgi-bin/shorturl?access_token=&quot;;</div><div class="line">    </div><div class="line">    public static ApiResult getShorturl(String jsonStr) &#123;</div><div class="line">        String jsonResult = HttpUtils.post(apiUrl + AccessTokenApi.getAccessTokenStr(), jsonStr);</div><div class="line">        return new ApiResult(jsonResult);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 长链接转短链接接口</div><div class="line">     * @param longUrl 需要转换的长链接，支持http://、https://、weixin://wxpay 格式的url</div><div class="line">     * @return ApiResult 短连接信息</div><div class="line">     */</div><div class="line">    public static ApiResult getShortUrl(String longUrl) &#123;</div><div class="line">        Map&lt;String, Object&gt; params = new HashMap&lt;String, Object&gt;();</div><div class="line">        params.put(&quot;action&quot;, &quot;long2short&quot;);</div><div class="line">        params.put(&quot;long_url&quot;, longUrl);</div><div class="line">        return getShorturl(JsonUtils.toJson(params));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>测试</strong></p>
<blockquote>
<p>将我简书主页<code>http://www.jianshu.com/users/9be31238fda1/latest_articles</code> 转成短链接</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * 长链接转成短链接</div><div class="line">     */</div><div class="line">    public void getShorturl()</div><div class="line">    &#123;</div><div class="line">        String str = &quot;&#123;\&quot;action\&quot;:\&quot;long2short\&quot;,&quot; +</div><div class="line">                &quot;\&quot;long_url\&quot;:\&quot;http://www.jianshu.com/users/9be31238fda1/latest_articles\&quot;&#125;&quot;;</div><div class="line">        ApiResult apiResult = ShorturlApi.getShorturl(str);</div><div class="line">        renderText(apiResult.getJson());</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>浏览器测试<code>http://localhost:8080/api/getShorturl</code> 正确返回如下内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;errcode&quot;:0,&quot;errmsg&quot;:&quot;ok&quot;,&quot;short_url&quot;:&quot;http://w.url.cn/s/Asx90AS&quot;&#125;</div></pre></td></tr></table></figure>
<p>最终将我简书主页<code>http://www.jianshu.com/users/9be31238fda1/latest_articles</code><br> 转成短链接<code>http://w.url.cn/s/Asx90AS</code></p>
<blockquote>
<p>推荐阅读<br><a href="http://www.jianshu.com/p/febf7c2eea82" target="_blank" rel="external">Android版-微信APP支付</a><br><a href="http://www.jianshu.com/p/e28eb52830c5" target="_blank" rel="external">极速开发微信公众号之微信买单</a><br><a href="http://www.jianshu.com/p/cb2456a2d7a7" target="_blank" rel="external">极速开发微信公众号之公众号支付</a><br><a href="http://www.jianshu.com/p/474af73eb176" target="_blank" rel="external">极速开发微信公众号之扫码支付</a><br><a href="http://www.jianshu.com/p/ef6c9c5c5807" target="_blank" rel="external">极速开发微信公众号之刷卡支付</a><br><a href="http://www.jianshu.com/p/c06120bc1f5c" target="_blank" rel="external">极速开发微信公众号之现金红包</a><br><a href="http://www.jianshu.com/p/3d91248aea4b" target="_blank" rel="external">Android版-支付宝APP支付</a><br><a href="http://www.jianshu.com/p/7656de831a2c" target="_blank" rel="external">支付宝Wap支付</a></p>
</blockquote>
<p>记录学习的点滴，以此勉励不断奋斗的自己✌️✌️✌️ 如果对你有帮助记得点喜欢</p>
<p><a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">源码下载地址</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之页面注册、登录、找回密码]]></title>
      <url>http://javen205.oschina.io/2016/11/14/%E4%BC%9A%E5%91%98%E6%B3%A8%E5%86%8C%E3%80%81%E6%89%BE%E5%9B%9E%E5%AF%86%E7%A0%81%E3%80%81%E7%99%BB%E9%99%86%EF%BC%88%E9%82%AE%E7%AE%B1%E4%B8%8E%E6%89%8B%E6%9C%BA%E9%AA%8C%E8%AF%81%E7%A0%81%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>欢迎留言、转发</p>
<p>微信极速开发系列文章（微信支付、授权获取用户信息等）：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">点击这里</a></p>
<p>最近很多人问 <a href="http://git.oschina.net/javen205/weixin_guide/wikis/%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C%E5%9B%BE" target="_blank" rel="external">开源项目中的截图如何使用，我怎么看不到这个效果。</a> 今天就来聊聊这个话题</p>
<a id="more"></a>
<h6 id="1、如何显示会员登录页？"><a href="#1、如何显示会员登录页？" class="headerlink" title="1、如何显示会员登录页？"></a>1、如何显示会员登录页？</h6><p>如果你没有做任何的改动项目中访问的地址为：<code>http://域名或者IP[/项目名称]/toOauth</code> </p>
<p> 具体实现在<code>com.javen.controller.IndexController</code> 。</p>
<blockquote>
<p>说明：通过<code>授权获取用户信息</code> 将获取到的信息保存到<code>users</code> 表并将<code>OpenId</code> 放到<code>session</code> ，授权之后根据<code>state</code> 跳转到不同的页面。其中还判断了用户是否关注如果没有关注就重定向到关注的图文(不是必须，可以忽略)  。具体实现可以看<code>com.javen.weixin.controller.WeiXinOauthController</code> 中的代码 <a href="http://www.jianshu.com/p/01b04bdf9645" target="_blank" rel="external">如何授权获取用户信息点击这里</a> </p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-74e859f2350bc99b.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="会员登录"></p>
<h6 id="2、如何显示注册-忘记密码页？"><a href="#2、如何显示注册-忘记密码页？" class="headerlink" title="2、如何显示注册/忘记密码页？"></a>2、如何显示注册/忘记密码页？</h6><p>会员登录页显示出来了，注册/忘记密码就不难了只是页面之间的跳转。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-bc07039eb978f534.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="注册、忘记密码代码实现.png"></p>
<h6 id="3、前端使用什么框架？"><a href="#3、前端使用什么框架？" class="headerlink" title="3、前端使用什么框架？"></a>3、前端使用什么框架？</h6><p>前端页面代码都在<code>/weixin_guide/src/main/webapp/front</code></p>
<p>前端框架 <a href="http://jqweui.com" target="_blank" rel="external">jQuery WeUI</a><br>弹出框 <a href="http://www.layui.com" target="_blank" rel="external">layer</a></p>
<h6 id="4、邮箱、手机发送验证码？"><a href="#4、邮箱、手机发送验证码？" class="headerlink" title="4、邮箱、手机发送验证码？"></a>4、邮箱、手机发送验证码？</h6><h6 id="邮箱发送验证码工具类-weixin-guide-src-main-java-com-javen-utils-EmailUtils-java"><a href="#邮箱发送验证码工具类-weixin-guide-src-main-java-com-javen-utils-EmailUtils-java" class="headerlink" title="邮箱发送验证码工具类/weixin_guide/src/main/java/com/javen/utils/EmailUtils.java"></a>邮箱发送验证码工具类<code>/weixin_guide/src/main/java/com/javen/utils/EmailUtils.java</code></h6><p><a href="http://git.oschina.net/596392912/JFinal2.0-beetl-training/blob/master/src/main/java/net/dreamlu/utils/EmailUtils.java?dir=0&amp;filepath=src%2Fmain%2Fjava%2Fnet%2Fdreamlu%2Futils%2FEmailUtils.java&amp;oid=58d8b7ce91b12828064ac953e9817757fcdde455&amp;sha=717d905182ddeb87a3b8b1c8599acac5f5799773" target="_blank" rel="external">参考资料</a> </p>
<p>具体实现分为<code>同步异步</code>发送邮件 <code>/weixin_guide/src/main/java/com/javen/utils/WebUtils.java</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/**</div><div class="line">	 * 异步发送Email</div><div class="line">	 * @param email</div><div class="line">	 * @param subject</div><div class="line">	 * @param content</div><div class="line">	 */</div><div class="line">	public static void sendAsynMail(String email,String subject,String content)&#123;</div><div class="line">		EmailUtils.asynMail(MailData.New()</div><div class="line">				.subject(subject)</div><div class="line">				.content(content)</div><div class="line">				.to(email)</div><div class="line">				.cc(PropKit.get(&quot;notify_email_test&quot;))</div><div class="line">				);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 同步发送Email</div><div class="line">	 * @param email</div><div class="line">	 * @param subject</div><div class="line">	 * @param content</div><div class="line">	 * @return</div><div class="line">	 */</div><div class="line">	public static boolean sendMail(String email,String subject,String content)&#123;</div><div class="line">		return EmailUtils.sendMail(MailData.New()</div><div class="line">				.subject(subject)</div><div class="line">				.content(content)</div><div class="line">				.to(email)</div><div class="line">				.cc(PropKit.get(&quot;notify_email_test&quot;))</div><div class="line">				);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p>测试时需要在 <code>/weixin_guide/src/main/resources/mail.properties</code> 中配置相关的参数</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-6fbe3d3ddb55abf5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="邮件参数配置.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-a4681c22205aeda4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="之前测试的截图.png"></p>
<h6 id="手机发送验证码工具封装"><a href="#手机发送验证码工具封装" class="headerlink" title="手机发送验证码工具封装"></a>手机发送验证码工具封装</h6><p>这里使用的是第三方的平台,如果有需要可以联系我索取。具体实现代码如下<br><code>/weixin_guide/src/main/java/com/javen/utils/SMSUtils.java</code></p>
<p>具体页面逻辑实现</p>
<p><code>/weixin_guide/src/main/java/com/javen/controller/AjaxController.java</code> 中的<code>login()</code> 、<code>forget()</code> </p>
<h6 id="5、其他页面？"><a href="#5、其他页面？" class="headerlink" title="5、其他页面？"></a>5、其他页面？</h6><p>百度翻译 </p>
<p><code>/weixin_guide/src/main/java/com/javen/controller/IndexController.java</code> 中的<code>translate()</code> 方法 访问地址<code>http://域名或者IP[/项目名称/端口号]/translate</code> </p>
<p>星座运势 </p>
<p><code>/weixin_guide/src/main/java/com/javen/controller/ConstellationController.java</code> 访问地址<code>http://域名或者IP[/项目名称/端口号]/constellation</code> </p>
<p>如果有疑问请留言或者加群 148540125</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之现金红包]]></title>
      <url>http://javen205.oschina.io/2016/10/22/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E7%8E%B0%E9%87%91%E7%BA%A2%E5%8C%85/</url>
      <content type="html"><![CDATA[<p>欢迎留言、转发</p>
<p>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">点击这里</a></p>
<blockquote>
<p>前几篇文章介绍了微信支付。 <a href="http://www.jianshu.com/p/cb2456a2d7a7" target="_blank" rel="external">公众号支付</a>、<a href="http://www.jianshu.com/p/474af73eb176" target="_blank" rel="external">微信扫码支付</a>、<a href="http://www.jianshu.com/p/ef6c9c5c5807" target="_blank" rel="external">刷卡支付</a>、<a href="http://www.jianshu.com/p/e28eb52830c5" target="_blank" rel="external">微信买单</a></p>
</blockquote>
<p>此文来聊聊微信商户中的支付工具—-现金红包<br><a id="more"></a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-447e3de25bc44add.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="现金红包.png"></p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><a href="https://pay.weixin.qq.com/wiki/doc/api/tools/cash_coupon.php?chapter=13_3&amp;index=2" target="_blank" rel="external">【官方文档】</a></p>
<p>一、开通现金红包权限</p>
<p>在使用现金红包之前，请前往开通现金红包功能。操作路径：【登录微信支付商户平台——&gt;产品中心——&gt;现金红包——&gt;开通】。</p>
<p>二、下载API证书</p>
<p>商户调用微信红包接口时，服务器会进行证书验证，请在商户平台下载证书</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-870f4ddcaca1bc4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="现金红包-下载证书.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-ccbc54296e406cdf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="现金红包-下载之后的文件.png"></p>
<blockquote>
<p>有人要问这么多证书到底使用那个呢？跟开发语言有关系吗？</p>
</blockquote>
<p>什么语言使用什么证书,以及如何使用可以参考截图中的<code>证书说明.txt</code></p>
<p>内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">欢迎使用微信支付！</div><div class="line">微信支付API共四份（证书pkcs12格式、证书pem格式、证书密钥pem格式、CA证书）,为接口中强制要求时需携带的证书文件。</div><div class="line">证书属于敏感信息，请妥善保管不要泄露和被他人复制。</div><div class="line">不同开发语言下的证书格式不同，以下为说明指引：</div><div class="line">	证书pkcs12格式（apiclient_cert.p12）</div><div class="line">		包含了私钥信息的证书文件，为p12(pfx)格式，由微信支付签发给您用来标识和界定您的身份</div><div class="line">		部分安全性要求较高的API需要使用该证书来确认您的调用身份</div><div class="line">		windows上可以直接双击导入系统，导入过程中会提示输入证书密码，证书密码默认为您的商户ID（如：10010000）</div><div class="line">	证书pem格式（apiclient_cert.pem）</div><div class="line">		从apiclient_cert.p12中导出证书部分的文件，为pem格式，请妥善保管不要泄漏和被他人复制</div><div class="line">		部分开发语言和环境，不能直接使用p12文件，而需要使用pem，所以为了方便您使用，已为您直接提供</div><div class="line">		您也可以使用openssl命令来自己导出：openssl pkcs12 -clcerts -nokeys -in apiclient_cert.p12 -out apiclient_cert.pem</div><div class="line">	证书密钥pem格式（apiclient_key.pem）</div><div class="line">		从apiclient_cert.p12中导出密钥部分的文件，为pem格式</div><div class="line">		部分开发语言和环境，不能直接使用p12文件，而需要使用pem，所以为了方便您使用，已为您直接提供</div><div class="line">		您也可以使用openssl命令来自己导出：openssl pkcs12 -nocerts -in apiclient_cert.p12 -out apiclient_key.pem</div><div class="line">	CA证书（rootca.pem）</div><div class="line">		微信支付api服务器上也部署了证明微信支付身份的服务器证书，您在使用api进行调用时也需要验证所调用服务器及域名的真实性</div><div class="line">		该文件为签署微信支付证书的权威机构的根证书，可以用来验证微信支付服务器证书的真实性</div><div class="line">		某些环境和工具已经内置了若干权威机构的根证书，无需引用该证书也可以正常进行验证，这里提供给您在未内置所必须根证书的环境中载入使用</div></pre></td></tr></table></figure>
<p>三、充值</p>
<p>在发放现金红包之前，请确保你的资金充足。如若不足，请充值。操作路径：【登录商户平台——&gt;账户中心——&gt;资金管理——&gt;充值】</p>
<blockquote>
<p>每个红包的平均金额必须在1.00元到200.00元之间</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-10010e412fc3e9ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="现金红包-充值.png"></p>
<p>四、获取openid</p>
<p>目前支持向指定微信用户的openid发放指定金额红包。（获取openid参见之前写的文章：<a href="http://www.jianshu.com/p/01b04bdf9645" target="_blank" rel="external">极速开发微信公众号之授权获取用户信息</a></p>
<p>五、相关参数设置</p>
<p> 和红包相关的参数【主要是安全方面：绑定IP、防止用户盗刷】，你可以在页面上自主设置和更改。<br>操作路径如下：【登录商户平台——&gt;产品中心——&gt;现金红包——&gt;产品设置】（注：“产品设置”操作按钮仅当你开通现金红包功能之后才会出现）。<br>你可以设置和更改以下参数：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-fd2000216b7aed6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="现金红包-设置参数.png"></p>
<p>说明：<br>1、 调用IP地址：设置之后，仅有已设置的IP地址可以调用，其余的IP调用会报错；<br>2、用户领取上限：限制同一openid同一日领取的个数<br>3、防刷等级：防刷是指微信风控针对微信小号、僵尸号、机器号等的拦截，你可以通过更改防刷等级控制防刷的强度。<br>4、 同时，你也可以申请更改红包额度。但是需要经过微信支付的审核，审核通过之后才会生效。</p>
<h2 id="现金红包类别"><a href="#现金红包类别" class="headerlink" title="现金红包类别"></a>现金红包类别</h2><blockquote>
<p>现金红包分为两类：<br>1、普通红包 <a href="https://pay.weixin.qq.com/wiki/doc/api/tools/cash_coupon.php?chapter=13_4&amp;index=3" target="_blank" rel="external">【官方文档】</a><br>2、裂变红包 <a href="https://pay.weixin.qq.com/wiki/doc/api/tools/cash_coupon.php?chapter=13_5&amp;index=4" target="_blank" rel="external">【官方文档】</a></p>
<p>两者部分参数不同</p>
</blockquote>
<h2 id="发送现金红包"><a href="#发送现金红包" class="headerlink" title="发送现金红包"></a>发送现金红包</h2><p>1、发送普通红包接口 <code>com.javen.weixin.api.RedPackApi.java</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">private static String sendRedPackUrl = &quot;https://api.mch.weixin.qq.com/mmpaymkttransfers/sendredpack&quot;;</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 发送红包</div><div class="line">	 * @param params 请求参数</div><div class="line">	 * @param certPath 证书文件目录</div><div class="line">	 * @param partner 证书密码</div><div class="line">	 * @return &#123;String&#125;</div><div class="line">	 */</div><div class="line">	public static String sendRedPack(Map&lt;String, String&gt; params, String certPath, String partner) &#123;</div><div class="line">		return HttpUtils.postSSL(sendRedPackUrl, PaymentKit.toXml(params), certPath, partner);</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>2、发送裂变红包接口 <code>com.javen.weixin.api.RedPackApi.java</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">private static String sendGroupRedPackUrl = &quot;https://api.mch.weixin.qq.com/mmpaymkttransfers/sendgroupredpack&quot;;</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 发送裂变红包</div><div class="line">	 * @param params 请求参数</div><div class="line">	 * @param certPath 证书文件目录</div><div class="line">	 * @param partner 证书密码</div><div class="line">	 * @return &#123;String&#125;</div><div class="line">	 */</div><div class="line">	public static String sendGroupRedPack(Map&lt;String, String&gt; params, String certPath, String partner) &#123;</div><div class="line">		return HttpUtils.postSSL(sendGroupRedPackUrl, PaymentKit.toXml(params), certPath, partner);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p>具体实现封装 <code>com.javen.utils.ReadPackUtils.java</code><br>1、普通红包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">	 * 发送普通红包</div><div class="line">	 * @param request 获取IP</div><div class="line">	 * @param total_amount  付款现金(单位分)</div><div class="line">	 * @param total_num 红包发放总人数</div><div class="line">	 * @param wishing 红包祝福语</div><div class="line">	 * @param act_name 活动名称</div><div class="line">	 * @param remark 备注</div><div class="line">	 * @param reOpenid 用户openid</div><div class="line">	 * @param partner 商户号</div><div class="line">	 * @param wxappid 公众账号appid</div><div class="line">	 * @param sendName 商户名称</div><div class="line">	 * @param paternerKey 商户签名key</div><div class="line">	 * @param certPath 证书路径</div><div class="line">	 * @return</div><div class="line">	 */</div><div class="line">	public static boolean sendredpack(HttpServletRequest request,String total_amount,String total_num,String wishing,String act_name,String remark,String reOpenid,String partner,String wxappid,String sendName,String paternerKey,String certPath) &#123;</div><div class="line">		// 商户订单号</div><div class="line">		String mchBillno = System.currentTimeMillis() + &quot;&quot;;</div><div class="line">		String ip = IpKit.getRealIp(request);</div><div class="line"></div><div class="line">		Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();</div><div class="line">		// 随机字符串</div><div class="line">		params.put(&quot;nonce_str&quot;, System.currentTimeMillis() / 1000 + &quot;&quot;);</div><div class="line">		// 商户订单号</div><div class="line">		params.put(&quot;mch_billno&quot;, mchBillno);</div><div class="line">		// 商户号</div><div class="line">		params.put(&quot;mch_id&quot;, partner);</div><div class="line">		// 公众账号ID</div><div class="line">		params.put(&quot;wxappid&quot;, wxappid);</div><div class="line">		// 商户名称</div><div class="line">		params.put(&quot;send_name&quot;, sendName);</div><div class="line">		// 用户OPENID</div><div class="line">		params.put(&quot;re_openid&quot;, reOpenid);</div><div class="line">		// 付款现金(单位分)</div><div class="line">		params.put(&quot;total_amount&quot;, total_amount);</div><div class="line">		// 红包发放总人数</div><div class="line">		params.put(&quot;total_num&quot;, total_num);</div><div class="line">		// 红包祝福语</div><div class="line">		params.put(&quot;wishing&quot;, wishing);</div><div class="line">		// 终端IP</div><div class="line">		params.put(&quot;client_ip&quot;, ip);</div><div class="line">		// 活动名称</div><div class="line">		params.put(&quot;act_name&quot;, act_name	);</div><div class="line">		// 备注</div><div class="line">		params.put(&quot;remark&quot;, remark);</div><div class="line">		//创建签名</div><div class="line">		String sign = PaymentKit.createSign(params, paternerKey);</div><div class="line">		params.put(&quot;sign&quot;, sign);</div><div class="line"></div><div class="line">		String xmlResult = RedPackApi.sendRedPack(params, certPath, partner);</div><div class="line">		Map&lt;String, String&gt; result = PaymentKit.xmlToMap(xmlResult);</div><div class="line">		log.warn(JsonKit.toJson(result));</div><div class="line">		//此字段是通信标识，非交易标识，交易是否成功需要查看result_code来判断</div><div class="line">		String return_code = result.get(&quot;return_code&quot;);</div><div class="line">		//业务结果</div><div class="line">		String result_code = result.get(&quot;result_code&quot;);</div><div class="line">		</div><div class="line">		if (StrKit.isBlank(return_code) || !&quot;SUCCESS&quot;.equals(return_code)) &#123;</div><div class="line">			return false;</div><div class="line">		&#125;</div><div class="line">		if (StrKit.notBlank(result_code) &amp;&amp; &quot;SUCCESS&quot;.equals(result_code)) &#123;</div><div class="line">			</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">		return false;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>2、裂变红包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">	 * 发送裂变红包</div><div class="line">	 * @param partner</div><div class="line">	 * @param wxappid</div><div class="line">	 * @param sendName</div><div class="line">	 * @param reOpenid</div><div class="line">	 * @param total_amount</div><div class="line">	 * @param total_num</div><div class="line">	 * @param wishing</div><div class="line">	 * @param act_name</div><div class="line">	 * @param remark</div><div class="line">	 * @param paternerKey</div><div class="line">	 * @param certPath</div><div class="line">	 * @return</div><div class="line">	 */</div><div class="line">	public static boolean sendGroupRedPack(String partner, String wxappid, String sendName, String reOpenid, String total_amount, String total_num, String wishing, String act_name, String remark, String paternerKey, String certPath)&#123;</div><div class="line">		// 商户订单号</div><div class="line">		String mchBillno = System.currentTimeMillis() + &quot;&quot;;</div><div class="line">		</div><div class="line">		Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();</div><div class="line">		// 随机字符串</div><div class="line">		params.put(&quot;nonce_str&quot;, System.currentTimeMillis() / 1000 + &quot;&quot;);</div><div class="line">		// 商户订单号</div><div class="line">		params.put(&quot;mch_billno&quot;, mchBillno);</div><div class="line">		// 商户号</div><div class="line">		params.put(&quot;mch_id&quot;, partner);</div><div class="line">		// 公众账号ID</div><div class="line">		params.put(&quot;wxappid&quot;, wxappid);</div><div class="line">		// 商户名称</div><div class="line">		params.put(&quot;send_name&quot;, sendName);</div><div class="line">		// 用户OPENID</div><div class="line">		params.put(&quot;re_openid&quot;, reOpenid);</div><div class="line">		// 付款现金(单位分)</div><div class="line">		params.put(&quot;total_amount&quot;, total_amount);</div><div class="line">		// 红包发放总人数</div><div class="line">		params.put(&quot;total_num&quot;, total_num);</div><div class="line">		//红包金额设置方式</div><div class="line">		params.put(&quot;amt_type&quot;, &quot;ALL_RAND&quot;);</div><div class="line">		// 红包祝福语</div><div class="line">		params.put(&quot;wishing&quot;, wishing);</div><div class="line">		// 活动名称</div><div class="line">		params.put(&quot;act_name&quot;, act_name	);</div><div class="line">		// 备注</div><div class="line">		params.put(&quot;remark&quot;, remark);</div><div class="line">		</div><div class="line">		//创建签名</div><div class="line">		String sign = PaymentKit.createSign(params, paternerKey);</div><div class="line">		params.put(&quot;sign&quot;, sign);</div><div class="line">		</div><div class="line">		String xmlResult = RedPackApi.sendGroupRedPack(params, certPath, partner);</div><div class="line">		Map&lt;String, String&gt; result = PaymentKit.xmlToMap(xmlResult);</div><div class="line">		log.warn(JsonKit.toJson(result));</div><div class="line">		//此字段是通信标识，非交易标识，交易是否成功需要查看result_code来判断</div><div class="line">		String return_code = result.get(&quot;return_code&quot;);</div><div class="line">		//业务结果</div><div class="line">		String result_code = result.get(&quot;result_code&quot;);</div><div class="line">		</div><div class="line">		if (StrKit.isBlank(return_code) || !&quot;SUCCESS&quot;.equals(return_code)) &#123;</div><div class="line">			return false;</div><div class="line">		&#125;</div><div class="line">		if (StrKit.notBlank(result_code) &amp;&amp; &quot;SUCCESS&quot;.equals(result_code)) &#123;</div><div class="line">			</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">		return false;</div><div class="line">		</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h2 id="发送红包Demo"><a href="#发送红包Demo" class="headerlink" title="发送红包Demo"></a>发送红包Demo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 微信红包demo</div><div class="line"> * @author Javen</div><div class="line"> * 2016年5月28日</div><div class="line"> */</div><div class="line">public class RedPackApiController extends Controller &#123;</div><div class="line">	private static String sendName = &quot;Javen205&quot;;</div><div class="line">	//微信证书路径</div><div class="line">	private static String certPath = &quot;/Users/Javen/Downloads/cert/apiclient_cert.p12&quot;;</div><div class="line">	//商户相关资料</div><div class="line">	String wxappid = PropKit.get(&quot;appId&quot;);</div><div class="line">	// 微信支付分配的商户号</div><div class="line">	String partner = PropKit.get(&quot;mch_id&quot;);</div><div class="line">	//API密钥</div><div class="line">	String paternerKey = PropKit.get(&quot;paternerKey&quot;);</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * 发送普通红包</div><div class="line">	 */</div><div class="line">	public void sendredpack() &#123;</div><div class="line">		</div><div class="line">		boolean isSend = ReadPackUtils.sendredpack(getRequest(), &quot;100&quot;, &quot;1&quot;, &quot;感谢您参加猜灯谜活动，祝您元宵节快乐！&quot;,</div><div class="line">				&quot;猜灯谜抢红包活动&quot;, &quot;猜越多得越多，快来抢！&quot;, &quot;o_pncsidC-pRRfCP4zj98h6slREw&quot;,</div><div class="line">				partner, wxappid, sendName, paternerKey, certPath);</div><div class="line">		</div><div class="line">		renderJson(isSend);</div><div class="line">	&#125;</div><div class="line">	/**</div><div class="line">	 * 发送裂变红包</div><div class="line">	 */</div><div class="line">	public void sendGroupRedPack() &#123;</div><div class="line">		</div><div class="line">		boolean isSend = ReadPackUtils.sendGroupRedPack(partner, wxappid, &quot;天虹百货&quot;, &quot;o_pncsidC-pRRfCP4zj98h6slREw&quot;, </div><div class="line">				&quot;100&quot;, &quot;10&quot;, &quot;感谢您参加猜灯谜活动，祝您元宵节快乐！&quot;, &quot;猜灯谜抢红包活动&quot;,</div><div class="line">				&quot;猜越多得越多，快来抢&quot;, paternerKey, certPath);</div><div class="line">		</div><div class="line">		</div><div class="line">		renderJson(isSend);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line"></div><div class="line">	public void query() &#123;</div><div class="line">		String query = ReadPackUtils.query(&quot;10000098201411111234567890&quot;, partner, wxappid, paternerKey, certPath);</div><div class="line">		renderJson(query);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="查询红包记录"><a href="#查询红包记录" class="headerlink" title="查询红包记录"></a>查询红包记录</h2><p><a href="https://pay.weixin.qq.com/wiki/doc/api/tools/cash_coupon.php?chapter=13_6&amp;index=5" target="_blank" rel="external">【查询红包记录官方文档】</a></p>
<p>接口封装<code>com.javen.weixin.api.RedPackApi.java</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">private static String getHBInfo = &quot;https://api.mch.weixin.qq.com/mmpaymkttransfers/gethbinfo &quot;;</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 根据商户订单号查询信息</div><div class="line">	 * @param params 请求参数</div><div class="line">	 * @param certPath 证书文件目录</div><div class="line">	 * @param partner 证书密码</div><div class="line">	 * @return &#123;String&#125;</div><div class="line">	 */</div><div class="line">	public static String getHbInfo(Map&lt;String, String&gt; params, String certPath, String partner) &#123;</div><div class="line">		return HttpUtils.postSSL(getHBInfo, PaymentKit.toXml(params), certPath, partner);</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>具体实现封装    <code>com.javen.utils.ReadPackUtils.java</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">	 * 根据商户订单号查询红包</div><div class="line">	 * @param mch_billno 商户订单号</div><div class="line">	 * @param partner 商户号</div><div class="line">	 * @param wxappid 公众账号ID</div><div class="line">	 * @param paternerKey 商户签名Key</div><div class="line">	 * @param certPath 证书路径</div><div class="line">	 * @return</div><div class="line">	 */</div><div class="line">	public static String  query(String mch_billno,String partner,String wxappid,String paternerKey,String certPath) &#123;</div><div class="line">		Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();</div><div class="line">		// 随机字符串</div><div class="line">		params.put(&quot;nonce_str&quot;, System.currentTimeMillis() / 1000 + &quot;&quot;);</div><div class="line">		// 商户订单号</div><div class="line">		params.put(&quot;mch_billno&quot;, mch_billno);</div><div class="line">		// 商户号</div><div class="line">		params.put(&quot;mch_id&quot;, partner);</div><div class="line">		// 公众账号ID</div><div class="line">		params.put(&quot;appid&quot;, wxappid);</div><div class="line">		params.put(&quot;bill_type&quot;, &quot;MCHT&quot;);</div><div class="line">		//创建签名</div><div class="line">		String sign = PaymentKit.createSign(params, paternerKey);</div><div class="line">		params.put(&quot;sign&quot;, sign);</div><div class="line"></div><div class="line">		String xmlResult = RedPackApi.getHbInfo(params, certPath, partner);</div><div class="line">		Map&lt;String, String&gt; result = PaymentKit.xmlToMap(xmlResult);</div><div class="line">		System.out.println(result);</div><div class="line">		return JsonKit.toJson(result);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p>码字完毕，以上就是微信发送现金红包的详细介绍。</p>
<p>欢迎留言、转发<br>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">http://www.jianshu.com/p/a172a1b69fdd</a><br>此文章项目开源地址：<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">极速开发微信公众号-Start支持项目发展</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之模板消息]]></title>
      <url>http://javen205.oschina.io/2016/10/20/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF/</url>
      <content type="html"><![CDATA[<p>欢迎留言、转发</p>
<p>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">点击这里</a></p>
<blockquote>
<p>最近有点小感冒，文章的更新进度延误了一些，希望此系列文章对你<code>研究微信公众开发</code>有帮助。前几篇文章介绍了微信支付。 <a href="http://www.jianshu.com/p/cb2456a2d7a7" target="_blank" rel="external">公众号支付</a>、<a href="http://www.jianshu.com/p/474af73eb176" target="_blank" rel="external">微信扫码支付</a>、<a href="http://www.jianshu.com/p/ef6c9c5c5807" target="_blank" rel="external">刷卡支付</a>、<a href="http://www.jianshu.com/p/e28eb52830c5" target="_blank" rel="external">微信买单</a></p>
</blockquote>
<p>此文来聊聊微信中的业务通知—-微信模板消息<br><a id="more"></a></p>
<h3 id="如何查看是否有权限"><a href="#如何查看是否有权限" class="headerlink" title="如何查看是否有权限"></a>如何查看是否有权限</h3><blockquote>
<p>在交流群中，总是有人问<code>个人订阅号</code>、<code>认证的订阅号</code>、<code>服务号</code> 、<code>认证的服务号</code> 某个接口是否有权限使用。</p>
</blockquote>
<p>其实这个问题很简单，在<a href="https://mp.weixin.qq.com" target="_blank" rel="external">【微信公众平台】</a>现在已经可以直接查看<code>自己</code>的公众号都能使用那些接口。</p>
<blockquote>
<p>登录<a href="https://mp.weixin.qq.com" target="_blank" rel="external">【微信公众平台】</a>进入首页&gt;开发&gt;接口权限</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-3c8ea3dba9e15e07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="模板消息-权限.png"></p>
<h3 id="添加模板消息插件"><a href="#添加模板消息插件" class="headerlink" title="添加模板消息插件"></a>添加模板消息插件</h3><blockquote>
<p>注意必须是认证的服务号</p>
</blockquote>
<p>登录<a href="https://mp.weixin.qq.com" target="_blank" rel="external">【微信公众平台】</a>进入首页&gt;添加插件功能&gt;找到模板消息按照指引流程操作即可。</p>
<h3 id="模板消息接口使用规则"><a href="#模板消息接口使用规则" class="headerlink" title="模板消息接口使用规则"></a>模板消息接口使用规则</h3><blockquote>
<p>官方文档 <a href="http://mp.weixin.qq.com/wiki/5/6dde9eaa909f83354e0094dc3ad99e05.html" target="_blank" rel="external">发送消息-模板消息接口</a> 以及 <a href="http://mp.weixin.qq.com/wiki/18/8ecd0dfc9acafb2ed86ac3ae8f7c69aa.html" target="_blank" rel="external">模板消息运营规范</a></p>
</blockquote>
<p>关于使用规则，请注意：<br>1、所有服务号都可以在功能-&gt;添加功能插件处看到申请模板消息功能的入口，但只有认证后的服务号才可以申请模板消息的使用权限并获得该权限；<br>2、需要选择公众账号服务所处的2个行业，每月可更改1次所选行业；<br>3、在所选择行业的模板库中选用已有的模板进行调用；<br>4、每个账号可以同时使用25个模板。<br>5、当前每个账号的模板消息的日调用上限为10万次，单个模板没有特殊限制。【2014年11月18日将接口调用频率从默认的日1万次提升为日10万次，可在MP登录后的开发者中心查看】。当账号粉丝数超过10W/100W/1000W时，模板消息的日调用上限会相应提升，以公众号MP后台开发者中心页面中标明的数字为准。</p>
<h3 id="添加模板消息"><a href="#添加模板消息" class="headerlink" title="添加模板消息"></a>添加模板消息</h3><p>按照上文<code>添加模板消息插件</code>之后<a href="https://mp.weixin.qq.com" target="_blank" rel="external">【微信公众平台】</a>首页左侧栏就会出现<code>模板消息</code>菜单，收取点击进去需要同意协议并设置公众账号服务所处的2个行业。</p>
<p>以上设置好了就可以通过关键词查模板库中已有的模板，如果没有找到可以自己申请。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-e3aa3943548bbd4a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="模板消息-添加模板.png"></p>
<p>找到合适的模板消息点击详情，进去查看模板详情，如果需要添加即可。添加完成会在我的模板中生成模板消息的 <code>模板ID</code>，<code>模板ID</code>在后面会用到。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-5ae434120cd1be0b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="模板消息-模板详情.png"></p>
<h2 id="测试号添加模板消息"><a href="#测试号添加模板消息" class="headerlink" title="测试号添加模板消息"></a>测试号添加模板消息</h2><p><img src="http://upload-images.jianshu.io/upload_images/1342351-b24561c99b349254.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测试号添加模板消息.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-86b9744487b1cd30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测试号添加模板消息.png"></p>
<h2 id="模板消息接口的使用"><a href="#模板消息接口的使用" class="headerlink" title="模板消息接口的使用"></a>模板消息接口的使用</h2><blockquote>
<p>客观前面都是一些准备工作,端杯茶耐心往下看。先来点实际的看看开源项目中封装的接口是如何使用的。</p>
</blockquote>
<p><code>com.javen.weixin.controller.WeixinMsgController.java</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-cd897de3173dd2c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="模板消息的使用.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-da067b01acd1f992.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="接收到的通知"></p>
<h2 id="模板消息的封装"><a href="#模板消息的封装" class="headerlink" title="模板消息的封装"></a>模板消息的封装</h2><p><a href="http://mp.weixin.qq.com/wiki/5/6dde9eaa909f83354e0094dc3ad99e05.html" target="_blank" rel="external">官方参考文档</a> 具体实现 <code>com.jfinal.weixin.sdk.api.TemplateMsgApi.java</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">public class TemplateMsgApi &#123;</div><div class="line">	</div><div class="line">	private static String sendApiUrl = &quot;https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=&quot;;</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 发送模板消息</div><div class="line">	 * @param jsonStr json字符串</div><div class="line">	 * @return &#123;ApiResult&#125;</div><div class="line">	 */</div><div class="line">	public static ApiResult send(String jsonStr) &#123;</div><div class="line">		String jsonResult = HttpUtils.post(sendApiUrl + AccessTokenApi.getAccessToken().getAccessToken(), jsonStr);</div><div class="line">		return new ApiResult(jsonResult);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>json数据的封装</p>
<p><code>com.jfinal.weixin.sdk.api.TemplateData.java</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line">public class TemplateData &#123;</div><div class="line"></div><div class="line">	private String touser;</div><div class="line">	private String template_id;</div><div class="line">	private String url;</div><div class="line">	private String topcolor;</div><div class="line">	private TemplateItem data;</div><div class="line"></div><div class="line">	public static TemplateData New() &#123;</div><div class="line">		return new TemplateData();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	private TemplateData() &#123;</div><div class="line">		this.data = new TemplateItem();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getTouser() &#123;</div><div class="line">		return touser;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public TemplateData setTouser(String touser) &#123;</div><div class="line">		this.touser = touser;</div><div class="line">		return this;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getTemplate_id() &#123;</div><div class="line">		return template_id;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public TemplateData setTemplate_id(String template_id) &#123;</div><div class="line">		this.template_id = template_id;</div><div class="line">		return this;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getUrl() &#123;</div><div class="line">		return url;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public TemplateData setUrl(String url) &#123;</div><div class="line">		this.url = url;</div><div class="line">		return this;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getTopcolor() &#123;</div><div class="line">		return topcolor;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public TemplateData setTopcolor(String topcolor) &#123;</div><div class="line">		this.topcolor = topcolor;</div><div class="line">		return this;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public TemplateItem getData() &#123;</div><div class="line">		return data;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public TemplateData add(String key, String value, String color)&#123;</div><div class="line">		data.put(key, new Item(value, color));</div><div class="line">		return this;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * 直接转化成jsonString</div><div class="line">	 * @return &#123;String&#125;</div><div class="line">	 */</div><div class="line">	public String build() &#123;</div><div class="line">		return JsonUtils.toJson(this);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public class TemplateItem extends HashMap&lt;String, Item&gt; &#123;</div><div class="line"></div><div class="line">		private static final long serialVersionUID = -3728490424738325020L;</div><div class="line">		</div><div class="line">		public TemplateItem() &#123;&#125;</div><div class="line"></div><div class="line">		public TemplateItem(String key, Item item) &#123;</div><div class="line">			this.put(key, item);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public class Item &#123;</div><div class="line">		private Object value;</div><div class="line">		private String color;</div><div class="line"></div><div class="line">		public Object getValue() &#123;</div><div class="line">			return value;</div><div class="line">		&#125;</div><div class="line">		public void setValue(Object value) &#123;</div><div class="line">			this.value = value;</div><div class="line">		&#125;</div><div class="line">		public String getColor() &#123;</div><div class="line">			return color;</div><div class="line">		&#125;</div><div class="line">		public void setColor(String color) &#123;</div><div class="line">			this.color = color;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		public Item(Object value, String color) &#123;</div><div class="line">			this.value = value;</div><div class="line">			this.color = color;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之刷卡支付]]></title>
      <url>http://javen205.oschina.io/2016/10/15/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E5%88%B7%E5%8D%A1%E6%94%AF%E4%BB%98/</url>
      <content type="html"><![CDATA[<p>欢迎留言、转发</p>
<p>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">点击这里</a></p>
<blockquote>
<p>上两篇文章介绍了微信<a href="http://www.jianshu.com/p/cb2456a2d7a7" target="_blank" rel="external">公众号支付</a>以及<a href="http://www.jianshu.com/p/474af73eb176" target="_blank" rel="external">微信扫码支付</a></p>
</blockquote>
<p>此篇文章具体来聊聊微信刷卡支付<br><a id="more"></a> </p>
<hr>
<p>刷卡支付-<a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=5_1#" target="_blank" rel="external">官方文档</a></p>
<hr>
<h2 id="场景介绍"><a href="#场景介绍" class="headerlink" title="场景介绍"></a>场景介绍</h2><ul>
<li>步骤1：用户选择刷卡支付付款并打开微信，进入“我”-&gt;“钱包”-&gt;“刷卡”条码界面</li>
<li>步骤2：收银员在商户系统操作生成支付订单，用户确认支付金额</li>
<li>步骤3：商户收银员用扫码设备扫描用户的条码/二维码，商户收银系统提交支付</li>
<li>步骤4：微信支付后台系统收到支付请求，根据验证密码规则判断是否验证用户的支付密码，不需要验证密码的交易直接发起扣款，需要验证密码的交易会弹出密码输入框。支付成功后微信端会弹出成功页面，支付失败会弹出错误提示</li>
</ul>
<h2 id="商户侧流程"><a href="#商户侧流程" class="headerlink" title="商户侧流程"></a>商户侧流程</h2><hr>
<p>详细文档介绍只需要简单了解流程 <a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=5_4" target="_blank" rel="external">点击这里</a></p>
<hr>
<p>刷卡支付接入模式可分为：商户后台接入(提供给别人使用类似第三方)和门店接入(自己使用)；<code>区别就是支付结果多分发一次</code>。</p>
<p>根据用户是否需要输入支付密码可分为：免密模式和验密模式。</p>
<h2 id="支付验证密码规则"><a href="#支付验证密码规则" class="headerlink" title="支付验证密码规则"></a>支付验证密码规则</h2><ul>
<li>支付金额&gt;500元的交易需要验证用户支付密码</li>
<li>用户账号每天最多有5笔交易可以免密，超过后需要验证密码</li>
<li>微信支付后台判断用户支付行为有异常情况，符合免密规则的交易也会要求验证密码</li>
</ul>
<blockquote>
<p>免密模式和验密模式两者的区别会在后面讲到</p>
</blockquote>
<p>下面来讲讲具体实现</p>
<p>刷卡支付当中使用的支付接口为: <a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=9_10" target="_blank" rel="external">提交刷卡支付API</a> 使用的是<code>https</code>请求；不需要微信支付证书。</p>
<p>以下是具体实现代码：<br><code>com.javen.weixin.controller.WeixinPayController</code>中的<code>micropay()</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">public void micropay()&#123;</div><div class="line">  String url=&quot;https://api.mch.weixin.qq.com/pay/micropay&quot;;</div><div class="line">  </div><div class="line">  String total_fee=&quot;1&quot;;</div><div class="line">  //授权码</div><div class="line">  String auth_code = getPara(&quot;auth_code&quot;);</div><div class="line">  </div><div class="line">  Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();</div><div class="line">  params.put(&quot;appid&quot;, appid);</div><div class="line">  params.put(&quot;mch_id&quot;, partner);</div><div class="line">  params.put(&quot;device_info&quot;, &quot;javen205&quot;);//终端设备号</div><div class="line">  params.put(&quot;nonce_str&quot;, System.currentTimeMillis() / 1000 + &quot;&quot;);</div><div class="line">  params.put(&quot;body&quot;, &quot;刷卡支付测试&quot;);</div><div class="line">//  params.put(&quot;detail&quot;, &quot;json字符串&quot;);//非必须</div><div class="line">  params.put(&quot;attach&quot;, &quot;javen205&quot;);//附加参数非必须</div><div class="line">  String out_trade_no=System.currentTimeMillis()+&quot;&quot;;</div><div class="line">  params.put(&quot;out_trade_no&quot;, out_trade_no);</div><div class="line">  params.put(&quot;total_fee&quot;, total_fee);</div><div class="line">  </div><div class="line">  String ip = IpKit.getRealIp(getRequest());</div><div class="line">  if (StrKit.isBlank(ip)) &#123;</div><div class="line">   ip = &quot;127.0.0.1&quot;;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  params.put(&quot;spbill_create_ip&quot;, ip);</div><div class="line">  params.put(&quot;auth_code&quot;, auth_code);</div><div class="line">  </div><div class="line">  String sign = PaymentKit.createSign(params, paternerKey);</div><div class="line">  params.put(&quot;sign&quot;, sign);</div><div class="line">  </div><div class="line">  String xmlResult = HttpUtils.post(url, PaymentKit.toXml(params));</div><div class="line">  //同步返回结果</div><div class="line">  System.out.println(&quot;xmlResult:&quot;+xmlResult);</div><div class="line">  </div><div class="line">  Map&lt;String, String&gt; result = PaymentKit.xmlToMap(xmlResult);</div><div class="line">  String return_code = result.get(&quot;return_code&quot;);</div><div class="line">  if (StrKit.isBlank(return_code) || !&quot;SUCCESS&quot;.equals(return_code)) &#123;</div><div class="line">   //通讯失败 </div><div class="line">   String err_code = result.get(&quot;err_code&quot;);</div><div class="line">   //用户支付中，需要输入密码</div><div class="line">   if (err_code.equals(&quot;USERPAYING&quot;)) &#123;</div><div class="line">    //等待5秒后调用【查询订单API】https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=9_2</div><div class="line">    </div><div class="line">   &#125;</div><div class="line">   renderText(&quot;通讯失败&gt;&gt;&quot;+xmlResult);</div><div class="line">   return;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  String result_code = result.get(&quot;result_code&quot;);</div><div class="line">  if (StrKit.isBlank(result_code) || !&quot;SUCCESS&quot;.equals(result_code)) &#123;</div><div class="line">   //支付失败</div><div class="line">   renderText(&quot;支付失败&gt;&gt;&quot;+xmlResult);</div><div class="line">   return;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  //支付成功 </div><div class="line">  </div><div class="line">  renderText(xmlResult);</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p> 在<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">开源项目weixin-guide</a>中 测试访问地址为<code>http://域名[/项目名称]/pay/micropay?auth_code=xxxxx</code> ， <code>授权码auth_code</code>  为微信客户端刷卡界面条形码上显示的数字。</p>
<blockquote>
<p>（注：用户刷卡条形码规则：18位纯数字，以10、11、12、13、14、15开头）</p>
</blockquote>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote>
<p>不用扫码枪也可以测试，只是测试手动输入授权码麻烦一点（1分钟刷新一次），需要你快速输入授权码。扫码枪只是读取授权码并没有多做其他的事情。</p>
</blockquote>
<p>我本地做端口映射测试的地址如下：</p>
<p>其中<code>auth_code</code> 值是谁便写的<br><code>http://域名/pay/micropay?auth_code=111</code> 在浏览器中访问</p>
<p>返回结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;</div><div class="line">&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</div><div class="line">&lt;appid&gt;&lt;![CDATA[您公众号的appid]]&gt;&lt;/appid&gt;</div><div class="line">&lt;mch_id&gt;&lt;![CDATA[您微信商户号]]&gt;&lt;/mch_id&gt;</div><div class="line">&lt;device_info&gt;&lt;![CDATA[javen205]]&gt;&lt;/device_info&gt;</div><div class="line">&lt;nonce_str&gt;&lt;![CDATA[eXgczazQq54pqcyH]]&gt;&lt;/nonce_str&gt;</div><div class="line">&lt;sign&gt;&lt;![CDATA[FF03DA0E58845CCE1FCC2166EC03FBE5]]&gt;&lt;/sign&gt;</div><div class="line">&lt;result_code&gt;&lt;![CDATA[FAIL]]&gt;&lt;/result_code&gt;</div><div class="line">&lt;err_code&gt;&lt;![CDATA[AUTH_CODE_INVALID]]&gt;&lt;/err_code&gt;</div><div class="line">&lt;err_code_des&gt;&lt;![CDATA[请扫描微信支付被扫条码/二维码]]&gt;&lt;/err_code_des&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure></p>
<p>刷卡支付超过5次就会提示输入密码</p>
<p>返回的<code>err_code</code> 为<code>USERPAYING</code></p>
<p>此时支付结果就需要通过 <a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=9_2" target="_blank" rel="external">查询订单</a>接口来获取</p>
<blockquote>
<p>这就是有密码与无密码的区别，有密码必须通过<code>查询订单</code>来获取支付结果，如果结果任然为<code>USERPAYING</code>,则每隔5秒循环调用<code>查询订单API</code>判断实际支付结果，如果用户取消支付或累计30秒用户都未支付，商户收银台退出查询流程后继续调用<code>撤销订单API</code>撤销支付交易。</p>
</blockquote>
<p>输入正确的<code>auth_code</code> 返回的结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;</div><div class="line">&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</div><div class="line">&lt;appid&gt;&lt;![CDATA[您公众号的appid]]&gt;&lt;/appid&gt;</div><div class="line">&lt;mch_id&gt;&lt;![CDATA[您微信商户号]]&gt;&lt;/mch_id&gt;</div><div class="line">&lt;device_info&gt;&lt;![CDATA[javen205]]&gt;&lt;/device_info&gt;</div><div class="line">&lt;nonce_str&gt;&lt;![CDATA[Z9p14VPJ822ZTPXP]]&gt;&lt;/nonce_str&gt;</div><div class="line">&lt;sign&gt;&lt;![CDATA[03BD421A33A5079A1BE6030E2EBA8291]]&gt;&lt;/sign&gt;</div><div class="line">&lt;result_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/result_code&gt;</div><div class="line">&lt;openid&gt;&lt;![CDATA[o_pncsidC-pRRfCP4zj98h6slREw]]&gt;&lt;/openid&gt;</div><div class="line">&lt;is_subscribe&gt;&lt;![CDATA[Y]]&gt;&lt;/is_subscribe&gt;</div><div class="line">&lt;trade_type&gt;&lt;![CDATA[MICROPAY]]&gt;&lt;/trade_type&gt;</div><div class="line">&lt;bank_type&gt;&lt;![CDATA[CFT]]&gt;&lt;/bank_type&gt;</div><div class="line">&lt;total_fee&gt;1&lt;/total_fee&gt;</div><div class="line">&lt;fee_type&gt;&lt;![CDATA[CNY]]&gt;&lt;/fee_type&gt;</div><div class="line">&lt;transaction_id&gt;&lt;![CDATA[4009682001201610156761057959]]&gt;&lt;/transaction_id&gt;</div><div class="line">&lt;out_trade_no&gt;&lt;![CDATA[1476523316727]]&gt;&lt;/out_trade_no&gt;</div><div class="line">&lt;attach&gt;&lt;![CDATA[javen205]]&gt;&lt;/attach&gt;</div><div class="line">&lt;time_end&gt;&lt;![CDATA[20161015172058]]&gt;&lt;/time_end&gt;</div><div class="line">&lt;cash_fee&gt;1&lt;/cash_fee&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure></p>
<p>使用场景描述</p>
<blockquote>
<p>如果<strong>接入模式为商户后台接入</strong> 支付成功了微信支付系统就会将上面的<code>xml</code>数据返回给商户，商户再将支付结果回调给门店收银台，收银台继续处理业务逻辑</p>
<p>如果<strong>接入模式-门店接入</strong> 支付成功了微信支付系统就会将上面的<code>xml</code>数据返回给收银台，收银台继续处理业务逻辑</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-63bc02b8ed9b5361.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="刷卡支付.png"></p>
<p>码字完毕，以上就是微信刷卡支付的详细介绍。</p>
<p>欢迎留言、转发<br>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">http://www.jianshu.com/p/a172a1b69fdd</a></p>
<p>此文章项目开源地址：<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">极速开发微信公众号-Start支持项目发展</a></p>
<blockquote>
<p>后续更新预告<br>1、微信红包<br>2、企业转账</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之扫码支付]]></title>
      <url>http://javen205.oschina.io/2016/10/15/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/</url>
      <content type="html"><![CDATA[<p>欢迎留言、转发</p>
<p>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">http://www.jianshu.com/p/a172a1b69fdd</a></p>
<p>上一篇文章介绍了微信提供的那些支付方式以及公众号支付<a href="http://www.jianshu.com/p/cb2456a2d7a7" target="_blank" rel="external">http://www.jianshu.com/p/cb2456a2d7a7</a></p>
<p>这篇文章我们来聊聊微信扫码支付（模式一以及模式二）</p>
<hr>
<p><a href="http://www.cnblogs.com/zyw-205520/p/5495115.html" target="_blank" rel="external">先奉上研究微信扫码支付踩过的坑</a></p>
<hr>
<a id="more"></a>
<h3 id="微信扫码支付文档"><a href="#微信扫码支付文档" class="headerlink" title="微信扫码支付文档"></a>微信扫码支付文档</h3><hr>
<p><a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_3" target="_blank" rel="external">扫码支付官方文档</a></p>
<hr>
<h6 id="扫码支付分为以下两种方式："><a href="#扫码支付分为以下两种方式：" class="headerlink" title="扫码支付分为以下两种方式："></a>扫码支付分为以下两种方式：</h6><p>【模式一】：商户后台系统根据微信支付规则链接生成二维码，链接中带固定参数productid（可定义为产品标识或订单号）。用户扫码后，微信支付系统将productid和用户唯一标识(openid)回调商户后台系统(需要设置支付回调URL)，商户后台系统根据productid生成支付交易，最后微信支付系统发起用户支付流程。</p>
<p>【模式二】：商户后台系统调用微信支付<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1" target="_blank" rel="external">统一下单API</a>生成预付交易，将接口返回的链接生成二维码，用户扫码后输入密码完成支付交易。注意：该模式的预付单有效期为2小时，过期后无法支付。<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_5" target="_blank" rel="external">详细接入步</a></p>
<h2 id="扫码支付模式一"><a href="#扫码支付模式一" class="headerlink" title="扫码支付模式一"></a>扫码支付模式一</h2><h1 id="1、设置支付回调URL"><a href="#1、设置支付回调URL" class="headerlink" title="1、设置支付回调URL"></a>1、设置支付回调URL</h1><p>商户支付回调URL设置指引：进入公众平台–&gt;微信支付–&gt;开发配置–&gt;扫码支付–&gt;修改  如下图（来自官方文档）</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-b11921b3759fd819.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扫码支付模式一  设置回调URL.png"></p>
<blockquote>
<p>在<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">开源项目weixin-guide</a>中<code>扫码支付模式一</code>的回调URL为<code>http://域名[/项目名称]/pay/wxpay</code></p>
</blockquote>
<h1 id="2、根据微信支付规则链接生成二维码"><a href="#2、根据微信支付规则链接生成二维码" class="headerlink" title="2、根据微信支付规则链接生成二维码"></a>2、根据微信支付规则链接生成二维码</h1><h6 id="2-1-生成二维码规则"><a href="#2-1-生成二维码规则" class="headerlink" title="2.1 生成二维码规则"></a>2.1 生成二维码规则</h6><p>二维码中的内容为链接，形式为：</p>
<blockquote>
<p>weixin://wxpay/bizpayurl?sign=XXXXX&amp;appid=XXXXX&amp;mch_id=XXXXX&amp;product_id=XXXXXX&amp;time_stamp=XXXXXX&amp;nonce_str=XXXXX</p>
</blockquote>
<p>详细的参数说明参考文档 <a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_4" target="_blank" rel="external">点击这里</a> </p>
<p>商户ID(mch_id)如何获取<a href="http://www.jianshu.com/p/cb2456a2d7a7" target="_blank" rel="external">点击这里</a></p>
<p>签名安全规则文档 <a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=4_3" target="_blank" rel="external">点击这里</a></p>
<blockquote>
<p>在<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">开源项目weixin-guide</a>中 <code>扫码支付模式一</code>  生成二维码规则封装如下：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">public String getCodeUrl()&#123;</div><div class="line">  String url=&quot;weixin://wxpay/bizpayurl?sign=XXXXX&amp;appid=XXXXX&amp;mch_id=XXXXX&amp;product_id=XXXXX&amp;time_stamp=XXXXX&amp;nonce_str=XXXXX&quot;;</div><div class="line">  String product_id=&quot;001&quot;;</div><div class="line">  String timeStamp=Long.toString(System.currentTimeMillis() / 1000);</div><div class="line">  String nonceStr=Long.toString(System.currentTimeMillis());</div><div class="line">  Map&lt;String, String&gt; packageParams = new HashMap&lt;String, String&gt;();</div><div class="line">  packageParams.put(&quot;appid&quot;, appid);</div><div class="line">  packageParams.put(&quot;mch_id&quot;, partner);</div><div class="line">  packageParams.put(&quot;product_id&quot;,product_id);</div><div class="line">  packageParams.put(&quot;time_stamp&quot;, timeStamp);</div><div class="line">  packageParams.put(&quot;nonce_str&quot;, nonceStr);</div><div class="line">  String packageSign = PaymentKit.createSign(packageParams, paternerKey);</div><div class="line">  </div><div class="line">  return StringUtils.replace(url, &quot;XXXXX&quot;, packageSign,appid,partner,product_id,timeStamp,nonceStr);</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>以上<code>action</code> 在<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">开源项目weixin-guide</a>中 访问地址为<code>http://域名[/项目名称]/pay/getCodeUrl</code>  其中 <code>product_id</code> 根据实际的业务逻辑可以当做参数传入</p>
<h6 id="2-2-生成二维码并在页面上显示"><a href="#2-2-生成二维码并在页面上显示" class="headerlink" title="2.2 生成二维码并在页面上显示"></a>2.2 生成二维码并在页面上显示</h6><p>根据2.1生成二维码规则生成了二维码中的内容(链接)来生成二维码。</p>
<blockquote>
<p>商户可调用第三方库生成二维码图片</p>
</blockquote>
<p>这里使用google 开源图形码工具Zxing</p>
<p>项目中引入相关的jar包 具体配置参考项目中的<code>pom.xml</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 版本号--&gt;</div><div class="line">&lt;zxing.version&gt;3.2.1&lt;/zxing.version&gt;</div><div class="line"></div><div class="line">&lt;!-- 开源多维码生成工具 --&gt;</div><div class="line">  &lt;dependency&gt;</div><div class="line">   &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</div><div class="line">   &lt;artifactId&gt;core&lt;/artifactId&gt;</div><div class="line">   &lt;version&gt;$&#123;zxing.version&#125;&lt;/version&gt;</div><div class="line">  &lt;/dependency&gt;</div><div class="line">  &lt;dependency&gt;</div><div class="line">   &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</div><div class="line">   &lt;artifactId&gt;javase&lt;/artifactId&gt;</div><div class="line">   &lt;version&gt;$&#123;zxing.version&#125;&lt;/version&gt;</div><div class="line">  &lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>封装的工具类为<code>com.javen.kit.ZxingKit</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * google 开源图形码工具Zxing使用</div><div class="line"> */</div><div class="line">public class ZxingKit &#123;</div><div class="line"> private static Log log = Log.getLog(ZxingKit.class.getSimpleName());</div><div class="line"></div><div class="line"> /**</div><div class="line">  * Zxing图形码生成工具</div><div class="line">  *</div><div class="line">  * @param contents</div><div class="line">  *            内容</div><div class="line">  * @param barcodeFormat</div><div class="line">  *            BarcodeFormat对象</div><div class="line">  * @param format</div><div class="line">  *            图片格式，可选[png,jpg,bmp]</div><div class="line">  * @param width</div><div class="line">  *            宽</div><div class="line">  * @param height</div><div class="line">  *            高</div><div class="line">  * @param margin</div><div class="line">  *            边框间距px</div><div class="line">  * @param saveImgFilePath</div><div class="line">  *            存储图片的完整位置，包含文件名</div><div class="line">  * @return</div><div class="line">  */</div><div class="line"> public static Boolean encode(String contents, BarcodeFormat barcodeFormat, Integer margin,</div><div class="line">   ErrorCorrectionLevel errorLevel, String format, int width, int height, String saveImgFilePath) &#123;</div><div class="line">  Boolean bool = false;</div><div class="line">  BufferedImage bufImg;</div><div class="line">  Map&lt;EncodeHintType, Object&gt; hints = new HashMap&lt;EncodeHintType, Object&gt;();</div><div class="line">  // 指定纠错等级</div><div class="line">  hints.put(EncodeHintType.ERROR_CORRECTION, errorLevel);</div><div class="line">  hints.put(EncodeHintType.MARGIN, margin);</div><div class="line">  hints.put(EncodeHintType.CHARACTER_SET, &quot;UTF-8&quot;);</div><div class="line">  try &#123;</div><div class="line">   // contents = new String(contents.getBytes(&quot;UTF-8&quot;), &quot;ISO-8859-1&quot;);</div><div class="line">   BitMatrix bitMatrix = new MultiFormatWriter().encode(contents, barcodeFormat, width, height, hints);</div><div class="line">   MatrixToImageConfig config = new MatrixToImageConfig(0xFF000001, 0xFFFFFFFF);</div><div class="line">   bufImg = MatrixToImageWriter.toBufferedImage(bitMatrix, config);</div><div class="line">   bool = writeToFile(bufImg, format, saveImgFilePath);</div><div class="line">  &#125; catch (Exception e) &#123;</div><div class="line">   e.printStackTrace();</div><div class="line">  &#125;</div><div class="line">  return bool;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> /**</div><div class="line">  * @param srcImgFilePath</div><div class="line">  *            要解码的图片地址</div><div class="line">  * @return</div><div class="line">  */</div><div class="line"> @SuppressWarnings(&quot;finally&quot;)</div><div class="line"> public static Result decode(String srcImgFilePath) &#123;</div><div class="line">  Result result = null;</div><div class="line">  BufferedImage image;</div><div class="line">  try &#123;</div><div class="line">   File srcFile = new File(srcImgFilePath);</div><div class="line">   image = ImageIO.read(srcFile);</div><div class="line">   if (null != image) &#123;</div><div class="line">    LuminanceSource source = new BufferedImageLuminanceSource(image);</div><div class="line">    BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));</div><div class="line"></div><div class="line">    Hashtable&lt;DecodeHintType, String&gt; hints = new Hashtable&lt;DecodeHintType, String&gt;();</div><div class="line">    hints.put(DecodeHintType.CHARACTER_SET, &quot;UTF-8&quot;);</div><div class="line">    result = new MultiFormatReader().decode(bitmap, hints);</div><div class="line">   &#125; else &#123;</div><div class="line">    log.debug(&quot;Could not decode image.&quot;);</div><div class="line">   &#125;</div><div class="line">  &#125; catch (Exception e) &#123;</div><div class="line">   e.printStackTrace();</div><div class="line">  &#125; finally &#123;</div><div class="line">   return result;</div><div class="line">  &#125;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> /**</div><div class="line">  * 将BufferedImage对象写入文件</div><div class="line">  *</div><div class="line">  * @param bufImg</div><div class="line">  *            BufferedImage对象</div><div class="line">  * @param format</div><div class="line">  *            图片格式，可选[png,jpg,bmp]</div><div class="line">  * @param saveImgFilePath</div><div class="line">  *            存储图片的完整位置，包含文件名</div><div class="line">  * @return</div><div class="line">  */</div><div class="line"> @SuppressWarnings(&quot;finally&quot;)</div><div class="line"> public static Boolean writeToFile(BufferedImage bufImg, String format, String saveImgFilePath) &#123;</div><div class="line">  Boolean bool = false;</div><div class="line">  try &#123;</div><div class="line">   bool = ImageIO.write(bufImg, format, new File(saveImgFilePath));</div><div class="line">  &#125; catch (Exception e) &#123;</div><div class="line">   e.printStackTrace();</div><div class="line">  &#125; finally &#123;</div><div class="line">   return bool;</div><div class="line">  &#125;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> public static void main(String[] args) &#123;</div><div class="line">  String saveImgFilePath = &quot;D://zxing.png&quot;;</div><div class="line">  Boolean encode = encode(&quot;我是Javen205&quot;, BarcodeFormat.QR_CODE, 3, ErrorCorrectionLevel.H, &quot;png&quot;, 200, 200,</div><div class="line">    saveImgFilePath);</div><div class="line">  if (encode) &#123;</div><div class="line">   Result result = decode(saveImgFilePath);</div><div class="line">   String text = result.getText();</div><div class="line">   System.out.println(text);</div><div class="line">  &#125;</div><div class="line"> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>OK 上面就是生成支付二维码的部分，接下来就是要将二维码显示在页面上，于是就有了下面的代码：<br><code>com.javen.weixin.controller.WeixinPayController.getPayQRCode()</code></p>
<p><code>src\\main\\webapp\\view\\payQRCode.jsp</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">  * 生成支付二维码（模式一）并在页面上显示</div><div class="line">  */</div><div class="line">public void scanCode1()&#123;</div><div class="line">  //获取扫码支付（模式一）url</div><div class="line">  String qrCodeUrl=getCodeUrl();</div><div class="line">  System.out.println(qrCodeUrl);</div><div class="line">  //生成二维码保存的路径</div><div class="line">  String name = &quot;payQRCode.png&quot;;</div><div class="line">  Boolean encode = ZxingKit.encode(qrCodeUrl, BarcodeFormat.QR_CODE, 3, ErrorCorrectionLevel.H, &quot;png&quot;, 200, 200,</div><div class="line">    PathKit.getWebRootPath()+File.separator+&quot;view&quot;+File.separator+name );</div><div class="line">  if (encode) &#123;</div><div class="line">   //在页面上显示</div><div class="line">   setAttr(&quot;payQRCode&quot;, name);</div><div class="line">   render(&quot;payQRCode.jsp&quot;);</div><div class="line">  &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>JSP 部分代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt;</div><div class="line">&lt;img alt=&quot;&quot; src=&quot;&lt;%=path %&gt;/view/$&#123;payQRCode&#125;&quot;&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>最终生成二维码访问地址为<code>http://域名[/项目名称]/pay/scanCode1</code></p>
</blockquote>
<p>以上就是微信扫码支付(模式一)生成支付二维码的全过程</p>
<h2 id="3、扫码回调商户支付URL"><a href="#3、扫码回调商户支付URL" class="headerlink" title="3、扫码回调商户支付URL"></a>3、扫码回调商户支付URL</h2><p>   用户扫码后，微信支付系统将productid和用户唯一标识(openid)回调商户后台系统。</p>
<blockquote>
<p>此回调的URL为上文<code>设置支付回调的URL</code>。特别要注意的是返回参数是xml输入流</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">HttpServletRequest request = getRequest();</div><div class="line">    /**</div><div class="line">    * 获取用户扫描二维码后，微信返回的信息</div><div class="line">    */</div><div class="line">   InputStream inStream = request.getInputStream();</div><div class="line">   ByteArrayOutputStream outSteam = new ByteArrayOutputStream();</div><div class="line">   byte[] buffer = new byte[1024];</div><div class="line">   int len = 0;</div><div class="line">   while ((len = inStream.read(buffer)) != -1) &#123;</div><div class="line">       outSteam.write(buffer, 0, len);</div><div class="line">   &#125;</div><div class="line">   outSteam.close();</div><div class="line">   inStream.close();</div><div class="line">   String result  = new String(outSteam.toByteArray(),&quot;utf-8&quot;);</div><div class="line">   System.out.println(&quot;callBack_xml&gt;&gt;&gt;&quot;+result);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;</div><div class="line">&lt;appid&gt;&lt;![CDATA[wx5e9360a3f46f64cd]]&gt;&lt;/appid&gt;</div><div class="line">&lt;openid&gt;&lt;![CDATA[o_pncsidC-pRRfCP4zj98h6slREw]]&gt;&lt;/openid&gt;</div><div class="line">&lt;mch_id&gt;&lt;![CDATA[商户ID]]&gt;&lt;/mch_id&gt;</div><div class="line">&lt;is_subscribe&gt;&lt;![CDATA[Y]]&gt;&lt;/is_subscribe&gt;</div><div class="line">&lt;nonce_str&gt;&lt;![CDATA[gT5NJAlv9eXawn1j]]&gt;&lt;/nonce_str&gt;</div><div class="line">&lt;product_id&gt;&lt;![CDATA[001]]&gt;&lt;/product_id&gt;</div><div class="line">&lt;sign&gt;&lt;![CDATA[D2BD7949269271B3112B442421B43D66]]&gt;&lt;/sign&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure>
<h2 id="4、根据回调参数生成预付订单进行支付"><a href="#4、根据回调参数生成预付订单进行支付" class="headerlink" title="4、根据回调参数生成预付订单进行支付"></a>4、根据回调参数生成预付订单进行支付</h2><p>根据回调参数调用<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1" target="_blank" rel="external">统一下单API</a>生成预支付交易的<code>prepay_id</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">prepay_xml&gt;&gt;&gt;</div><div class="line">&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;</div><div class="line">&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</div><div class="line">&lt;appid&gt;&lt;![CDATA[微信的appid]]&gt;&lt;/appid&gt;</div><div class="line">&lt;mch_id&gt;&lt;![CDATA[商户ID]]&gt;&lt;/mch_id&gt;</div><div class="line">&lt;nonce_str&gt;&lt;![CDATA[p46NAoD82eAH2d9j]]&gt;&lt;/nonce_str&gt;</div><div class="line">&lt;sign&gt;&lt;![CDATA[4117C601F41533DC84159AF6B892F72D]]&gt;&lt;/sign&gt;</div><div class="line">&lt;result_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/result_code&gt;</div><div class="line">&lt;prepay_id&gt;&lt;![CDATA[wx201610151315007cb1cbe40b0064755332]]&gt;&lt;/prepay_id&gt;</div><div class="line">&lt;trade_type&gt;&lt;![CDATA[NATIVE]]&gt;&lt;/trade_type&gt;</div><div class="line">&lt;code_url&gt;&lt;![CDATA[weixin://wxpay/bizpayurl?pr=QCLqJIG]]&gt;&lt;/code_url&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure>
<p>商户后台系统将prepay_id返回给微信支付系统,微信支付系统根据交易会话标识，发起用户端授权支付流程。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">          * 发送信息给微信服务器</div><div class="line">          */</div><div class="line">   Map&lt;String, String&gt; payResult = PaymentKit.xmlToMap(xmlResult);</div><div class="line">   </div><div class="line">   String return_code = payResult.get(&quot;return_code&quot;);</div><div class="line">   String result_code = payResult.get(&quot;result_code&quot;);</div><div class="line">   </div><div class="line">   if (StrKit.notBlank(return_code) &amp;&amp; StrKit.notBlank(result_code) &amp;&amp; return_code.equalsIgnoreCase(&quot;SUCCESS&quot;)&amp;&amp;result_code.equalsIgnoreCase(&quot;SUCCESS&quot;)) &#123;</div><div class="line">    // 以下字段在return_code 和result_code都为SUCCESS的时候有返回</div><div class="line">    String prepay_id = payResult.get(&quot;prepay_id&quot;);</div><div class="line">    </div><div class="line">    Map&lt;String, String&gt; prepayParams = new HashMap&lt;String, String&gt;();</div><div class="line">    prepayParams.put(&quot;return_code&quot;, &quot;SUCCESS&quot;);</div><div class="line">    prepayParams.put(&quot;appId&quot;, appid);</div><div class="line">    prepayParams.put(&quot;mch_id&quot;, mch_id);</div><div class="line">    prepayParams.put(&quot;nonceStr&quot;, System.currentTimeMillis() + &quot;&quot;);</div><div class="line">    prepayParams.put(&quot;prepay_id&quot;, prepay_id);</div><div class="line">    String prepaySign = null;</div><div class="line">    if (sign.equals(packageSign)) &#123;</div><div class="line">     prepayParams.put(&quot;result_code&quot;, &quot;SUCCESS&quot;);</div><div class="line">    &#125;else &#123;</div><div class="line">     prepayParams.put(&quot;result_code&quot;, &quot;FAIL&quot;);</div><div class="line">     prepayParams.put(&quot;err_code_des&quot;, &quot;订单失效&quot;);   //result_code为FAIL时，添加该键值对，value值是微信告诉客户的信息</div><div class="line">    &#125;</div><div class="line">    prepaySign = PaymentKit.createSign(prepayParams, paternerKey);</div><div class="line">    prepayParams.put(&quot;sign&quot;, prepaySign);</div><div class="line">    String xml = PaymentKit.toXml(prepayParams);</div><div class="line">    log.error(xml);</div><div class="line">    renderText(xml);</div><div class="line">    </div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h2 id="5、支付结果通用通知"><a href="#5、支付结果通用通知" class="headerlink" title="5、支付结果通用通知"></a>5、支付结果通用通知</h2><hr>
<h2 id="官方文档-点击这里"><a href="#官方文档-点击这里" class="headerlink" title="官方文档  点击这里"></a>官方文档  <a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_7" target="_blank" rel="external">点击这里</a></h2><blockquote>
<p>对后台通知交互时，如果微信收到商户的应答不是成功或超时，微信认为通知失败，微信会通过一定的策略定期重新发起通知，尽可能提高通知的成功率，但微信不保证通知最终能成功。 （通知频率为15/15/30/180/1800/1800/1800/1800/3600，单位：秒）<br><strong>注意：同样的通知可能会多次发送给商户系统。商户系统必须能够正确处理重复的通知。</strong><br>推荐的做法是，当收到通知进行处理时，首先检查对应业务数据的状态，判断该通知是否已经处理过，如果没有处理过再进行处理，如果处理过直接返回结果成功。在对业务数据进行状态检查和处理之前，要采用数据锁进行并发控制，以避免函数重入造成的数据混乱。<br><strong>特别提醒：商户系统对于支付结果通知的内容一定要做签名验证，防止数据泄漏导致出现“假通知”，造成资金损失。</strong><br>技术人员可登进微信商户后台扫描加入接口报警群。</p>
</blockquote>
<p>此通知接收地址为生成预付订单时设置的<code>notify_url</code> 。在<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">开源项目weixin-guide</a>中通知默认的地址为<code>http://域名[/项目名称]/pay/pay_notify</code></p>
<p>以上是微信扫码支付模式一的全过程。</p>
<h2 id="扫码支付模式二"><a href="#扫码支付模式二" class="headerlink" title="扫码支付模式二"></a>扫码支付模式二</h2><blockquote>
<p>模式二与模式一相比，流程更为简单，不依赖设置的回调支付URL。商户后台系统先调用微信支付的统一下单接口，微信后台系统返回链接参数code_url，商户后台系统将code_url值生成二维码图片，用户使用微信客户端扫码后发起支付。注意：code_url有效期为2小时，过期后扫码不能再发起支付。</p>
</blockquote>
<p>微信支付的统一下单接口具体实现上文也有提及到，如果还不是很清楚可以看  <code>com.javen.weixin.controller.WeixinPayController</code>中的<code>scanCode2</code> 以及<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1" target="_blank" rel="external">官方文档介绍 </a></p>
<p>以下是调用预付订单返回的xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;</div><div class="line">&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</div><div class="line">&lt;appid&gt;&lt;![CDATA[wx5e9360a3f46f64cd]]&gt;&lt;/appid&gt;</div><div class="line">&lt;mch_id&gt;&lt;![CDATA[1322117501]]&gt;&lt;/mch_id&gt;</div><div class="line">&lt;nonce_str&gt;&lt;![CDATA[XdVf2zXLErIHRfJn]]&gt;&lt;/nonce_str&gt;</div><div class="line">&lt;sign&gt;&lt;![CDATA[916703CD13C3615B9B629C4A9E4C3337]]&gt;&lt;/sign&gt;</div><div class="line">&lt;result_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/result_code&gt;</div><div class="line">&lt;prepay_id&gt;&lt;![CDATA[wx2016101514433661797ee3010493199442]]&gt;&lt;/prepay_id&gt;</div><div class="line">&lt;trade_type&gt;&lt;![CDATA[NATIVE]]&gt;&lt;/trade_type&gt;</div><div class="line">&lt;code_url&gt;&lt;![CDATA[weixin://wxpay/bizpayurl?pr=WWOXnrb]]&gt;&lt;/code_url&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure></p>
<p>其中<code>code_url</code> 就是生成二维码的链接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">String qrCodeUrl = result.get(&quot;code_url&quot;);</div><div class="line">  String name = &quot;payQRCode1.png&quot;;</div><div class="line">  Boolean encode = ZxingKit.encode(qrCodeUrl, BarcodeFormat.QR_CODE, 3, ErrorCorrectionLevel.H, &quot;png&quot;, 200, 200,</div><div class="line">    PathKit.getWebRootPath()+File.separator+&quot;view&quot;+File.separator+name );</div><div class="line">  if (encode) &#123;</div><div class="line">   //在页面上显示</div><div class="line">   setAttr(&quot;payQRCode&quot;, name);</div><div class="line">   render(&quot;payQRCode.jsp&quot;);</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
<p>扫码即可进行支付，code_url有效期为2小时，过期后扫码不能再发起支付</p>
<blockquote>
<p>最终生成二维码访问地址为<code>http://域名[/项目名称]/pay/scanCode2</code></p>
</blockquote>
<p>码字完毕，以上就是微信扫码支付（模式一、模式二）的详细介绍。</p>
<p>欢迎留言、转发<br>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">http://www.jianshu.com/p/a172a1b69fdd</a></p>
<blockquote>
<p>后续更新预告<br>1、刷卡支付<br>2、微信红包<br>3、企业转账</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之公众号支付]]></title>
      <url>http://javen205.oschina.io/2016/10/11/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E5%85%AC%E4%BC%97%E5%8F%B7%E6%94%AF%E4%BB%98/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125<br>欢迎留言、转发</p>
<p>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">http://www.jianshu.com/p/a172a1b69fdd</a></p>
<p>首先来看看微信支付都提供哪些支付方式如下图 <a href="https://pay.weixin.qq.com/wiki/doc/api/index.html" target="_blank" rel="external">官方文档</a><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/1342351-2bbc1a2405fb5fd0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-支付方式.png"></p>
<ul>
<li><p>刷卡支付<br> 由于没有设备暂不出相关文章（可以提供设备支持的请联系我）</p>
</li>
<li><p>APP支付<br> 需要在微信开放平台申请开发应用，没有申请的相关质料如果有机会后面会讲到</p>
</li>
<li><p>公众号支付<br>已实现 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">项目源码</a></p>
</li>
<li>扫码支付<br>已实现 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">项目源码</a></li>
</ul>
<p>还提供了几个支付工具<br><img src="http://upload-images.jianshu.io/upload_images/1342351-876c05dbcb93b335.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-支付工具.png"></p>
<ul>
<li>代金券或立减优惠<br> 待完成</li>
<li>现金红包<br>已实现 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">项目源码</a></li>
<li>企业付款<br>已实现 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">项目源码</a></li>
</ul>
<h1 id="开源项目中如何实现公众号支付"><a href="#开源项目中如何实现公众号支付" class="headerlink" title="开源项目中如何实现公众号支付"></a>开源项目中如何实现公众号支付</h1><blockquote>
<p>项目下载启动运行参考之前写的文章 <a href="http://www.jianshu.com/p/ab209e163614" target="_blank" rel="external">项目导入IDE并启动运行</a></p>
</blockquote>
<p>##1.设置公众号支付参数</p>
<p>登录商户平台 <a href="https://pay.weixin.qq.com" target="_blank" rel="external">https://pay.weixin.qq.com</a> 第一登录是需要下载安全控件 安装完成启动浏览器即可输入密码。</p>
<p>有人要问，账号密码从何而来？ 问这个问题的人一般是没有做微信认证或者说你负责的微信公众号的微信认证不是你亲力亲为的。</p>
<blockquote>
<p>商户平台登录的账号密码是在微信认证审核成功之后微信团队会以邮件的方式发送到你的邮箱</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-9cbac1463bec4f1f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-公众号支付参数.png"></p>
<p>其中商户号为：<br><img src="http://upload-images.jianshu.io/upload_images/1342351-826d8a8c99d22e01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-商户号.png"></p>
<p>密钥设置</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-3b3198c846d67a03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-商户密钥.png"></p>
<h2 id="2-配置支付授权目录"><a href="#2-配置支付授权目录" class="headerlink" title="2.配置支付授权目录"></a>2.配置支付授权目录</h2><blockquote>
<p>注意：<br>1、目前支付目录可以配置三个、测试授权目录一个<br>2、域名必须备案<br>3、授权目录只需要定位到Controller</p>
</blockquote>
<p><a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">开源项目</a> 中设置的授权目录为<code>http://域名[/项目名称]/jssdk</code>  </p>
<p>支付测试：<code>http://域名[/项目名称]/jssdk/customer</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 对整个Controller或者其中的方法添加JSSDK签名验证拦截器</div><div class="line"> */</div><div class="line">@Before(JSSDKInterceptor.class)</div><div class="line">public class JSSDKController extends Controller&#123;</div><div class="line">	</div><div class="line">	public void index()&#123;</div><div class="line">		render(&quot;share.jsp&quot;);</div><div class="line">	&#125;</div><div class="line">	//公众号支付、分享、分享成功添加积分</div><div class="line">	public void customer()&#123;</div><div class="line">		render(&quot;customer.jsp&quot;);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public void pic()&#123;</div><div class="line">		render(&quot;pic.jsp&quot;);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中 JSSDK的使用之前有讲过  <a href="http://www.jianshu.com/p/bb88f7520b9e" target="_blank" rel="external">如何使用JSSDK</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-f87e11abd5f12e06.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-公众号支付"></p>
<blockquote>
<p>由于开启了调试模式，加载出此页面之前会提示JSSDK签名是否成功，成功之后输入金额点击提交就会调用JavaScript 中 <code>wxpay</code> 方法ajax去<code>统一下单生成预付订单</code>  输入密码支付完成支付</p>
</blockquote>
<p>具体实现代码 <a href="http://git.oschina.net/javen205/weixin_guide/blob/master/src/main/java/com/javen/weixin/controller/WeixinPayController.java?dir=0&amp;filepath=src%2Fmain%2Fjava%2Fcom%2Fjaven%2Fweixin%2Fcontroller%2FWeixinPayController.java&amp;oid=0c6d2eba3188ae08940ed732afbbff92bcee0e51&amp;sha=dead4c5a5a05f5f21cf70587d24bd7614c90c6cc" target="_blank" rel="external">统一下单生成预付订单</a> 中的 <code>index()</code> </p>
<p>具体实现代码 <a href="http://git.oschina.net/javen205/weixin_guide/blob/master/src/main/webapp/view/customer.jsp?dir=0&amp;filepath=src%2Fmain%2Fwebapp%2Fview%2Fcustomer.jsp&amp;oid=5f1e877e21297577ed886f34ea8f14081cd6873a&amp;sha=dead4c5a5a05f5f21cf70587d24bd7614c90c6cc" target="_blank" rel="external">JSSDK 公众号支付</a> </p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-2efa28ecf3b66326.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信分享"></p>
<h2 id="3-支付成功回调"><a href="#3-支付成功回调" class="headerlink" title="3.支付成功回调"></a>3.支付成功回调</h2><p>默认的通知地址： <code>String notify_url = PropKit.get(&quot;domain&quot;)+&quot;/pay/pay_notify&quot;;</code></p>
<p>具体实现代码 <a href="http://git.oschina.net/javen205/weixin_guide/blob/master/src/main/java/com/javen/weixin/controller/WeixinPayController.java?dir=0&amp;filepath=src%2Fmain%2Fjava%2Fcom%2Fjaven%2Fweixin%2Fcontroller%2FWeixinPayController.java&amp;oid=0c6d2eba3188ae08940ed732afbbff92bcee0e51&amp;sha=dead4c5a5a05f5f21cf70587d24bd7614c90c6cc" target="_blank" rel="external">支付成功回调</a> 中的 <code>pay_notify()</code> </p>
<p>欢迎留言、转发<br>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">http://www.jianshu.com/p/a172a1b69fdd</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之微信买单]]></title>
      <url>http://javen205.oschina.io/2016/10/09/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E5%BE%AE%E4%BF%A1%E4%B9%B0%E5%8D%95/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125<br>欢迎留言、转发、打赏</p>
<p>微信极速开发系列文章：<a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">http://www.jianshu.com/p/a172a1b69fdd</a></p>
<p>首先来看看微信支付都有哪些产品</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-9d717a2040a60378.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-产品大全.png"></p>
<p>此篇文章聊聊微信买单。</p>
<a id="more"></a>
<p>微信买单是一款商户可自助开通、无需开发的微信支付收款产品，支持顾客使用信用卡支付。</p>
<p><strong>功能特点</strong><br>1、商户可自助开通，无需开发，1分钟上线微信支付；<br>2、顾客扫“收款码”付钱，支持信用卡；<br>3、店员扫“收款码”可查询收款信息；<br>4、店员可查看收款通知；</p>
<p><strong>使用方式</strong></p>
<ol>
<li><p>点击页面右上角的“申请开通”按钮，签约开通微信买单；</p>
</li>
<li><p>开通功能后，可在“账户中心”-“账户设置”-“微信买单”中添加店员后，下载打印收款二维码；</p>
</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-87d097875a1b57c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信买单-素材下载.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-0f4d01d521b7c1a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-添加店员.png"></p>
<p>填写好以上信息之后点击添加，会在微信支付公众号中收到一个通知</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-5e1f264782b4ee32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-添加店员确认通知.png"></p>
<p>点击通知会进入如下界面</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-f7414420089abc89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-开通店员通知.png"></p>
<p>买单支付界面</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-baed5afcd457e3e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信支付-微信买单.png"></p>
<p>以上就是微信买单简单的使用介绍</p>
<p>欢迎留言、转发</p>
<p>极速开发微信公众号源码地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之如何使用JSSDK]]></title>
      <url>http://javen205.oschina.io/2016/09/25/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8JSSDK/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125<br>欢迎留言、转发、打赏</p>
<p>系列文章参考地址 <a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">极速开发微信公众号</a><br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a><br><a id="more"></a></p>
<p>#查看公众号是否有使用JSSDK的权限</p>
<p>服务号、订阅号可以通过登录<a href="https://mp.weixin.qq.com" target="_blank" rel="external">微信公众平台</a>查看<code>开发&gt;接口权限</code></p>
<p>使用JSSDK主要包括<br>1、判断当前客户端版本是否支持指定JS接口、<br>2、分享接口（微信认证）<br>3、图像接口<br>4、音频接口<br>5、智能接口（识别语音并返回结果）<br>6、设备信息（获取网络状态）<br>7、地理位置<br>8、界面操作<br>9、微信扫一扫<br>10、微信小店（服务号必须通过微信认证）<br>11、微信卡券 （微信认证）<br>12、微信支付（服务号必须通过微信认证）</p>
<h1 id="使用JSSDK步骤"><a href="#使用JSSDK步骤" class="headerlink" title="使用JSSDK步骤"></a>使用JSSDK步骤</h1><p><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">官方参考文档</a></p>
<p><strong>步骤一：绑定域名</strong></p>
<p>先登录微信公众平台进入<code>公众号设置</code>的<code>功能设置</code>里填写<code>JS接口安全域名</code>。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-b5f9832d18793bf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="JS接口安全域名.png"></p>
<p><strong>步骤二：引入JS文件</strong><br>在需要调用JS接口的页面引入如下JS文件，（支持https）：<a href="http://res.wx.qq.com/open/js/jweixin-1.0.0.js" target="_blank" rel="external">http://res.wx.qq.com/open/js/jweixin-1.0.0.js</a><br>如需使用摇一摇周边功能，请引入 <a href="http://res.wx.qq.com/open/js/jweixin-1.1.0.js" target="_blank" rel="external">http://res.wx.qq.com/open/js/jweixin-1.1.0.js</a><br>备注：支持使用 AMD/CMD 标准模块加载方法加载</p>
<p><strong>步骤三：通过config接口注入权限验证配置</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wx.config(&#123;</div><div class="line">    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</div><div class="line">    appId: &apos;&apos;, // 必填，公众号的唯一标识</div><div class="line">    timestamp: , // 必填，生成签名的时间戳</div><div class="line">    nonceStr: &apos;&apos;, // 必填，生成签名的随机串</div><div class="line">    signature: &apos;&apos;,// 必填，签名，见附录1</div><div class="line">    jsApiList: [] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>签名算法生成规则</strong></p>
<p>请 <a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">官方参考文档</a></p>
<p>下面具体来讲讲 开源项目<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">weixin_guide</a>中的封装。</p>
<p>使用的时候只要在Controller方法上添加一个拦截器 <code>JSSDKInterceptor</code> 来实现签名验证再将<code>wx.config</code>需要的参数设置对应的属性在页面上进行获取。</p>
<p>拦截器实现如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">public class JSSDKInterceptor   implements Interceptor&#123;</div><div class="line">  /**</div><div class="line">   * 如果要支持多公众账号，只需要在此返回各个公众号对应的 ApiConfig 对象即可 可以通过在请求 url 中挂参数来动态从数据库中获取</div><div class="line">   * ApiConfig 属性值</div><div class="line">   */</div><div class="line">  public ApiConfig getApiConfig() &#123;</div><div class="line">    ApiConfig ac = new ApiConfig();</div><div class="line"></div><div class="line">    // 配置微信 API 相关常量</div><div class="line">    ac.setToken(PropKit.get(&quot;token&quot;));</div><div class="line">    ac.setAppId(PropKit.get(&quot;appId&quot;));</div><div class="line">    ac.setAppSecret(PropKit.get(&quot;appSecret&quot;));</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 是否对消息进行加密，对应于微信平台的消息加解密方式： 1：true进行加密且必须配置 encodingAesKey</div><div class="line">     * 2：false采用明文模式，同时也支持混合模式</div><div class="line">     */</div><div class="line">    ac.setEncryptMessage(PropKit.getBoolean(&quot;encryptMessage&quot;, false));</div><div class="line">    ac.setEncodingAesKey(PropKit.get(&quot;encodingAesKey&quot;,</div><div class="line">        &quot;setting it in config file&quot;));</div><div class="line">    return ac;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  @Override</div><div class="line">  public void intercept(Invocation inv) &#123;</div><div class="line">    inv.invoke();</div><div class="line">    Controller controller = inv.getController();</div><div class="line">    ApiConfigKit.setThreadLocalApiConfig(getApiConfig());</div><div class="line">    JsTicket jsApiTicket = JsTicketApi.getTicket(JsApiType.jsapi);</div><div class="line">    String jsapi_ticket = jsApiTicket.getTicket();</div><div class="line">    String nonce_str = create_nonce_str();</div><div class="line">    // 注意 URL 一定要动态获取，不能 hardcode.</div><div class="line">    String url = &quot;http://&quot; + controller.getRequest().getServerName() // 服务器地址</div><div class="line">        // + &quot;:&quot;</div><div class="line">        // + getRequest().getServerPort() //端口号</div><div class="line">        + controller.getRequest().getContextPath() // 项目名称</div><div class="line">        + controller.getRequest().getServletPath();// 请求页面或其他地址</div><div class="line">    String qs = controller.getRequest().getQueryString(); // 参数</div><div class="line">    if (qs != null) &#123;</div><div class="line">      url = url + &quot;?&quot; + (controller.getRequest().getQueryString());</div><div class="line">    &#125;</div><div class="line">    System.out.println(&quot;url&gt;&gt;&gt;&gt;&quot; + url);</div><div class="line">    String timestamp = create_timestamp();</div><div class="line">    // 这里参数的顺序要按照 key 值 ASCII 码升序排序</div><div class="line">    //注意这里参数名必须全部小写，且必须有序</div><div class="line">    String  str = &quot;jsapi_ticket=&quot; + jsapi_ticket +</div><div class="line">        &quot;&amp;noncestr=&quot; + nonce_str +</div><div class="line">        &quot;&amp;timestamp=&quot; + timestamp +</div><div class="line">        &quot;&amp;url=&quot; + url;</div><div class="line"></div><div class="line">    String signature = HashKit.sha1(str);</div><div class="line"></div><div class="line">    System.out.println(&quot;appId &quot; + ApiConfigKit.getApiConfig().getAppId()</div><div class="line">        + &quot;  nonceStr &quot; + nonce_str + &quot; timestamp &quot; + timestamp);</div><div class="line">    System.out.println(&quot;url &quot; + url + &quot; signature &quot; + signature);</div><div class="line">    System.out.println(&quot;nonceStr &quot; + nonce_str + &quot; timestamp &quot; + timestamp);</div><div class="line">    System.out.println(&quot; jsapi_ticket &quot; + jsapi_ticket);</div><div class="line">    System.out.println(&quot;nonce_str  &quot; + nonce_str);</div><div class="line">    </div><div class="line">    controller.setAttr(&quot;appId&quot;, ApiConfigKit.getApiConfig().getAppId());</div><div class="line">    controller.setAttr(&quot;nonceStr&quot;, nonce_str);</div><div class="line">    controller.setAttr(&quot;timestamp&quot;, timestamp);</div><div class="line">    controller.setAttr(&quot;url&quot;, url);</div><div class="line">    controller.setAttr(&quot;signature&quot;, signature);</div><div class="line">    controller.setAttr(&quot;jsapi_ticket&quot;, jsapi_ticket);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  private static String create_timestamp() &#123;</div><div class="line">    return Long.toString(System.currentTimeMillis() / 1000);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  private static String create_nonce_str() &#123;</div><div class="line">    return UUID.randomUUID().toString();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在Controller中使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 对整个Controller或者其中的方法添加JSSDK签名验证拦截器</div><div class="line"> */</div><div class="line">@Before(JSSDKInterceptor.class)</div><div class="line">public class JSSDKController extends Controller&#123;</div><div class="line">  //@Before(JSSDKInterceptor.class)</div><div class="line">  public void index()&#123;</div><div class="line">    render(&quot;share.jsp&quot;);</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  public void customer()&#123;</div><div class="line">    render(&quot;customer.jsp&quot;);</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  public void pic()&#123;</div><div class="line">    render(&quot;pic.jsp&quot;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>JSP页面上面使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line"> wx.config(&#123;</div><div class="line">    debug: true,</div><div class="line">      appId:&apos;$&#123;appId&#125;&apos;,</div><div class="line">      timestamp: &apos;$&#123;timestamp&#125;&apos;,</div><div class="line">      nonceStr: &apos;$&#123;nonceStr &#125;&apos;,</div><div class="line">      signature: &apos;$&#123;signature&#125;&apos;,</div><div class="line">      jsApiList: [</div><div class="line">        &apos;checkJsApi&apos;,</div><div class="line">        &apos;onMenuShareTimeline&apos;,</div><div class="line">        &apos;onMenuShareAppMessage&apos;,</div><div class="line">        &apos;onMenuShareQQ&apos;,</div><div class="line">        &apos;onMenuShareWeibo&apos;,</div><div class="line">        ...</div><div class="line">      ]</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">  &lt;/script&gt;</div></pre></td></tr></table></figure>
<p>测试结果 </p>
<p>在AppConfig 中添加路由<code>me.add(&quot;/jssdk&quot;, JSSDKController.class,&quot;/view&quot;);</code>手机中访问 <code>http://域名[/项目名称]/jssdk</code> ,如果设置了 <code>debug= true</code> 成功了就会弹出 </p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-69ec10d78d346165.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="JSSDK 签名验证.png"></p>
<p>如果出现 <code>{&quot;errorMsg&quot;:&quot;config:invalid url domian&quot;}</code> 请检查<strong>步骤一：绑定域名</strong> 与你访问的域名是否在安全域名列表当中</p>
<p><strong>步骤四：通过ready接口处理成功验证</strong></p>
<blockquote>
<p>  config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">wx.ready(function()&#123;</div><div class="line">    // 1 判断当前版本是否支持指定 JS 接口，支持批量判断</div><div class="line">  document.querySelector(&apos;#checkJsApi&apos;).onclick = function () &#123;</div><div class="line">    wx.checkJsApi(&#123;</div><div class="line">      jsApiList: [</div><div class="line">        &apos;getNetworkType&apos;,</div><div class="line">        &apos;previewImage&apos;</div><div class="line">      ],</div><div class="line">      success: function (res) &#123;</div><div class="line">        alert(JSON.stringify(res));</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &#125;;</div><div class="line">//下面就可以写一系列的接口了</div><div class="line">......</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>步骤五：通过error接口处理失败验证</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wx.error(function (res) &#123;</div><div class="line">  alert(res.errMsg);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>步骤六：接口调用</strong></p>
<p>拦截器具体实现 参考地址 <a href="http://git.oschina.net/javen205/weixin_guide/blob/master/src/main/java/com/javen/interceptor/JSSDKInterceptor.java?dir=0&amp;filepath=src%2Fmain%2Fjava%2Fcom%2Fjaven%2Finterceptor%2FJSSDKInterceptor.java&amp;oid=5d3c102cca8647124de4591dabcf78426c849de8&amp;sha=026d2be5f9afc78ecfc7ad2df9c142626dd57535" target="_blank" rel="external">点这里</a><br>js 接口调用参考地址 <a href="http://git.oschina.net/javen205/weixin_guide/blob/master/src/main/webapp/view/share.jsp?dir=0&amp;filepath=src%2Fmain%2Fwebapp%2Fview%2Fshare.jsp&amp;oid=7acd2066e3ab540c250215e9bf3d9fcd11fd295a&amp;sha=026d2be5f9afc78ecfc7ad2df9c142626dd57535" target="_blank" rel="external">点这里</a></p>
<p>以上就是JSSDK使用的介绍。<br>欢迎留言、转发、打赏项目</p>
<p>源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之导出用户信息到Excel]]></title>
      <url>http://javen205.oschina.io/2016/09/24/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E5%A6%82%E4%BD%95%E4%B8%80%E9%94%AE%E5%AF%BC%E5%87%BA%E5%BE%AE%E4%BF%A1%E6%89%80%E6%9C%89%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%B0Excel/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125<br>系列文章参考地址 <a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">极速开发微信公众号</a>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a><br><a id="more"></a></p>
<p>#极速开发微信公众号系列文章之如何一键导出微信所有用户信息到Excel</p>
<blockquote>
<p>前方高能警告⚠️：用户信息导出我们需要使用以下权限以及接口</p>
</blockquote>
<ul>
<li>权限：必须微信认证（测试号也是可以的）</li>
<li>接口：1、<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140840&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">获取用户列表</a> 2、<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140839&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">获取用户基本信息</a></li>
</ul>
<p>以上链接点击可以查看相关文档</p>
<blockquote>
<p>本文中用户导入到excel使用的是jxl，当然大家可以使用poi。如果不会使用jxl可以参考我之前写的 <a href="http://www.cnblogs.com/zyw-205520/p/3762954.html" target="_blank" rel="external">Java实现Excel导入数据库，数据库中的数据导入到Excel</a></p>
</blockquote>
<p>好了，准备工作做好了那就开干吧！！！！</p>
<blockquote>
<p>实现的目标：访问一个地址可以下载一个保存最新所有用户详细信息的Excel，最终效果图如下</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-3d4f8721d0c54f14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="最终效果图.png"></p>
<h1 id="将详细的用户信息（List）保存到Excel"><a href="#将详细的用户信息（List）保存到Excel" class="headerlink" title="将详细的用户信息（List）保存到Excel"></a>将详细的用户信息（List）保存到Excel</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">   * 将详细的用户信息保存到Excel</div><div class="line">   * @param userInfos</div><div class="line">   * @return</div><div class="line">   */</div><div class="line">  private File saveToExcel(List&lt;UserInfo&gt; userInfos)&#123;</div><div class="line">    File file=null;</div><div class="line">    try &#123;</div><div class="line">      WritableWorkbook wwb = null;</div><div class="line">      </div><div class="line">      // 创建可写入的Excel工作簿</div><div class="line">      String fileName = &quot;用户详细信息.xls&quot;;</div><div class="line">      file=new File(fileName);</div><div class="line">      //以fileName为文件名来创建一个Workbook</div><div class="line">      wwb = Workbook.createWorkbook(file);</div><div class="line"></div><div class="line">      // 创建工作表</div><div class="line">      WritableSheet ws = wwb.createSheet(&quot;用户详细信息&quot;, 0);</div><div class="line">      ws.setColumnView(0,8);</div><div class="line">      ws.setColumnView(1,15);</div><div class="line">      ws.setColumnView(2,50);</div><div class="line">      ws.setColumnView(3,8);</div><div class="line">      ws.setColumnView(4,10);</div><div class="line">      ws.setColumnView(5,10);</div><div class="line">      ws.setColumnView(6,10);</div><div class="line">      ws.setColumnView(7,20);</div><div class="line">      ws.setColumnView(8,50);</div><div class="line">      ws.setColumnView(9,10);</div><div class="line">      ws.setColumnView(10,30);</div><div class="line">      ws.setColumnView(11,20);</div><div class="line">      ws.setColumnView(12,20);</div><div class="line">      </div><div class="line">      ws.mergeCells(0,0,12,0);//合并第一列第一行到第七列第一行的所有单元格 </div><div class="line">      WritableFont font1= new WritableFont(WritableFont.TIMES,16,WritableFont.BOLD); </div><div class="line">      WritableCellFormat format1=new WritableCellFormat(font1); </div><div class="line">      format1.setAlignment(jxl.format.Alignment.CENTRE);</div><div class="line">      Label top= new Label(0, 0, &quot;所有用户详细信息&quot;,format1);</div><div class="line">      ws.addCell(top);</div><div class="line">      </div><div class="line">      //要插入到的Excel表格的行号，默认从0开始</div><div class="line">      Label labelId= new Label(0, 1, &quot;编号&quot;);</div><div class="line">      Label labelnickname= new Label(1, 1, &quot;用户的昵称&quot;);</div><div class="line">      Label labelopenid= new Label(2, 1, &quot;用户的标识&quot;);</div><div class="line">      Label labelsex= new Label(3, 1, &quot;性别&quot;);</div><div class="line">      Label labelcountry= new Label(4,1, &quot;所在国家&quot;);</div><div class="line">      Label labelprovince= new Label(5,1, &quot;所在省份&quot;);</div><div class="line">      Label labelcity= new Label(6, 1, &quot;所在城市&quot;);</div><div class="line">      Label labellanguage= new Label(7,1, &quot;用户的语言&quot;);</div><div class="line">      Label labelheadimgurl= new Label(8,1, &quot;用户头像&quot;);</div><div class="line">      Label labelsubscribe= new Label(9, 1, &quot;是否订阅&quot;);</div><div class="line">      Label labelsubscribetime= new Label(10, 1, &quot;关注时间&quot;);</div><div class="line">      Label labelgroupid= new Label(11, 1, &quot;所在的分组ID&quot;);</div><div class="line">      Label labelremark= new Label(12, 1, &quot;备注&quot;);</div><div class="line">      ws.addCell(labelId);</div><div class="line">      ws.addCell(labelnickname);</div><div class="line">      ws.addCell(labelopenid);</div><div class="line">      ws.addCell(labelsex);</div><div class="line">      ws.addCell(labelcountry);</div><div class="line">      ws.addCell(labelprovince);</div><div class="line">      ws.addCell(labelcity);</div><div class="line">      ws.addCell(labellanguage);</div><div class="line">      ws.addCell(labelheadimgurl);</div><div class="line">      ws.addCell(labelsubscribe);</div><div class="line">      ws.addCell(labelsubscribetime);</div><div class="line">      ws.addCell(labelgroupid);</div><div class="line">      ws.addCell(labelremark);</div><div class="line">      for (int i = 0; i &lt; userInfos.size(); i++) &#123;</div><div class="line">          </div><div class="line">          Label labelId_i= new Label(0, i+2, i+1+&quot;&quot;);</div><div class="line">          Label nickName= new Label(1, i+2, userInfos.get(i).getNickname());</div><div class="line">          Label openid= new Label(2, i+2, userInfos.get(i).getOpenid());</div><div class="line"></div><div class="line">        String sexStr=userInfos.get(i).getSex();</div><div class="line">        //用户的性别，值为1时是男性，值为2时是女性，值为0时是未知</div><div class="line">        if (StrKit.notBlank(sexStr)) &#123;</div><div class="line">          int sexInt=Integer.parseInt(sexStr);</div><div class="line">          if (sexInt==1) &#123;</div><div class="line">            sexStr=&quot;男&quot;;</div><div class="line">          &#125;else if (sexInt==2) &#123;</div><div class="line">            sexStr=&quot;女&quot;;</div><div class="line">          &#125;</div><div class="line">        &#125;else &#123;</div><div class="line">          sexStr=&quot;未知&quot;;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">          Label sex= new Label(3, i+2, sexStr);</div><div class="line">          Label country= new Label(4, i+2, userInfos.get(i).getCountry());</div><div class="line">          Label province= new Label(5, i+2, userInfos.get(i).getProvince());</div><div class="line">          Label city= new Label(6, i+2, userInfos.get(i).getCity());</div><div class="line">          Label language= new Label(7, i+2, userInfos.get(i).getLanguage());</div><div class="line">          Label headimgaeurl= new Label(8, i+2, userInfos.get(i).getHeadimgurl());</div><div class="line"></div><div class="line">          Label subscribe= new Label(9, i+2, userInfos.get(i).getSubscribe().equals(&quot;1&quot;)?&quot;已关注&quot;:&quot;未关注&quot;);</div><div class="line">        //获取关注时间</div><div class="line">        String subscribe_time = userInfos.get(i).getSubscribe_time();</div><div class="line"></div><div class="line">        if (StrKit.notBlank(subscribe_time)) &#123;</div><div class="line">          subscribe_time=sfg.format(new Date(Long.parseLong(subscribe_time) * 1000L));</div><div class="line">        &#125;</div><div class="line">          Label subscribetime= new Label(10, i+2, subscribe_time);</div><div class="line">          Label groupid= new Label(11, i+2, userInfos.get(i).getGroupid());</div><div class="line">          Label remark= new Label(12, i+2, userInfos.get(i).getRemark());</div><div class="line">          ws.addCell(labelId_i);</div><div class="line">          ws.addCell(openid);</div><div class="line">          ws.addCell(nickName);</div><div class="line">          ws.addCell(sex);</div><div class="line">          ws.addCell(country);</div><div class="line">          ws.addCell(province);</div><div class="line">          ws.addCell(city);</div><div class="line">          ws.addCell(language);</div><div class="line">          ws.addCell(headimgaeurl);</div><div class="line">          ws.addCell(subscribe);</div><div class="line">          ws.addCell(subscribetime);</div><div class="line">          ws.addCell(groupid);</div><div class="line">          ws.addCell(remark);</div><div class="line">      &#125;</div><div class="line">     </div><div class="line">      //写进文档</div><div class="line">      wwb.write();</div><div class="line">      // 关闭Excel工作簿对象</div><div class="line">      wwb.close();</div><div class="line">    &#125; catch (Exception e) &#123;</div><div class="line">      // TODO Auto-generated catch block</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    return file;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h1 id="获取所有用户列表"><a href="#获取所有用户列表" class="headerlink" title="获取所有用户列表"></a>获取所有用户列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">   * 获取所有的openid</div><div class="line">   * @return</div><div class="line">   */</div><div class="line">  public List&lt;String&gt; getAllOpenId()&#123;</div><div class="line">    List&lt;String&gt; openIds = getOpenIds(null);</div><div class="line">    return openIds;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>在<code>getOpenIds(Stirng next_openid)</code> 方法中<code>迭代</code>(一次拉取调用最多拉取10000个关注者的OpenID)获取所有的openId并返回一个List集合</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">private List&lt;String&gt; getOpenIds(String next_openid)&#123;</div><div class="line">    List&lt;String&gt; openIdList=new ArrayList&lt;String&gt;();</div><div class="line">    ApiResult apiResult=UserApi.getFollowers(next_openid);</div><div class="line">    String json=apiResult.getJson();</div><div class="line">log.error(&quot;json:&quot;+json);</div><div class="line">    if (apiResult.isSucceed()) &#123;</div><div class="line">      JSONObject result = JSON.parseObject(json);</div><div class="line">      next_openid = apiResult.getStr(&quot;next_openid&quot;);</div><div class="line">      int count = apiResult.getInt(&quot;count&quot;);</div><div class="line">      JSONObject openIdObject = result.getJSONObject(&quot;data&quot;);</div><div class="line">      if (count&gt;0) &#123;</div><div class="line">        JSONArray openids=openIdObject.getJSONArray(&quot;openid&quot;);</div><div class="line">        for (int i = 0; i &lt; openids.size(); i++) &#123;</div><div class="line">          openIdList.add(openids.getString(i));</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      //下一页</div><div class="line">      if (next_openid!=null&amp;&amp; !next_openid.equals(&quot;&quot;)) &#123;</div><div class="line">        List&lt;String&gt; list = getOpenIds(next_openid);</div><div class="line">        openIdList.addAll(list);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    return openIdList;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h1 id="批量获取用户基本信息"><a href="#批量获取用户基本信息" class="headerlink" title="批量获取用户基本信息"></a>批量获取用户基本信息</h1><blockquote>
<p>注意批量接口最多支持一次拉取100条</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">   * 根据openId列表获取用户信息</div><div class="line">   * @param allOpenId  </div><div class="line">   * @return</div><div class="line">   */</div><div class="line">  private List&lt;UserInfo&gt; getAllUserInfo(List&lt;String&gt; allOpenId)&#123;</div><div class="line">    List&lt;UserInfo&gt; userInfos = new ArrayList&lt;UserInfo&gt;();</div><div class="line">    int total=allOpenId.size();</div><div class="line">    UserConfig[] user_list=null;</div><div class="line">    //开发者可通过该接口来批量获取用户基本信息。最多支持一次拉取100条。</div><div class="line">    int temp=100;//一次获取100</div><div class="line">    if (total&gt;temp) &#123;</div><div class="line">      int page=0;//当前页面</div><div class="line">      int count=total/100+(total%100&gt;0?1:0);//总共获取多少次</div><div class="line">      int index=0;</div><div class="line">      while (page&lt;count) &#123;</div><div class="line">        index=(temp*(page+1))&gt;total?total:(temp*(page+1));</div><div class="line">        System.out.println(&quot;/////////&quot;+page*temp+&quot; &quot;+index);</div><div class="line">        user_list=new UserConfig[index-(page*temp)];</div><div class="line">        for (int i = page*temp; i &lt;index; i++) &#123;</div><div class="line">          UserConfig config=new UserConfig();</div><div class="line">          config.setLang(LangType.zh_CN);</div><div class="line">          config.setOpenid(allOpenId.get(i));</div><div class="line">          user_list[i-(page*temp)]=config;</div><div class="line">        &#125;</div><div class="line">        GetUserInfo getUserInfo = new GetUserInfo();</div><div class="line">        getUserInfo.setUser_list(user_list);</div><div class="line">        String jsonGetUserInfo = JsonKit.toJson(getUserInfo);</div><div class="line">        System.out.println(&quot;jsonGetUserInfo：&quot;+jsonGetUserInfo);</div><div class="line">        </div><div class="line">        ApiResult apiResult = UserApi.batchGetUserInfo(jsonGetUserInfo);</div><div class="line">        </div><div class="line">        String jsonResult = apiResult.getJson();</div><div class="line">        //将json转化为对象</div><div class="line">        List&lt;UserInfo&gt; userInfo = parseJsonToUserInfo(jsonResult);</div><div class="line">        userInfos.addAll(userInfo);</div><div class="line">        page++;</div><div class="line">      &#125;</div><div class="line">    &#125;else &#123;</div><div class="line">      user_list=new UserConfig[total];</div><div class="line">      for (int i = 0; i &lt; user_list.length; i++) &#123;</div><div class="line">        System.out.println(allOpenId.get(i));</div><div class="line">        UserConfig config=new UserConfig();</div><div class="line">        config.setLang(LangType.zh_CN);</div><div class="line">        config.setOpenid(allOpenId.get(i));</div><div class="line">        user_list[i]=config;</div><div class="line">      &#125;</div><div class="line">      GetUserInfo getUserInfo = new GetUserInfo();</div><div class="line">      getUserInfo.setUser_list(user_list);</div><div class="line">      String jsonGetUserInfo = JsonKit.toJson(getUserInfo);</div><div class="line">      </div><div class="line">      </div><div class="line">      ApiResult batchGetUserInfo = UserApi.batchGetUserInfo(jsonGetUserInfo);</div><div class="line">      List&lt;UserInfo&gt; userInfo = parseJsonToUserInfo(batchGetUserInfo.getJson());</div><div class="line">      userInfos.addAll(userInfo);</div><div class="line">    &#125;</div><div class="line">    return userInfos;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h1 id="大功告成—测试"><a href="#大功告成—测试" class="headerlink" title="大功告成—测试"></a>大功告成—测试</h1><p>在<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">开源项目weixin_guide</a> 中添加路由 <code>com.javen.common.APPConfig</code> 类的  <code>configRoute(Routes me)</code> 的方法中添加 <code>me.add(&quot;/wxuser&quot;, UserController.class,&quot;/front&quot;);</code></p>
<p>在浏览器中输入<code>http://localhost:8080/wxuser</code> 即可下载Excel</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public void index()&#123;</div><div class="line">    List&lt;UserInfo&gt; allUserInfo = getAllUserInfo(getAllOpenId());</div><div class="line">    </div><div class="line">    if (!allUserInfo.isEmpty()) &#123;</div><div class="line">      ///下载userInfos</div><div class="line">      File file = saveToExcel(allUserInfo);</div><div class="line">      renderFile(file);</div><div class="line">    &#125;else &#123;</div><div class="line">      render(&quot;目前暂无用户...&quot;);</div><div class="line">    &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>以上如何一键导出微信所有用户信息到Excel的全过程。<br>欢迎留言、转发、打赏项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之授权获取用户信息]]></title>
      <url>http://javen205.oschina.io/2016/09/17/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%88%E6%9D%83%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125</p>
<p>系列文章参考地址 <a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">极速开发微信公众号</a><br>欢迎留言、转发、打赏</p>
<p>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<blockquote>
<p>前几篇文章已讲完如何导入项目，如何启动配置项目，如何成为开发者，重源码分析消息是如何交互、如何自定义菜单（如果以上不是很清楚可以看这里 <a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">极速开发微信公众号</a>。这篇文章就来聊聊授权获取用户信息</p>
</blockquote>
<a id="more"></a>
<h1 id="一、什么是OAuth2-0"><a href="#一、什么是OAuth2-0" class="headerlink" title="一、什么是OAuth2.0"></a>一、什么是OAuth2.0</h1><p>这里整理了一篇文章 <a href="http://www.cnblogs.com/zyw-205520/p/5549527.html" target="_blank" rel="external">理解OAuth2.0</a></p>
<h1 id="二、微信公众平台OAuth2-0授权详细步骤"><a href="#二、微信公众平台OAuth2-0授权详细步骤" class="headerlink" title="二、微信公众平台OAuth2.0授权详细步骤"></a>二、微信公众平台OAuth2.0授权详细步骤</h1><ol>
<li>用户关注微信公众账号(现在也可以不关注)。</li>
<li>微信公众账号提供用户请求授权页面URL。</li>
<li>用户点击授权页面URL，将向服务器发起请求</li>
<li>服务器询问用户是否同意授权给微信公众账号(scope为snsapi_base时无此步骤)</li>
<li>用户同意(scope为snsapi_base时无此步骤,不弹出授权页面，直接跳转，只能获取用户openid)</li>
<li>服务器将code参数通过回调传给微信公众账号</li>
<li>微信公众账号获得code参数</li>
<li>微信公众账号通过code参数向服务器请求Access Token</li>
<li>服务器返回Access Token和OpenID给微信公众账号<ol>
<li>微信公众账号通过Access Token向服务器请求用户信息(scope为snsapi_base时无此步骤)</li>
<li>服务器将用户信息回送给微信公众账号(scope为snsapi_base时无此步骤)</li>
</ol>
</li>
</ol>
<p>#三、配置授权回调页面域名</p>
<blockquote>
<p>沙盒号(测试号)回调地址支持域名和ip，正式公众号回调地址只支持域名并且域名需使用字母、数字及“-”的组合，须通过ICP备案的验证，不支持端口号及短链。</p>
</blockquote>
<p>测试号：找到 <code>网页授权获取用户基本信息&gt;点击修改&gt;设置域名</code><br>服务号：找到 <code>开发&gt;接口权限&gt;网页授权获取用户基本信息&gt;&gt;点击修改&gt;设置域名</code></p>
<p>详细介绍参考<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">官方文档</a></p>
<h1 id="四、用户授权并获取code-，使用code换取access-token-并使用access-token获取用户信息"><a href="#四、用户授权并获取code-，使用code换取access-token-并使用access-token获取用户信息" class="headerlink" title="四、用户授权并获取code ，使用code换取access_token 并使用access_token获取用户信息"></a>四、用户授权并获取code ，使用code换取access_token 并使用access_token获取用户信息</h1><p>授权访问的URL：</p>
<p><a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect" target="_blank" rel="external">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a></p>
<p>具体封装实现可以查看<code>com.jfinal.weixin.sdk.api.SnsAccessTokenApi.getAuthorizeURL(....)</code> 方法</p>
<p>之前博客使用Servlet 也写了一个简单的授权<a href="http://www.cnblogs.com/zyw-205520/p/3581088.html" target="_blank" rel="external">参考地址</a></p>
<h1 id="五、使用封装的接口实现授权获取用户信息"><a href="#五、使用封装的接口实现授权获取用户信息" class="headerlink" title="五、使用封装的接口实现授权获取用户信息"></a>五、使用封装的接口实现授权获取用户信息</h1><p>封装之后使用就非常的简单，<code>SnsAccessTokenApi.getAuthorizeURL(....)</code> </p>
<ul>
<li>第一个参数为<code>appId</code></li>
<li>第二个参数为授权后回调的地址<code>http://域名/oauth</code>   </li>
<li>第三个参数为<code>state</code> 重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节 第四个参数 应用授权作用域，简单讲是否弹出授权页面 。 <code>true</code> 为不弹出授权页面</li>
</ul>
<blockquote>
<p>应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且，<strong>即使在未关注的情况下，只要用户授权，也能获取其信息</strong>）</p>
</blockquote>
<p>具体实现代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//跳转到授权页面</div><div class="line">  public void toOauth()&#123;</div><div class="line">    String calbackUrl=PropKit.get(&quot;domain&quot;)+&quot;/oauth&quot;;</div><div class="line">    String url=SnsAccessTokenApi.getAuthorizeURL(PropKit.get(&quot;appId&quot;), calbackUrl, &quot;111&quot;,false);</div><div class="line">    redirect(url);</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
<p>oauth Controller 具体实现步骤如下：</p>
<ul>
<li>当用户同意授权，获取code以及state</li>
<li><p>如果code不为null，就可以通过code换取网页授权access_token</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123; </div><div class="line"> &quot;access_token&quot;:&quot;ACCESS_TOKEN&quot;,    </div><div class="line"> &quot;expires_in&quot;:7200,    </div><div class="line"> &quot;refresh_token&quot;:&quot;REFRESH_TOKEN&quot;,    </div><div class="line"> &quot;openid&quot;:&quot;OPENID&quot;,    </div><div class="line"> &quot;scope&quot;:&quot;SCOPE&quot; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>拉取用户信息(需scope为 snsapi_userinfo)</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;    </div><div class="line"> &quot;openid&quot;:&quot; OPENID&quot;,  </div><div class="line"> &quot; nickname&quot;: NICKNAME,   </div><div class="line"> &quot;sex&quot;:&quot;1&quot;,   </div><div class="line"> &quot;province&quot;:&quot;PROVINCE&quot;   </div><div class="line"> &quot;city&quot;:&quot;CITY&quot;,   </div><div class="line"> &quot;country&quot;:&quot;COUNTRY&quot;,    </div><div class="line"> &quot;headimgurl&quot;:    &quot;http://wx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ</div><div class="line">4eMsv84eavHiaiceqxibJxCfHe/46&quot;,  </div><div class="line">&quot;privilege&quot;:[ &quot;PRIVILEGE1&quot; &quot;PRIVILEGE2&quot;     ],    </div><div class="line"> &quot;unionid&quot;: &quot;o6_bmasdasdsad6_2sgVt7hMZOPfL&quot; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取用户信息之后可以根据上面的state跳转到不同的页面</li>
</ul>
<p>具体实现代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">public class WeiXinOauthController extends ApiController&#123;</div><div class="line">  static Log log = Log.getLog(WeiXinOauthController.class);</div><div class="line">  /**</div><div class="line">   * 如果要支持多公众账号，只需要在此返回各个公众号对应的  ApiConfig 对象即可</div><div class="line">   * 可以通过在请求 url 中挂参数来动态从数据库中获取 ApiConfig 属性值</div><div class="line">   */</div><div class="line">  public ApiConfig getApiConfig() &#123;</div><div class="line">    ApiConfig ac = new ApiConfig();</div><div class="line">    </div><div class="line">    // 配置微信 API 相关常量</div><div class="line">    ac.setToken(PropKit.get(&quot;token&quot;));</div><div class="line">    ac.setAppId(PropKit.get(&quot;appId&quot;));</div><div class="line">    ac.setAppSecret(PropKit.get(&quot;appSecret&quot;));</div><div class="line">    </div><div class="line">    /**</div><div class="line">     *  是否对消息进行加密，对应于微信平台的消息加解密方式：</div><div class="line">     *  1：true进行加密且必须配置 encodingAesKey</div><div class="line">     *  2：false采用明文模式，同时也支持混合模式</div><div class="line">     */</div><div class="line">    ac.setEncryptMessage(PropKit.getBoolean(&quot;encryptMessage&quot;, false));</div><div class="line">    ac.setEncodingAesKey(PropKit.get(&quot;encodingAesKey&quot;, &quot;setting it in config file&quot;));</div><div class="line">    return ac;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  public void index() &#123;</div><div class="line">    int  subscribe=0;</div><div class="line">    //用户同意授权，获取code</div><div class="line">    String code=getPara(&quot;code&quot;);</div><div class="line">    String state=getPara(&quot;state&quot;);</div><div class="line">    if (code!=null) &#123;</div><div class="line">      String appId=ApiConfigKit.getApiConfig().getAppId();</div><div class="line">      String secret=ApiConfigKit.getApiConfig().getAppSecret();</div><div class="line">      //通过code换取网页授权access_token</div><div class="line">      SnsAccessToken snsAccessToken=SnsAccessTokenApi.getSnsAccessToken(appId,secret,code);</div><div class="line">//      String json=snsAccessToken.getJson();</div><div class="line">      String token=snsAccessToken.getAccessToken();</div><div class="line">      String openId=snsAccessToken.getOpenid();</div><div class="line">      //拉取用户信息(需scope为 snsapi_userinfo)</div><div class="line">      ApiResult apiResult=SnsApi.getUserInfo(token, openId);</div><div class="line">      </div><div class="line">      log.warn(&quot;getUserInfo:&quot;+apiResult.getJson());</div><div class="line">      if (apiResult.isSucceed()) &#123;</div><div class="line">        JSONObject jsonObject=JSON.parseObject(apiResult.getJson());</div><div class="line">        String nickName=jsonObject.getString(&quot;nickname&quot;);</div><div class="line">        //用户的性别，值为1时是男性，值为2时是女性，值为0时是未知</div><div class="line">        int sex=jsonObject.getIntValue(&quot;sex&quot;);</div><div class="line">        String city=jsonObject.getString(&quot;city&quot;);//城市</div><div class="line">        String province=jsonObject.getString(&quot;province&quot;);//省份</div><div class="line">        String country=jsonObject.getString(&quot;country&quot;);//国家</div><div class="line">        String headimgurl=jsonObject.getString(&quot;headimgurl&quot;);</div><div class="line">        String unionid=jsonObject.getString(&quot;unionid&quot;);</div><div class="line">        //获取用户信息判断是否关注</div><div class="line">        ApiResult userInfo = UserApi.getUserInfo(openId);</div><div class="line">        log.warn(JsonKit.toJson(&quot;is subsribe&gt;&gt;&quot;+userInfo));</div><div class="line">        if (userInfo.isSucceed()) &#123;</div><div class="line">          String userStr = userInfo.toString();</div><div class="line">          subscribe=JSON.parseObject(userStr).getIntValue(&quot;subscribe&quot;);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        Users.me.save(openId, WeiXinUtils.filterWeixinEmoji(nickName), unionid, headimgurl, country, city, province, sex);</div><div class="line">      &#125;</div><div class="line">      </div><div class="line">      setSessionAttr(&quot;openId&quot;, openId);</div><div class="line">      if (subscribe==0) &#123;</div><div class="line">        redirect(PropKit.get(&quot;subscribe_rul&quot;));</div><div class="line">      &#125;else &#123;</div><div class="line">        //根据state 跳转到不同的页面</div><div class="line">        if (state.equals(&quot;2222&quot;)) &#123;</div><div class="line">          redirect(&quot;http://www.cnblogs.com/zyw-205520/&quot;);</div><div class="line">        &#125;else &#123;</div><div class="line">          redirect(&quot;/login&quot;);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;else &#123;</div><div class="line">      renderText(&quot;code is  null&quot;);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>以上是授权获取用户信息的全过程。</p>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之自定义菜单]]></title>
      <url>http://javen205.oschina.io/2016/09/16/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125</p>
<p>系列文章参考地址 <a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">极速开发微信公众号</a></p>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<blockquote>
<p>前几篇文章已讲完如何导入项目，如何启动配置项目，如何成为开发者，重源码分析消息是如何交互（如果前四项不是很清楚可以看这里 <a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">极速开发微信公众号</a>。这篇文章就来讲讲如果实现自定义菜单</p>
</blockquote>
<a id="more"></a>
<p>实现自定义菜单有两种方式<br>1、编辑模式<br>2、开发模式</p>
<p>编辑模式就很简单了就不赘述了……</p>
<h3 id="开发模式实现自定义菜单"><a href="#开发模式实现自定义菜单" class="headerlink" title="开发模式实现自定义菜单"></a>开发模式实现自定义菜单</h3><p>1、使用微信<a href="http://mp.weixin.qq.com/debug/" target="_blank" rel="external">公众平台接口调试工具</a>实现<br>2、使用<a href="http://mp.weixin.qq.com/wiki/10/0234e39a2025342c17a7d23595c6b40a.html" target="_blank" rel="external">官方提供的接口</a>实现</p>
<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><blockquote>
<p>注意：<br>1、目前<code>订阅号</code> 只能使用编辑模式而且不能添加超链接，微信认证之后才可以使用开发模式。<br>2、编辑模式与开发模式不能同时开启<br>3、生成的菜单不会立即显示（隔天），如果想立即看到效果可以取消关注再关注</p>
</blockquote>
<p>添加插件</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-0093250250c51cda.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="K8WTIEI86W9W5XERD`MRD{6.png"></p>
<h3 id="使用微信公众平台接口调试工具实现"><a href="#使用微信公众平台接口调试工具实现" class="headerlink" title="使用微信公众平台接口调试工具实现"></a>使用微信<a href="http://mp.weixin.qq.com/debug/" target="_blank" rel="external">公众平台接口调试工具</a>实现</h3><p><img src="http://upload-images.jianshu.io/upload_images/1342351-84da6ae19e64b0a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="自定义菜单-接口调试工具.png"></p>
<p>可以看到需要两个参数而且都是必填 <code>access_token</code>  <code>body</code></p>
<p>有人要问，这两个参数如何获取呢？</p>
<p><code>body</code> 其实就是要生成菜单的<code>JSON对象</code> 官方有提供一个栗子可以<a href="http://mp.weixin.qq.com/wiki/10/0234e39a2025342c17a7d23595c6b40a.html" target="_blank" rel="external">参考</a>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;button&quot;:[</div><div class="line">    &#123;	</div><div class="line">         &quot;type&quot;:&quot;click&quot;,</div><div class="line">         &quot;name&quot;:&quot;今日歌曲&quot;,</div><div class="line">         &quot;key&quot;:&quot;V1001_TODAY_MUSIC&quot;</div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">          &quot;name&quot;:&quot;菜单&quot;,</div><div class="line">          &quot;sub_button&quot;:[</div><div class="line">          &#123;	</div><div class="line">              &quot;type&quot;:&quot;view&quot;,</div><div class="line">              &quot;name&quot;:&quot;搜索&quot;,</div><div class="line">              &quot;url&quot;:&quot;http://www.soso.com/&quot;</div><div class="line">           &#125;,</div><div class="line">           &#123;</div><div class="line">              &quot;type&quot;:&quot;view&quot;,</div><div class="line">              &quot;name&quot;:&quot;视频&quot;,</div><div class="line">              &quot;url&quot;:&quot;http://v.qq.com/&quot;</div><div class="line">           &#125;,</div><div class="line">           &#123;</div><div class="line">              &quot;type&quot;:&quot;click&quot;,</div><div class="line">              &quot;name&quot;:&quot;赞一下我们&quot;,</div><div class="line">              &quot;key&quot;:&quot;V1001_GOOD&quot;</div><div class="line">           &#125;]</div><div class="line">      &#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>access_token</code> 的获取如下图<br><img src="http://upload-images.jianshu.io/upload_images/1342351-2a90a7e19896a2d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="自定义菜单-获取access_token.png"></p>
<h3 id="使用官方提供的接口实现"><a href="#使用官方提供的接口实现" class="headerlink" title="使用官方提供的接口实现"></a>使用<a href="http://mp.weixin.qq.com/wiki/10/0234e39a2025342c17a7d23595c6b40a.html" target="_blank" rel="external">官方提供的接口</a>实现</h3><blockquote>
<p>初次了解微信自定义菜单的同学建议先看看官方的文档3遍</p>
</blockquote>
<p>在<code>Jfinal-weixin</code>中有封装菜单的创建、查询、删除、以及个性化菜单的创建、查询、删除、<strong>测试个性化菜单匹配结果</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-99416787ac33b795.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="自定义菜单-菜单封装的接口.png"></p>
<p>那么问题来了，封装好了如何使用呢？<br>以下是提供封装的接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">//查询自定义菜单</div><div class="line">public static ApiResult getMenu() &#123;</div><div class="line">    String jsonResult = HttpUtils.get(getMenu + AccessTokenApi.getAccessTokenStr());</div><div class="line">    return new ApiResult(jsonResult);</div><div class="line">&#125;</div><div class="line">//创建自定义菜单</div><div class="line">public static ApiResult createMenu(String jsonStr) &#123;</div><div class="line">    String jsonResult = HttpUtils.post(createMenu + AccessTokenApi.getAccessTokenStr(), jsonStr);</div><div class="line">    return new ApiResult(jsonResult);</div><div class="line">&#125;</div><div class="line">//删除自定义菜单</div><div class="line">public static ApiResult deleteMenu() &#123;</div><div class="line">    String jsonResult = HttpUtils.get(deleteMenuUrl + AccessTokenApi.getAccessTokenStr());</div><div class="line">    return new ApiResult(jsonResult);</div><div class="line">&#125;</div><div class="line">//创建个性化自定义菜单</div><div class="line">public static ApiResult addConditional(String jsonStr) &#123;</div><div class="line">    String jsonResult = HttpUtils.post(addConditionalUrl + AccessTokenApi.getAccessTokenStr(), jsonStr);</div><div class="line">    return new ApiResult(jsonResult);</div><div class="line">&#125;</div><div class="line">//删除个性化自定义菜单</div><div class="line">public static ApiResult delConditional(String menuid) &#123;</div><div class="line">    HashMap params = new HashMap();</div><div class="line">    params.put(&quot;menuid&quot;, menuid);</div><div class="line">    String url = delConditionalUrl + AccessTokenApi.getAccessTokenStr();</div><div class="line">    String jsonResult = HttpUtils.post(url, JsonUtils.toJson(params));</div><div class="line">    return new ApiResult(jsonResult);</div><div class="line">&#125;</div><div class="line">//测试个性化菜单匹配结果</div><div class="line">public static ApiResult tryMatch(String userId) &#123;</div><div class="line">    HashMap params = new HashMap();</div><div class="line">    params.put(&quot;user_id&quot;, userId);</div><div class="line">    String url = tryMatchUrl + AccessTokenApi.getAccessTokenStr();</div><div class="line">    String jsonResult = HttpUtils.post(url, JsonUtils.toJson(params));</div><div class="line">    return new ApiResult(jsonResult);</div><div class="line">&#125;</div><div class="line"></div><div class="line">public static ApiResult getCurrentSelfMenuInfo() &#123;</div><div class="line">    String jsonResult = HttpUtils.get(getCurrentSelfMenuInfoUrl + AccessTokenApi.getAccessTokenStr());</div><div class="line">    return new ApiResult(jsonResult);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">开源项目weixin_guide</a>中<code>com.javen.weixin.menu.MenuManager</code>类中提供了详细使用的Demo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">public static void main(String[] args) &#123; </div><div class="line">         </div><div class="line">           // 将菜单对象转换成json字符串</div><div class="line">           String jsonMenu = JsonKit.toJson(getTestMenu()).toString();</div><div class="line">           System.out.println(jsonMenu);</div><div class="line">           ApiConfig ac = new ApiConfig();</div><div class="line">            </div><div class="line">            // 配置微信 API 相关常量 请使用你自己公众号的</div><div class="line">            ac.setAppId(&quot;wx614c453e0d1dcd12&quot;);</div><div class="line">            ac.setAppSecret(&quot;19a02e4927d346484fc70327970457f9&quot;);</div><div class="line">//          ac.setAppId(PropKit.get(&quot;appId&quot;));</div><div class="line">//          ac.setAppSecret(PropKit.get(&quot;appSecret&quot;));</div><div class="line">            ApiConfigKit.setThreadLocalApiConfig(ac);</div><div class="line">           </div><div class="line">           //创建菜单</div><div class="line">           ApiResult apiResult=MenuApi.createMenu(jsonMenu);</div><div class="line">           System.out.println(apiResult.getJson());</div><div class="line">     &#125;</div></pre></td></tr></table></figure>
<p>可以看到main方法中调用了<code>MenuApi.createMenu(jsonMenu)</code><br>那<code>jsonMenu</code> 从何而来呢？</p>
<p>其实这里是将自定义菜单的实体对象转化为了JSON</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String jsonMenu = JsonKit.toJson(getTestMenu()).toString();</div></pre></td></tr></table></figure>
<h3 id="菜单的封装"><a href="#菜单的封装" class="headerlink" title="菜单的封装"></a>菜单的封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line">/** </div><div class="line">         * 组装菜单数据 </div><div class="line">         *  </div><div class="line">         * @return </div><div class="line">         */  </div><div class="line">        private static Menu getTestMenu() &#123;  </div><div class="line">            ClickButton btn11 = new ClickButton();  </div><div class="line">            btn11.setName(&quot;微信相册发图&quot;);  </div><div class="line">            btn11.setType(&quot;pic_weixin&quot;);  </div><div class="line">            btn11.setKey(&quot;rselfmenu_1_1&quot;);</div><div class="line">      </div><div class="line">            ClickButton btn12 = new ClickButton();  </div><div class="line">            btn12.setName(&quot;拍照或者相册发图&quot;);  </div><div class="line">            btn12.setType(&quot;pic_photo_or_album&quot;);  </div><div class="line">            btn12.setKey(&quot;rselfmenu_1_2&quot;);;  </div><div class="line">      </div><div class="line">            ClickButton btn13 = new ClickButton();  </div><div class="line">            btn13.setName(&quot;系统拍照发图&quot;);  </div><div class="line">            btn13.setType(&quot;pic_sysphoto&quot;);  </div><div class="line">            btn13.setKey(&quot;rselfmenu_1_3&quot;);</div><div class="line">      </div><div class="line">            ClickButton btn21 = new ClickButton();  </div><div class="line">            btn21.setName(&quot;扫码带提示&quot;);  </div><div class="line">            btn21.setType(&quot;scancode_waitmsg&quot;);  </div><div class="line">            btn21.setKey(&quot;rselfmenu_2_1&quot;);;  </div><div class="line">      </div><div class="line">            ClickButton btn22 = new ClickButton();  </div><div class="line">            btn22.setName(&quot;扫码推事件&quot;);  </div><div class="line">            btn22.setType(&quot;scancode_push&quot;);  </div><div class="line">            btn22.setKey(&quot;rselfmenu_2_2&quot;);;  </div><div class="line">      </div><div class="line">            ViewButton btn23 = new ViewButton();  </div><div class="line">            btn23.setName(&quot;我的设备&quot;);  </div><div class="line">            btn23.setType(&quot;view&quot;);  </div><div class="line">            btn23.setUrl(&quot;https://hw.weixin.qq.com/devicectrl/panel/device-list.html?appid=wx614c453e0d1dcd12&quot;); </div><div class="line">            </div><div class="line">            ViewButton btn31 = new ViewButton();  </div><div class="line">            btn31.setName(&quot;微社区&quot;);  </div><div class="line">            btn31.setType(&quot;view&quot;);  </div><div class="line">            btn31.setUrl(&quot;http://whsf.tunnel.mobi/whsf/msg/wsq&quot;);  </div><div class="line">      </div><div class="line">            </div><div class="line">            ClickButton btn32 = new ClickButton();  </div><div class="line">            btn32.setName(&quot;发送位置&quot;);  </div><div class="line">            btn32.setType(&quot;location_select&quot;);  </div><div class="line">            btn32.setKey(&quot;rselfmenu_3_2&quot;); </div><div class="line">      </div><div class="line">            //http://tencent://message/?uin=572839485&amp;Site=在线咨询&amp;Menu=yes</div><div class="line">            //http://wpa.qq.com/msgrd?v=3&amp;uin=572839485&amp;site=qq&amp;menu=yes</div><div class="line">            </div><div class="line">            ViewButton btn33 = new ViewButton();  </div><div class="line">            btn33.setName(&quot;在线咨询&quot;);  </div><div class="line">            btn33.setType(&quot;view&quot;);  </div><div class="line">            btn33.setUrl(&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=572839485&amp;site=qq&amp;menu=yes&quot;);  </div><div class="line">      </div><div class="line">            ViewButton btn34 = new ViewButton();  </div><div class="line">            btn34.setName(&quot;我的博客&quot;);  </div><div class="line">            btn34.setType(&quot;view&quot;);  </div><div class="line">            btn34.setUrl(&quot;http://www.cnblogs.com/zyw-205520&quot;); </div><div class="line">            </div><div class="line">            ClickButton btn35 = new ClickButton();  </div><div class="line">            btn35.setName(&quot;点击事件&quot;);  </div><div class="line">            btn35.setType(&quot;click&quot;);  </div><div class="line">            btn35.setKey(&quot;rselfmenu_3_5&quot;); </div><div class="line">            </div><div class="line">            ComButton mainBtn1 = new ComButton();  </div><div class="line">            mainBtn1.setName(&quot;发图&quot;);  </div><div class="line">            mainBtn1.setSub_button(new Button[] &#123; btn11, btn12, btn13&#125;);  </div><div class="line">      </div><div class="line">            ComButton mainBtn2 = new ComButton();  </div><div class="line">            mainBtn2.setName(&quot;扫码&quot;);  </div><div class="line">            mainBtn2.setSub_button(new Button[] &#123; btn21, btn22 ,btn23&#125;);  </div><div class="line">      </div><div class="line">            ComButton mainBtn3 = new ComButton();  </div><div class="line">            mainBtn3.setName(&quot;个人中心&quot;);  </div><div class="line">            mainBtn3.setSub_button(new Button[] &#123; btn31, btn32, btn33, btn34 ,btn35 &#125;);  </div><div class="line">      </div><div class="line">            /** </div><div class="line">             * 这是公众号xiaoqrobot目前的菜单结构，每个一级菜单都有二级菜单项&lt;br&gt; </div><div class="line">             *  </div><div class="line">             * 在某个一级菜单下没有二级菜单的情况，menu该如何定义呢？&lt;br&gt; </div><div class="line">             * 比如，第三个一级菜单项不是“更多体验”，而直接是“幽默笑话”，那么menu应该这样定义：&lt;br&gt; </div><div class="line">             * menu.setButton(new Button[] &#123; mainBtn1, mainBtn2, btn33 &#125;); </div><div class="line">             */  </div><div class="line">            Menu menu = new Menu();  </div><div class="line">            menu.setButton(new Button[] &#123; mainBtn1, mainBtn2, mainBtn3 &#125;);  </div><div class="line">            return menu;  </div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>执行main方法会输出生成菜单的JSON以及响应的状态</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">生成菜单的JSON：&#123;&quot;button&quot;:[&#123;&quot;sub_button&quot;:[&#123;&quot;name&quot;:&quot;微信相册发图&quot;,&quot;type&quot;:&quot;pic_weixin&quot;,&quot;key&quot;:&quot;rselfmenu_1_1&quot;&#125;,&#123;&quot;name&quot;:&quot;拍照或者相册发图&quot;,&quot;type&quot;:&quot;pic_photo_or_album&quot;,&quot;key&quot;:&quot;rselfmenu_1_2&quot;&#125;,&#123;&quot;name&quot;:&quot;系统拍照发图&quot;,&quot;type&quot;:&quot;pic_sysphoto&quot;,&quot;key&quot;:&quot;rselfmenu_1_3&quot;&#125;],&quot;name&quot;:&quot;发图&quot;,&quot;type&quot;:null&#125;,&#123;&quot;sub_button&quot;:[&#123;&quot;name&quot;:&quot;扫码带提示&quot;,&quot;type&quot;:&quot;scancode_waitmsg&quot;,&quot;key&quot;:&quot;rselfmenu_2_1&quot;&#125;,&#123;&quot;name&quot;:&quot;扫码推事件&quot;,&quot;type&quot;:&quot;scancode_push&quot;,&quot;key&quot;:&quot;rselfmenu_2_2&quot;&#125;,&#123;&quot;name&quot;:&quot;我的设备&quot;,&quot;type&quot;:&quot;view&quot;,&quot;url&quot;:&quot;https://hw.weixin.qq.com/devicectrl/panel/device-list.html?appid=wx614c453e0d1dcd12&quot;&#125;],&quot;name&quot;:&quot;扫码&quot;,&quot;type&quot;:null&#125;,&#123;&quot;sub_button&quot;:[&#123;&quot;name&quot;:&quot;微社区&quot;,&quot;type&quot;:&quot;view&quot;,&quot;url&quot;:&quot;http://whsf.tunnel.mobi/whsf/msg/wsq&quot;&#125;,&#123;&quot;name&quot;:&quot;发送位置&quot;,&quot;type&quot;:&quot;location_select&quot;,&quot;key&quot;:&quot;rselfmenu_3_2&quot;&#125;,&#123;&quot;name&quot;:&quot;在线咨询&quot;,&quot;type&quot;:&quot;view&quot;,&quot;url&quot;:&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=572839485&amp;site=qq&amp;menu=yes&quot;&#125;,&#123;&quot;name&quot;:&quot;我的博客&quot;,&quot;type&quot;:&quot;view&quot;,&quot;url&quot;:&quot;http://www.cnblogs.com/zyw-205520&quot;&#125;,&#123;&quot;name&quot;:&quot;点击事件&quot;,&quot;type&quot;:&quot;click&quot;,&quot;key&quot;:&quot;rselfmenu_3_5&quot;&#125;],&quot;name&quot;:&quot;个人中心&quot;,&quot;type&quot;:null&#125;],&quot;matchrule&quot;:null&#125;</div><div class="line"></div><div class="line">响应的状态： &#123;&quot;errcode&quot;:0,&quot;errmsg&quot;:&quot;ok&quot;&#125;</div></pre></td></tr></table></figure>
<p>以上是生成自定义菜单的全过程。</p>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之如何实现消息交互]]></title>
      <url>http://javen205.oschina.io/2016/09/16/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E4%BA%A4%E4%BA%92/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125</p>
<p>系列文章参考地址 <a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">极速开发微信公众号</a></p>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<blockquote>
<p>前几篇文章已讲完如何导入项目，如何启动配置项目，如何成为开发者（如果前三项不会的看这里 <a href="http://www.jianshu.com/p/a172a1b69fdd" target="_blank" rel="external">极速开发微信公众号</a>。这篇文章就来讲讲如果实现消息交互</p>
</blockquote>
<a id="more"></a>
<p>总所周知<code>Jfinal</code> 开发中配置非常简单只要在<code>web.xml</code>中添加如下代码就可以将所有的请求交由<code>Jfianl</code>处理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot; xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot; version=&quot;3.0&quot;&gt;</div><div class="line">  &lt;filter&gt;</div><div class="line">    &lt;filter-name&gt;jfinal&lt;/filter-name&gt;</div><div class="line">    &lt;filter-class&gt;com.jfinal.core.JFinalFilter&lt;/filter-class&gt;</div><div class="line">    &lt;async-supported&gt;true&lt;/async-supported&gt;</div><div class="line">    &lt;init-param&gt;</div><div class="line">      &lt;param-name&gt;configClass&lt;/param-name&gt;</div><div class="line">      &lt;param-value&gt;com.javen.common.APPConfig&lt;/param-value&gt;</div><div class="line">    &lt;/init-param&gt;</div><div class="line">  &lt;/filter&gt;</div><div class="line">  &lt;filter-mapping&gt;</div><div class="line">    &lt;filter-name&gt;jfinal&lt;/filter-name&gt;</div><div class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class="line">  &lt;/filter-mapping&gt;</div><div class="line">&lt;/web-app&gt;</div></pre></td></tr></table></figure></p>
<p>可以看到<code>com.javen.common.APPConfig</code> 是项目的核心配置文件，他是继承自<code>JFinalConfig</code> 实现了如下方法</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-f95a209d02dad23e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="消息交互-配置详解.png"></p>
<blockquote>
<p>以上配置<a href="http://www.jfinal.com" target="_blank" rel="external"> 详细介绍参考官方文档</a><br><a href="http://www.jianshu.com/p/a87d4b9f9424" target="_blank" rel="external">成为开发者模式</a>这篇文章中讲到过消息交互都是由<code>WeixinMsgController</code>接管的，</p>
</blockquote>
<h3 id="消息到底是如何交互的在此做详细的讲解"><a href="#消息到底是如何交互的在此做详细的讲解" class="headerlink" title="消息到底是如何交互的在此做详细的讲解"></a>消息到底是如何交互的在此做详细的讲解</h3><p>   上面有讲到消息交互都是由<code>WeixinMsgController</code>接管的，她是继承自<code>MsgControllerAdapter</code> 又继承自 <code>MsgController</code> 里面有个<code>index</code> 方法其中上面的拦截器<code>MsgInterceptor</code>是进行加密验证的（成为开发者模式），验证没有问题就执行<code>index</code>方法，如下图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-453908c39b476c08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="消息交互-接收消息.png"></p>
<blockquote>
<p>可以看出接收消息并返回一个InMsg，之后根据信息类型调用对应的抽象方法交给实现方式实现消息的处理。</p>
</blockquote>
<p>那么问题来了：<br>1、如何接收微信交互的xml<br>2、如何处理微信的各种消息<br>3、如何响应微信的各种消息</p>
<h3 id="接收微信交互的xml"><a href="#接收微信交互的xml" class="headerlink" title="接收微信交互的xml"></a>接收微信交互的xml</h3><p>成功开发者（get请求）之后，所有的消息接收处理都交由开发者url处理（post请求）所以就有一下方法获取xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">@Before(&#123;NotAction.class&#125;)</div><div class="line">   public String getInMsgXml() &#123;</div><div class="line">       if(this.inMsgXml == null) &#123;</div><div class="line">           this.inMsgXml = HttpKit.readData(this.getRequest());</div><div class="line">           if(ApiConfigKit.getApiConfig().isEncryptMessage()) &#123;</div><div class="line">               this.inMsgXml = MsgEncryptKit.decrypt(this.inMsgXml, this.getPara(&quot;timestamp&quot;), this.getPara(&quot;nonce&quot;), this.getPara(&quot;msg_signature&quot;));</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       if(StrKit.isBlank(this.inMsgXml)) &#123;</div><div class="line">           throw new RuntimeException(&quot;请不要在浏览器中请求该连接,调试请查看WIKI:http://git.oschina.net/jfinal/jfinal-weixin/wikis/JFinal-weixin-demo%E5%92%8C%E8%B0%83%E8%AF%95&quot;);</div><div class="line">       &#125; else &#123;</div><div class="line">           return this.inMsgXml;</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>解析微信的各种消息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@Before(&#123;NotAction.class&#125;)</div><div class="line">    public InMsg getInMsg() &#123;</div><div class="line">        if(this.inMsg == null) &#123;</div><div class="line">            this.inMsg = InMsgParser.parse(this.getInMsgXml());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        return this.inMsg;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>可以看到<code>this.inMsg</code> 为null时会解析<code>InMsgParser.parse(this.getInMsgXml());</code>获取到的xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public static InMsg parse(String xml) &#123;</div><div class="line">        XmlHelper xmlHelper = XmlHelper.of(xml);</div><div class="line">        return doParse(xmlHelper);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>静态方法 通过xml 实例化一个<code>XmlHelper</code>（主要提供一些常用类型数据的获取方法） 再交给<code>doParse</code>方法处理 <code>text消息</code> <code>image消息</code> <code>voice消息</code> <code>vide消息</code> <code>shortvideo消息</code> <code>location消息</code> <code>link消息</code> <code>eveen消息</code> </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">private static InMsg doParse(XmlHelper xmlHelper) &#123;</div><div class="line">        String toUserName = xmlHelper.getString(&quot;//ToUserName&quot;);</div><div class="line">        String fromUserName = xmlHelper.getString(&quot;//FromUserName&quot;);</div><div class="line">        Integer createTime = Integer.valueOf(xmlHelper.getNumber(&quot;//CreateTime&quot;).intValue());</div><div class="line">        String msgType = xmlHelper.getString(&quot;//MsgType&quot;);</div><div class="line">        if(&quot;text&quot;.equals(msgType)) &#123;</div><div class="line">            return parseInTextMsg(xmlHelper, toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125; else if(&quot;image&quot;.equals(msgType)) &#123;</div><div class="line">            return parseInImageMsg(xmlHelper, toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125; else if(&quot;voice&quot;.equals(msgType)) &#123;</div><div class="line">            return parseInVoiceMsgAndInSpeechRecognitionResults(xmlHelper, toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125; else if(&quot;video&quot;.equals(msgType)) &#123;</div><div class="line">            return parseInVideoMsg(xmlHelper, toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125; else if(&quot;shortvideo&quot;.equals(msgType)) &#123;</div><div class="line">            return parseInShortVideoMsg(xmlHelper, toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125; else if(&quot;location&quot;.equals(msgType)) &#123;</div><div class="line">            return parseInLocationMsg(xmlHelper, toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125; else if(&quot;link&quot;.equals(msgType)) &#123;</div><div class="line">            return parseInLinkMsg(xmlHelper, toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125; else if(&quot;event&quot;.equals(msgType)) &#123;</div><div class="line">            return parseInEvent(xmlHelper, toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125; else &#123;</div><div class="line">            LogKit.error(&quot;无法识别的消息类型 &quot; + msgType + &quot;，请查阅微信公众平台开发文档&quot;);</div><div class="line">            return parseInNotDefinedMsg(toUserName, fromUserName, createTime, msgType);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>解析出来消息类型之后就调用对应的解析方法并返回<code>InMsg</code>。</p>
<p>消息类型很多避免重复造轮子，所以就诞生了消息的封装这个东西。</p>
<p>查看所有普通消息的xml格式找规律进行封装 <a href="http://mp.weixin.qq.com/wiki/17/f298879f8fb29ab98b2f2971d42552fd.html#.E6.96.87.E6.9C.AC.E6.B6.88.E6.81.AF" target="_blank" rel="external">官方文档</a> 可以发现都包含有<code>ToUserName</code> <code>FromUserName</code> <code>CreateTime</code> <code>MsgId</code>   不同的是 <code>MsgType</code> 以及 各个类型对应的消息内容。</p>
<p>这里是接收消息以及响应消息的截图<br><img src="http://upload-images.jianshu.io/upload_images/1342351-3223996a198729a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="消息交互-消息封装.png"></p>
<p>以解析 <code>text消息</code> 为栗子讲解</p>
<p>接收到的xml 如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;</div><div class="line"> &lt;ToUserName&gt;&lt;![CDATA[toUser]]&gt;&lt;/ToUserName&gt;</div><div class="line"> &lt;FromUserName&gt;&lt;![CDATA[fromUser]]&gt;&lt;/FromUserName&gt; </div><div class="line"> &lt;CreateTime&gt;1348831860&lt;/CreateTime&gt;</div><div class="line"> &lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</div><div class="line"> &lt;Content&gt;&lt;![CDATA[this is a test]]&gt;&lt;/Content&gt;</div><div class="line"> &lt;MsgId&gt;1234567890123456&lt;/MsgId&gt;</div><div class="line"> &lt;/xml&gt;</div></pre></td></tr></table></figure></p>
<p>解析text消息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">private static InMsg parseInTextMsg(XmlHelper xmlHelper, String toUserName, String fromUserName, Integer createTime, String msgType) &#123;</div><div class="line">        InTextMsg msg = new InTextMsg(toUserName, fromUserName, createTime, msgType);</div><div class="line">        msg.setContent(xmlHelper.getString(&quot;//Content&quot;));</div><div class="line">        msg.setMsgId(xmlHelper.getString(&quot;//MsgId&quot;));</div><div class="line">        return msg;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>封装text消息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">public class InTextMsg extends InMsg &#123;</div><div class="line">    private String content;</div><div class="line">    private String msgId;</div><div class="line"></div><div class="line">    public InTextMsg(String toUserName, String fromUserName, Integer createTime, String msgType) &#123;</div><div class="line">        super(toUserName, fromUserName, createTime, msgType);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getContent() &#123;</div><div class="line">        return this.content;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setContent(String content) &#123;</div><div class="line">        this.content = content;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getMsgId() &#123;</div><div class="line">        return this.msgId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setMsgId(String msgId) &#123;</div><div class="line">        this.msgId = msgId;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>接收消息的公用部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">public abstract class InMsg &#123;</div><div class="line">    protected String toUserName;</div><div class="line">    protected String fromUserName;</div><div class="line">    protected Integer createTime;</div><div class="line">    protected String msgType;</div><div class="line"></div><div class="line">    public InMsg(String toUserName, String fromUserName, Integer createTime, String msgType) &#123;</div><div class="line">        this.toUserName = toUserName;</div><div class="line">        this.fromUserName = fromUserName;</div><div class="line">        this.createTime = createTime;</div><div class="line">        this.msgType = msgType;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getToUserName() &#123;</div><div class="line">        return this.toUserName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setToUserName(String toUserName) &#123;</div><div class="line">        this.toUserName = toUserName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getFromUserName() &#123;</div><div class="line">        return this.fromUserName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setFromUserName(String fromUserName) &#123;</div><div class="line">        this.fromUserName = fromUserName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public Integer getCreateTime() &#123;</div><div class="line">        return this.createTime;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setCreateTime(Integer createTime) &#123;</div><div class="line">        this.createTime = createTime;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getMsgType() &#123;</div><div class="line">        return this.msgType;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setMsgType(String msgType) &#123;</div><div class="line">        this.msgType = msgType;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="响应微信的各种消息"><a href="#响应微信的各种消息" class="headerlink" title="响应微信的各种消息"></a>响应微信的各种消息</h3><p>由上分析可以知道，消息处理完成后都是交由抽象方法的实现方法处理消息。<code>MsgControllerAdapter</code> 主要是适配各种消息的抽象类。</p>
<p>下面 <code>text消息</code>为例子说明</p>
<p>接收到<code>text消息</code>之后会调用 <code>WeixinMsgController</code>中的<code>protected void processInTextMsg(InTextMsg inTextMsg)</code> 方法，可以通过<code>InTextMsg</code>对象获取<code>text消息</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">protected void processInTextMsg(InTextMsg inTextMsg)</div><div class="line">  &#123;</div><div class="line">    String msgContent = inTextMsg.getContent().trim();</div><div class="line">    // 帮助提示</div><div class="line">    if (&quot;help&quot;.equalsIgnoreCase(msgContent) || &quot;帮助&quot;.equals(msgContent)) &#123;</div><div class="line">      OutTextMsg outMsg = new OutTextMsg(inTextMsg);</div><div class="line">      outMsg.setContent(helpStr);</div><div class="line">      render(outMsg);</div><div class="line">    &#125;else &#123;</div><div class="line">      renderOutTextMsg(&quot;你发的内容为：&quot;+msgContent);</div><div class="line">      //转发给多客服PC客户端</div><div class="line">//      OutCustomMsg outCustomMsg = new OutCustomMsg(inTextMsg);</div><div class="line">//      render(outCustomMsg);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上可以看到响应消息有两种实现方式</p>
<p>第一种render一个消息对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">OutTextMsg outMsg = new OutTextMsg(inTextMsg); </div><div class="line">outMsg.setContent(helpStr); </div><div class="line">render(outMsg);</div></pre></td></tr></table></figure></p>
<p>第二种直接传一个String<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">renderOutTextMsg(&quot;你发的内容为：&quot;+msgContent);</div></pre></td></tr></table></figure></p>
<p>以下是具体的实现:<br>1、将对象转化为xml <code>outMsg.toXml()</code><br>2、如果是开发模式输出调试的xml<br>3、如果是加密模式，就将消息加密<br>4、通过<code>Jfinal 的renderText()</code>方法应用xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">public void render(OutMsg outMsg) &#123;</div><div class="line">        String outMsgXml = outMsg.toXml();</div><div class="line">        if(ApiConfigKit.isDevMode()) &#123;</div><div class="line">            System.out.println(&quot;发送消息:&quot;);</div><div class="line">            System.out.println(outMsgXml);</div><div class="line">            System.out.println(&quot;--------------------------------------------------------------------------------\n&quot;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        if(ApiConfigKit.getApiConfig().isEncryptMessage()) &#123;</div><div class="line">            outMsgXml = MsgEncryptKit.encrypt(outMsgXml, this.getPara(&quot;timestamp&quot;), this.getPara(&quot;nonce&quot;));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        this.renderText(outMsgXml, &quot;text/xml&quot;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>而<code>renderOutTextMsg(String content)</code>方法就是调用的<code>render(outMsg)</code>方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public void renderOutTextMsg(String content) &#123;</div><div class="line">        OutTextMsg outMsg = new OutTextMsg(this.getInMsg());</div><div class="line">        outMsg.setContent(content);</div><div class="line">        this.render(outMsg);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之开发者模式]]></title>
      <url>http://javen205.oschina.io/2016/09/10/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%88%90%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125</p>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<p>项目如何导入到IDE并启动<a href="http://www.jianshu.com/p/ab209e163614" target="_blank" rel="external">参考文章</a></p>
<p>本文将学习到：<br>1、如何开发调试微信公众号<br>2、如何开启开发者模式<br>3、可能遇到的问题<br>4、<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">weixin_guide</a>如何成为开发者模式源码解读<br><a id="more"></a></p>
<h3 id="如何开发调试微信公众号"><a href="#如何开发调试微信公众号" class="headerlink" title="如何开发调试微信公众号"></a>如何开发调试微信公众号</h3><p>1、本地调试就需要做端口映射到外网，工具有哪些呢？<br>     推荐ngrok、QQ浏览器<br>2、ngrok有哪些可以使用呢？<br>     之前blog有总结 [<a href="http://www.cnblogs.com/zyw-205520/p/4733062.html" target="_blank" rel="external">让微信公众平台通过80端口访问本机</a>，ngrok是开源的当然自己也可以使用服务器搭建一个。</p>
<p>3、开发调试工具<br>    推荐使用真机测试、<a href="http://mp.weixin.qq.com/debug/" target="_blank" rel="external">微信公众平台接口调试工具</a>、<a href="http://mp.weixin.qq.com/wiki/10/e5f772f4521da17fa0d7304f68b97d7e.html" target="_blank" rel="external">微信web开发者工具</a></p>
<h3 id="如何开启开发者模式"><a href="#如何开启开发者模式" class="headerlink" title="如何开启开发者模式"></a>如何开启开发者模式</h3><p>如果项目clone导入IDE并启动、端口已经映射到外网成为开发者模式就比较简单了。<br>测试号申请地址以及开发文档地址<a href="http://mp.weixin.qq.com/wiki/home/index.html" target="_blank" rel="external">WIKI</a><br>成为开发者之前需要做如下配置：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-e37d82eecd2f7e0c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改配置参数.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-a8dc7dd148e12790.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="开发者ID.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-2ae7169cb5af8585.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="开启开发模式.png"></p>
<p><a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">weixin_guide</a> 成为开发者url默认的地址为：<code>http://域名【/项目名】/msg</code> </p>
<p>Token 需要跟<code>修改配置参数.png</code>中的保持一致<br>消息加密方式<br>1、正式环境建议使用安全模式，将<code>encryptMessage</code>设置为<code>true</code> ,<code>encodingAesKey</code> 必须跟<code>开启开发模式.png</code>中随机生成的<code>EncodingAESKey</code> 保持一致<br>2、如果是测试，建议设置为明文方式这样方便调试</p>
<hr>
<p>提醒：成为开发者的链接不要使用浏览器访问（这个是针对微信公众号的;访问必定出现错误）。配置好项目之后直接启动项目并做端口映射，在测试号或者正式环境的订阅号、服务号中使用</p>
<hr>
<h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><blockquote>
<p>消息的加解密接口JCE无限制权限策略</p>
</blockquote>
<p><code>java.security.InvalidKeyException:illegal Key Size</code><br>异常java.security.InvalidKeyException:illegal Key Size的解决方案：</p>
<p>在官方网站下载JCE无限制权限策略文件,下载后解压，可以看到local_policy.jar和US_export_policy.jar以及readme.txt。如果安装了JRE，将两个jar文件放到%JRE_HOME% \lib\security目录下覆盖原来的文件，如果安装了JDK，将两个jar文件放到%JDK_HOME%\jre\lib\security目录下覆盖原来文件。</p>
<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html" target="_blank" rel="external">JDK7版本JCE下载地址</a><br><a href="http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html" target="_blank" rel="external">JDK8版本JCE下载地址</a></p>
<h3 id="weixin-guide如何成为开发者模式源码解读"><a href="#weixin-guide如何成为开发者模式源码解读" class="headerlink" title="weixin_guide如何成为开发者模式源码解读"></a><a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">weixin_guide</a>如何成为开发者模式源码解读</h3><p>1、如何成为开发者模式官方<a href="http://mp.weixin.qq.com/wiki/8/f9a0b8382e0b77d87b3bcc1ce6fbc104.html" target="_blank" rel="external">参考文档</a><br>2、详细介绍Java servlet版实现参考之前<a href="http://www.cnblogs.com/zyw-205520/p/3581250.html" target="_blank" rel="external">cnblogs博客</a>写的文章<br>3、<code>weixin_guide</code> 成为开发者以及所有消息交互都是交个了<code>WeixinMsgController</code> 而 <code>WeixinMsgController</code> 又继承自 <code>MsgControllerAdapter</code> 点击进去查看源码你会发现<code>MsgControllerAdapter</code> 是一个抽象类里面提供了很多抽象的方法（处理各种事件以及消息）,<code>MsgControllerAdapter</code>又继承自<code>MsgController</code> 其中有一个<code>index</code>方法上面添加了一个拦截器<code>MsgInterceptor</code>，拦截器中就是对交互数据进行加密验证的。 重点关注一下<code>checkSignature</code> 方法</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-f4c728c5d10bde6d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="开发者模式拦截器"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-c93709299f119a79.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="签名验证"></p>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之项目导入]]></title>
      <url>http://javen205.oschina.io/2016/09/10/%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5/</url>
      <content type="html"><![CDATA[<p>微信开发交流群：148540125</p>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<p>本文将学习到：<br>1、Eclipse、Intellij IDEA clone项目<br>2、Intellij IDEA 如何激活<br>3、Maven 下载安装配置<br>4、weixin_guide 如何启动<br><a id="more"></a></p>
<h3 id="项目如何导入到Eclipse"><a href="#项目如何导入到Eclipse" class="headerlink" title="项目如何导入到Eclipse"></a>项目如何导入到Eclipse</h3><p>操作步骤如下：导航栏选择<code>File</code>&gt;<code>Import...</code>&gt;<code>Git</code>&gt;<code>Projects from Git</code>&gt;<code>Clone URL</code>&gt;<code>URI</code>中输入要clone项目的地址点击下一步&gt;选择项目分支版本点击下一步&gt;等待后台clone完成&gt;选择<code>Import as general project</code> &gt;最后将项目转化为Maven项目(此过程需要向Maven中央仓库下载jar，如果现在失败建议在本地自己安装配置一个maven。<a href="http://www.cnblogs.com/zyw-205520/p/4767633.html" target="_blank" rel="external">安装参考地址</a>)<br>提供一个国内阿里的仓库</p>
<blockquote>
<p>maven仓库用过的人都知道，国内有多么的悲催。还好有比较好用的镜像可以使用，尽快记录下来。速度提升100倍。<br><a href="http://maven.aliyun.com/nexus/#view-repositories;public~browsestorage" target="_blank" rel="external">http://maven.aliyun.com/nexus/#view-repositories;public~browsestorage</a></p>
</blockquote>
<p>在maven的settings.xml 文件里配置mirrors的子节点，添加如下mirror</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;mirror&gt;</div><div class="line">        &lt;id&gt;nexus-aliyun&lt;/id&gt;</div><div class="line">        &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</div><div class="line">        &lt;name&gt;Nexus aliyun&lt;/name&gt;</div><div class="line">        &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</div><div class="line">&lt;/mirror&gt;</div></pre></td></tr></table></figure>
<p>详细的操作截图如下：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-5739b61de53feba0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 导入项目01.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-a1b8158a3c6a385f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 导入项目02.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-adff6774d8f71946.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 导入项目03.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-9b040ae1646cee12.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 导入项目04.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-bd6a0cd5c16f1743.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 导入项目05.png"></p>
<h3 id="项目如何导入到Intellij-IDEA"><a href="#项目如何导入到Intellij-IDEA" class="headerlink" title="项目如何导入到Intellij IDEA"></a>项目如何导入到Intellij IDEA</h3><p>送上一个<code>Intellij IDEA</code>激活方法 <a href="http://idea.lanyus.com" target="_blank" rel="external">参考地址</a></p>
<p>操作步骤如下：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-824868e7f6151e0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IDEA 导入项目01.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-e5c76b8dd45a081d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IDEA 导入项目02.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-79500d83e23c99dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IDEA 导入项目03.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-ba713aebffb78bba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IDEA 导入项目04.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-ccc7d269e9779761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IDEA 导入项目05.png"></p>
<blockquote>
<p>当然如果对Git命令比较熟悉的也可以使用命令导入项目</p>
</blockquote>
<h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><h1 id="Eclipse："><a href="#Eclipse：" class="headerlink" title="Eclipse："></a>Eclipse：</h1><p>Maven install 安装编译项目<br><img src="http://upload-images.jianshu.io/upload_images/1342351-bedd882614c75286.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 运行项目02.png"></p>
<p>项目配置文件<br><img src="http://upload-images.jianshu.io/upload_images/1342351-b2375c99b2a714b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 运行项目02.png"></p>
<p>设置启动端口并启动<br><img src="http://upload-images.jianshu.io/upload_images/1342351-4a0a40775296fb07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 运行项目03.png"><br>观察日志 </p>
<blockquote>
<p>如果自是测试微信而不使用数据库可以将以下方法中的代码注释：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">	 * 配置插件</div><div class="line">	 */</div><div class="line">	public void configPlugin(Plugins me) &#123;</div><div class="line">		/* C3p0Plugin c3p0Plugin = new C3p0Plugin(PropKit.get(&quot;jdbcUrl&quot;), PropKit.get(&quot;user&quot;), PropKit.get(&quot;password&quot;).trim());</div><div class="line">		 me.add(c3p0Plugin);</div><div class="line">		</div><div class="line">		// 配置ActiveRecord插件</div><div class="line">		ActiveRecordPlugin arp = new ActiveRecordPlugin(c3p0Plugin);</div><div class="line">		arp.addMapping(&quot;course&quot;, Course.class);</div><div class="line">		arp.addMapping(&quot;orders&quot;, Order.class);</div><div class="line">		arp.addMapping(&quot;users&quot;,&quot;id&quot;, Users.class);</div><div class="line">		arp.addMapping(&quot;Tuser&quot;, TUser.class);</div><div class="line">		arp.addMapping(&quot;stock&quot;, Stock.class);</div><div class="line">		arp.addMapping(&quot;idea&quot;, Idea.class);</div><div class="line">		arp.setShowSql(true);</div><div class="line">		me.add(arp);</div><div class="line">		</div><div class="line">		// ehcahce插件配置</div><div class="line">		me.add(new EhCachePlugin());</div><div class="line">		</div><div class="line">		</div><div class="line">		SchedulerPlugin sp = new SchedulerPlugin(&quot;job.properties&quot;);</div><div class="line">        me.add(sp);*/</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-10964153079231a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eclipse 运行项目04.png"></p>
<h1 id="Intellij-IDEA："><a href="#Intellij-IDEA：" class="headerlink" title="Intellij IDEA："></a>Intellij IDEA：</h1><p>启动项目是使用Maven插件 Jetty 详细操作步骤如下：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-58afbd943c815015.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IDEA 运行项目01.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1342351-40a6ec367486d237.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IDEA 运行项目02.png"></p>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发之发送短信]]></title>
      <url>http://javen205.oschina.io/2016/09/03/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B9%8B%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/</url>
      <content type="html"><![CDATA[<p>欢迎留言、转发、打赏</p>
<p>项目源码参考地址 <a href="https://github.com/Javen205/DeviceMange/tree/master/app/src/main/java/com/javen/devicemange/sms" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<a id="more"></a>
<p>1、调用系统已有程序发短信功能</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * @param phoneNumber</div><div class="line"> * @param message</div><div class="line"> */</div><div class="line">public void doSendSMSTo(String phoneNumber,String message)&#123;</div><div class="line">    if(PhoneNumberUtils.isGlobalPhoneNumber(phoneNumber))&#123;</div><div class="line">        Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.parse(&quot;smsto:&quot;+phoneNumber));          </div><div class="line">        intent.putExtra(&quot;sms_body&quot;, message);          </div><div class="line">        startActivity(intent);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2、调用API来实现发送短信</p>
<p><strong>SMS涉及的主要类SmsManager</strong></p>
<p>实现SMS主要用到SmsManager类，该类继承自java.lang.Object类，下面我们介绍一下该类的主要成员。</p>
<p><strong>公有方法：</strong></p>
<ul>
<li><p>ArrayList<string> <strong>divideMessage</strong>(String text) </string></p>
<p>  当短信超过SMS消息的最大长度时，将短信分割为几块。<br>参数：text——初始的消息，不能为空<br>返回值：有序的ArrayList<string>，可以重新组合为初始的消息</string></p>
</li>
<li><p>static SmsManager <strong>getDefault</strong>() </p>
<p>  获取SmsManager的默认实例。<br>返回值：SmsManager的默认实例</p>
</li>
<li><p>void <strong>SendDataMessage</strong>(String destinationAddress, String scAddress, short destinationPort, byte[] data,PendingIntent sentIntent, PendingIntent deliveryIntent) </p>
<p>  发送一个基于SMS的数据到指定的应用程序端口。<br>参数：<br>1)、destinationAddress——消息的目标地址<br>2)、scAddress——服务中心的地址or为空使用当前默认的SMSC<br>3)、destinationPort——消息的目标端口号<br>4)、data——消息的主体，即消息要发送的数据<br>5)、sentIntent——如果不为空，当消息成功发送或失败这个PendingIntent就广播。结果代码是Activity.RESULT_OK表示成功，或RESULT_ERROR_GENERIC_FAILURE、RESULT_ERROR_RADIO_OFF、RESULT_ERROR_NULL_PDU之一表示错误。对应RESULT_ERROR_GENERIC_FAILURE，sentIntent可能包括额外的“错误代码”包含一个无线电广播技术特定的值，通常只在修复故障时有用。 每一个基于SMS的应用程序控制检测sentIntent。如果sentIntent是空，调用者将检测所有未知的应用程序，这将导致在检测的时候发送较小数量的SMS。<br>6)、deliveryIntent——如果不为空，当消息成功传送到接收者这个PendingIntent就广播。</p>
</li>
</ul>
<p>异常：如果destinationAddress或data是空时，抛出IllegalArgumentException异常。</p>
<ul>
<li><p>void <strong>sendMultipartTextMessage</strong>(String destinationAddress, String scAddress, ArrayList<string> parts,ArrayList<pendingintent> sentIntents, ArrayList<pendingintent>  deliverIntents) </pendingintent></pendingintent></string></p>
<p>  发送一个基于SMS的多部分文本，调用者应用已经通过调用<strong>divideMessage</strong>(String text)将消息分割成正确的大小。<br>参数：<br>1)、destinationAddress——消息的目标地址<br>2)、scAddress——服务中心的地址or为空使用当前默认的SMSC<br>3)、parts——有序的ArrayList<string>，可以重新组合为初始的消息<br>4)、sentIntents——跟<strong>SendDataMessage</strong>方法中一样，只不过这里的是一组PendingIntent<br>5)、deliverIntents——跟<strong>SendDataMessage</strong>方法中一样，只不过这里的是一组PendingIntent </string></p>
</li>
</ul>
<p>异常：如果destinationAddress或data是空时，抛出IllegalArgumentException异常。</p>
<ul>
<li><p>void<strong> sendTextMessage</strong>(String destinationAddress, String scAddress, String text, PendingIntent sentIntent,PendingIntent deliveryIntent) </p>
<p>  发送一个基于SMS的文本。参数的意义和异常前面的已存在的一样，不再累述。</p>
</li>
</ul>
<h3 id="代码封装如下"><a href="#代码封装如下" class="headerlink" title="代码封装如下"></a>代码封装如下</h3><p>SMSMethod 发送短信的单例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">public class SMSMethod &#123;</div><div class="line">    private static  SMSMethod mSMSmsMethod;</div><div class="line">    /* 自定义ACTION常数，作为广播的Intent Filter识别常数 */</div><div class="line">    public static String SMS_SEND_ACTIOIN = &quot;SMS_SEND_ACTIOIN&quot;;</div><div class="line">    public static String SMS_DELIVERED_ACTION = &quot;SMS_DELIVERED_ACTION&quot;;</div><div class="line"></div><div class="line">    /* 建立两个mServiceReceiver对象，作为类成员变量 */</div><div class="line">    private SMSReceiver mSendSMSReceiver, mDeliveredSMSReceiver;</div><div class="line">    </div><div class="line">    private Context mContext;</div><div class="line"></div><div class="line">    private SMSMethod(Context context)&#123;</div><div class="line">        mContext=context;</div><div class="line">        registerReceiver();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static  SMSMethod getInstance(Context context)&#123;</div><div class="line">        if (mSMSmsMethod==null)&#123;</div><div class="line">            synchronized (SMSMethod.class)&#123;</div><div class="line">                if (mSMSmsMethod==null)&#123;</div><div class="line">                    mSMSmsMethod=new SMSMethod(context);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return  mSMSmsMethod;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 注册</div><div class="line">     */</div><div class="line">    public void registerReceiver()&#123;</div><div class="line">         /* 自定义IntentFilter为SENT_SMS_ACTIOIN Receiver */</div><div class="line">        IntentFilter mFilter01;</div><div class="line">        mFilter01 = new IntentFilter(SMS_SEND_ACTIOIN);</div><div class="line">        mSendSMSReceiver = new SMSReceiver();</div><div class="line">        mContext.registerReceiver(mSendSMSReceiver, mFilter01);</div><div class="line"></div><div class="line">        /* 自定义IntentFilter为DELIVERED_SMS_ACTION Receiver */</div><div class="line">        mFilter01 = new IntentFilter(SMS_DELIVERED_ACTION);</div><div class="line">        mDeliveredSMSReceiver = new SMSReceiver();</div><div class="line">        mContext.registerReceiver(mDeliveredSMSReceiver, mFilter01);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void unregisterReceiver()&#123;</div><div class="line">        /* 取消注册自定义Receiver */</div><div class="line">        if (mSendSMSReceiver!=null)&#123;</div><div class="line">            mContext.unregisterReceiver(mSendSMSReceiver);</div><div class="line">        &#125;</div><div class="line">        if (mDeliveredSMSReceiver!=null) &#123;</div><div class="line">            mContext.unregisterReceiver(mDeliveredSMSReceiver);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void SendMessage(String strDestAddress,String strMessage)&#123;</div><div class="line">        /* 建立SmsManager对象 */</div><div class="line">        SmsManager smsManager = SmsManager.getDefault();</div><div class="line">        try &#123;</div><div class="line">          /* 建立自定义Action常数的Intent(给PendingIntent参数之用) */</div><div class="line">            Intent itSend = new Intent(SMS_SEND_ACTIOIN);</div><div class="line">            Intent itDeliver = new Intent(SMS_DELIVERED_ACTION);</div><div class="line"></div><div class="line">          /* sentIntent参数为传送后接受的广播信息PendingIntent */</div><div class="line">            PendingIntent mSendPI = PendingIntent.getBroadcast(mContext, 0, itSend, 0);</div><div class="line"></div><div class="line">          /* deliveryIntent参数为送达后接受的广播信息PendingIntent */</div><div class="line">            PendingIntent mDeliverPI = PendingIntent.getBroadcast(mContext, 0, itDeliver, 0);</div><div class="line">            List&lt;String&gt; divideContents = smsManager.divideMessage(strMessage);</div><div class="line">            for (String text:divideContents) &#123;</div><div class="line">                 /* 发送SMS短信，注意倒数的两个PendingIntent参数 */</div><div class="line">                smsManager.sendTextMessage(strDestAddress, null, text, mSendPI, mDeliverPI);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;catch(Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    public void SendMessage2(String strDestAddress,String strMessage)&#123;</div><div class="line">        ArrayList&lt;PendingIntent&gt; sentPendingIntents = new ArrayList&lt;PendingIntent&gt;();</div><div class="line">        ArrayList&lt;PendingIntent&gt; deliveredPendingIntents = new ArrayList&lt;PendingIntent&gt;();</div><div class="line"></div><div class="line"></div><div class="line">        /* 建立SmsManager对象 */</div><div class="line">        SmsManager smsManager = SmsManager.getDefault();</div><div class="line">        try &#123;</div><div class="line">          /* 建立自定义Action常数的Intent(给PendingIntent参数之用) */</div><div class="line">            Intent itSend = new Intent(SMS_SEND_ACTIOIN);</div><div class="line">            Intent itDeliver = new Intent(SMS_DELIVERED_ACTION);</div><div class="line"></div><div class="line">          /* sentIntent参数为传送后接受的广播信息PendingIntent */</div><div class="line">            PendingIntent mSendPI = PendingIntent.getBroadcast(mContext, 0, itSend, 0);</div><div class="line"></div><div class="line">          /* deliveryIntent参数为送达后接受的广播信息PendingIntent */</div><div class="line">            PendingIntent mDeliverPI = PendingIntent.getBroadcast(mContext, 0, itDeliver, 0);</div><div class="line">            ArrayList&lt;String&gt; mSMSMessage = smsManager.divideMessage(strMessage);</div><div class="line"></div><div class="line">            for (int i = 0; i &lt; mSMSMessage.size(); i++) &#123;</div><div class="line">                sentPendingIntents.add(i, mSendPI);</div><div class="line">                deliveredPendingIntents.add(i, mDeliverPI);</div><div class="line">            &#125;</div><div class="line">             /* 发送SMS短信，注意倒数的两个PendingIntent参数 */</div><div class="line">            smsManager.sendMultipartTextMessage(strDestAddress,null,mSMSMessage ,sentPendingIntents,deliveredPendingIntents);</div><div class="line"></div><div class="line"></div><div class="line">        &#125;catch(Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>短信发送状态监听<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">public class SMSReceiver extends BroadcastReceiver&#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onReceive(Context context, Intent intent) &#123;</div><div class="line">        if (intent.getAction().equals(SMSMethod.SMS_SEND_ACTIOIN))&#123;</div><div class="line">            try&#123;</div><div class="line">                /* android.content.BroadcastReceiver.getResultCode()方法 */</div><div class="line">                //Retrieve the current result code, as set by the previous receiver.</div><div class="line">                switch (getResultCode())&#123;</div><div class="line">                    case Activity.RESULT_OK:</div><div class="line">                        Toast.makeText(context, &quot;短信发送成功&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                        break;</div><div class="line">                    case SmsManager.RESULT_ERROR_GENERIC_FAILURE:</div><div class="line">                        Toast.makeText(context, &quot;短信发送失败&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                        break;</div><div class="line">                    case SmsManager.RESULT_ERROR_RADIO_OFF:</div><div class="line">                        break;</div><div class="line">                    case SmsManager.RESULT_ERROR_NULL_PDU:</div><div class="line">                        break;</div><div class="line">                &#125;</div><div class="line">            &#125;catch (Exception e)&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125; else if(intent.getAction().equals(SMSMethod.SMS_DELIVERED_ACTION))&#123;</div><div class="line">            /* android.content.BroadcastReceiver.getResultCode()方法 */</div><div class="line">            switch(getResultCode())&#123;</div><div class="line">                case Activity.RESULT_OK:</div><div class="line">                    Toast.makeText(context, &quot;短信已送达&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                    break;</div><div class="line">                case SmsManager.RESULT_ERROR_GENERIC_FAILURE:</div><div class="line">                    /* 短信未送达 */</div><div class="line">                    Toast.makeText(context, &quot;短信未送达&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                    break;</div><div class="line">                case SmsManager.RESULT_ERROR_RADIO_OFF:</div><div class="line">                    break;</div><div class="line">                case SmsManager.RESULT_ERROR_NULL_PDU:</div><div class="line">                    break;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在AndroidManifest.xml中添加监听<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 短信发送送达--&gt;&lt;receiver android:name=&quot;.sms.SMSReceiver&quot;/&gt;</div></pre></td></tr></table></figure></p>
<ul>
<li>一些例子</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public void sendTextMessage(View view)&#123;</div><div class="line">       SMSMethod.getInstance(this).SendMessage(&quot;这里填写手机号码&quot;,&quot;测试短信.....Javen&quot;);</div><div class="line">   &#125;</div><div class="line">   public void sendMultipartTextMessage(View view)&#123;</div><div class="line">       SMSMethod.getInstance(this).SendMessage2(&quot;这里填写手机号码&quot;, &quot;测试短信......Javen&quot;);</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   @Override</div><div class="line">   protected void onPause() &#123;</div><div class="line">       SMSMethod.getInstance(this).unregisterReceiver();</div><div class="line">       super.onPause();</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>项目源码参考地址 <a href="https://github.com/Javen205/DeviceMange" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<p>1、调用系统已有程序发短信功能</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * @param phoneNumber</div><div class="line"> * @param message</div><div class="line"> */</div><div class="line">public void doSendSMSTo(String phoneNumber,String message)&#123;</div><div class="line">    if(PhoneNumberUtils.isGlobalPhoneNumber(phoneNumber))&#123;</div><div class="line">        Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.parse(&quot;smsto:&quot;+phoneNumber));          </div><div class="line">        intent.putExtra(&quot;sms_body&quot;, message);          </div><div class="line">        startActivity(intent);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2、调用API来实现发送短信</p>
<p><strong>SMS涉及的主要类SmsManager</strong></p>
<p>实现SMS主要用到SmsManager类，该类继承自java.lang.Object类，下面我们介绍一下该类的主要成员。</p>
<p><strong>公有方法：</strong></p>
<ul>
<li><p>ArrayList<string> <strong>divideMessage</strong>(String text) </string></p>
<p>  当短信超过SMS消息的最大长度时，将短信分割为几块。<br>参数：text——初始的消息，不能为空<br>返回值：有序的ArrayList<string>，可以重新组合为初始的消息</string></p>
</li>
<li><p>static SmsManager <strong>getDefault</strong>() </p>
<p>  获取SmsManager的默认实例。<br>返回值：SmsManager的默认实例</p>
</li>
<li><p>void <strong>SendDataMessage</strong>(String destinationAddress, String scAddress, short destinationPort, byte[] data,PendingIntent sentIntent, PendingIntent deliveryIntent) </p>
<p>  发送一个基于SMS的数据到指定的应用程序端口。<br>参数：<br>1)、destinationAddress——消息的目标地址<br>2)、scAddress——服务中心的地址or为空使用当前默认的SMSC<br>3)、destinationPort——消息的目标端口号<br>4)、data——消息的主体，即消息要发送的数据<br>5)、sentIntent——如果不为空，当消息成功发送或失败这个PendingIntent就广播。结果代码是Activity.RESULT_OK表示成功，或RESULT_ERROR_GENERIC_FAILURE、RESULT_ERROR_RADIO_OFF、RESULT_ERROR_NULL_PDU之一表示错误。对应RESULT_ERROR_GENERIC_FAILURE，sentIntent可能包括额外的“错误代码”包含一个无线电广播技术特定的值，通常只在修复故障时有用。 每一个基于SMS的应用程序控制检测sentIntent。如果sentIntent是空，调用者将检测所有未知的应用程序，这将导致在检测的时候发送较小数量的SMS。<br>6)、deliveryIntent——如果不为空，当消息成功传送到接收者这个PendingIntent就广播。</p>
</li>
</ul>
<p>异常：如果destinationAddress或data是空时，抛出IllegalArgumentException异常。</p>
<ul>
<li><p>void <strong>sendMultipartTextMessage</strong>(String destinationAddress, String scAddress, ArrayList<string> parts,ArrayList<pendingintent> sentIntents, ArrayList<pendingintent>  deliverIntents) </pendingintent></pendingintent></string></p>
<p>  发送一个基于SMS的多部分文本，调用者应用已经通过调用<strong>divideMessage</strong>(String text)将消息分割成正确的大小。<br>参数：<br>1)、destinationAddress——消息的目标地址<br>2)、scAddress——服务中心的地址or为空使用当前默认的SMSC<br>3)、parts——有序的ArrayList<string>，可以重新组合为初始的消息<br>4)、sentIntents——跟<strong>SendDataMessage</strong>方法中一样，只不过这里的是一组PendingIntent<br>5)、deliverIntents——跟<strong>SendDataMessage</strong>方法中一样，只不过这里的是一组PendingIntent </string></p>
</li>
</ul>
<p>异常：如果destinationAddress或data是空时，抛出IllegalArgumentException异常。</p>
<ul>
<li><p>void<strong> sendTextMessage</strong>(String destinationAddress, String scAddress, String text, PendingIntent sentIntent,PendingIntent deliveryIntent) </p>
<p>  发送一个基于SMS的文本。参数的意义和异常前面的已存在的一样，不再累述。</p>
</li>
</ul>
<h3 id="代码封装如下-1"><a href="#代码封装如下-1" class="headerlink" title="代码封装如下"></a>代码封装如下</h3><p>SMSMethod 发送短信的单例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">public class SMSMethod &#123;</div><div class="line">    private static  SMSMethod mSMSmsMethod;</div><div class="line">    /* 自定义ACTION常数，作为广播的Intent Filter识别常数 */</div><div class="line">    public static String SMS_SEND_ACTIOIN = &quot;SMS_SEND_ACTIOIN&quot;;</div><div class="line">    public static String SMS_DELIVERED_ACTION = &quot;SMS_DELIVERED_ACTION&quot;;</div><div class="line"></div><div class="line">    /* 建立两个mServiceReceiver对象，作为类成员变量 */</div><div class="line">    private SMSReceiver mSendSMSReceiver, mDeliveredSMSReceiver;</div><div class="line">    </div><div class="line">    private Context mContext;</div><div class="line"></div><div class="line">    private SMSMethod(Context context)&#123;</div><div class="line">        mContext=context;</div><div class="line">        registerReceiver();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static  SMSMethod getInstance(Context context)&#123;</div><div class="line">        if (mSMSmsMethod==null)&#123;</div><div class="line">            synchronized (SMSMethod.class)&#123;</div><div class="line">                if (mSMSmsMethod==null)&#123;</div><div class="line">                    mSMSmsMethod=new SMSMethod(context);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return  mSMSmsMethod;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 注册</div><div class="line">     */</div><div class="line">    public void registerReceiver()&#123;</div><div class="line">         /* 自定义IntentFilter为SENT_SMS_ACTIOIN Receiver */</div><div class="line">        IntentFilter mFilter01;</div><div class="line">        mFilter01 = new IntentFilter(SMS_SEND_ACTIOIN);</div><div class="line">        mSendSMSReceiver = new SMSReceiver();</div><div class="line">        mContext.registerReceiver(mSendSMSReceiver, mFilter01);</div><div class="line"></div><div class="line">        /* 自定义IntentFilter为DELIVERED_SMS_ACTION Receiver */</div><div class="line">        mFilter01 = new IntentFilter(SMS_DELIVERED_ACTION);</div><div class="line">        mDeliveredSMSReceiver = new SMSReceiver();</div><div class="line">        mContext.registerReceiver(mDeliveredSMSReceiver, mFilter01);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void unregisterReceiver()&#123;</div><div class="line">        /* 取消注册自定义Receiver */</div><div class="line">        if (mSendSMSReceiver!=null)&#123;</div><div class="line">            mContext.unregisterReceiver(mSendSMSReceiver);</div><div class="line">        &#125;</div><div class="line">        if (mDeliveredSMSReceiver!=null) &#123;</div><div class="line">            mContext.unregisterReceiver(mDeliveredSMSReceiver);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void SendMessage(String strDestAddress,String strMessage)&#123;</div><div class="line">        /* 建立SmsManager对象 */</div><div class="line">        SmsManager smsManager = SmsManager.getDefault();</div><div class="line">        try &#123;</div><div class="line">          /* 建立自定义Action常数的Intent(给PendingIntent参数之用) */</div><div class="line">            Intent itSend = new Intent(SMS_SEND_ACTIOIN);</div><div class="line">            Intent itDeliver = new Intent(SMS_DELIVERED_ACTION);</div><div class="line"></div><div class="line">          /* sentIntent参数为传送后接受的广播信息PendingIntent */</div><div class="line">            PendingIntent mSendPI = PendingIntent.getBroadcast(mContext, 0, itSend, 0);</div><div class="line"></div><div class="line">          /* deliveryIntent参数为送达后接受的广播信息PendingIntent */</div><div class="line">            PendingIntent mDeliverPI = PendingIntent.getBroadcast(mContext, 0, itDeliver, 0);</div><div class="line">            List&lt;String&gt; divideContents = smsManager.divideMessage(strMessage);</div><div class="line">            for (String text:divideContents) &#123;</div><div class="line">                 /* 发送SMS短信，注意倒数的两个PendingIntent参数 */</div><div class="line">                smsManager.sendTextMessage(strDestAddress, null, text, mSendPI, mDeliverPI);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;catch(Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    public void SendMessage2(String strDestAddress,String strMessage)&#123;</div><div class="line">        ArrayList&lt;PendingIntent&gt; sentPendingIntents = new ArrayList&lt;PendingIntent&gt;();</div><div class="line">        ArrayList&lt;PendingIntent&gt; deliveredPendingIntents = new ArrayList&lt;PendingIntent&gt;();</div><div class="line"></div><div class="line"></div><div class="line">        /* 建立SmsManager对象 */</div><div class="line">        SmsManager smsManager = SmsManager.getDefault();</div><div class="line">        try &#123;</div><div class="line">          /* 建立自定义Action常数的Intent(给PendingIntent参数之用) */</div><div class="line">            Intent itSend = new Intent(SMS_SEND_ACTIOIN);</div><div class="line">            Intent itDeliver = new Intent(SMS_DELIVERED_ACTION);</div><div class="line"></div><div class="line">          /* sentIntent参数为传送后接受的广播信息PendingIntent */</div><div class="line">            PendingIntent mSendPI = PendingIntent.getBroadcast(mContext, 0, itSend, 0);</div><div class="line"></div><div class="line">          /* deliveryIntent参数为送达后接受的广播信息PendingIntent */</div><div class="line">            PendingIntent mDeliverPI = PendingIntent.getBroadcast(mContext, 0, itDeliver, 0);</div><div class="line">            ArrayList&lt;String&gt; mSMSMessage = smsManager.divideMessage(strMessage);</div><div class="line"></div><div class="line">            for (int i = 0; i &lt; mSMSMessage.size(); i++) &#123;</div><div class="line">                sentPendingIntents.add(i, mSendPI);</div><div class="line">                deliveredPendingIntents.add(i, mDeliverPI);</div><div class="line">            &#125;</div><div class="line">             /* 发送SMS短信，注意倒数的两个PendingIntent参数 */</div><div class="line">            smsManager.sendMultipartTextMessage(strDestAddress,null,mSMSMessage ,sentPendingIntents,deliveredPendingIntents);</div><div class="line"></div><div class="line"></div><div class="line">        &#125;catch(Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>短信发送状态监听<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">public class SMSReceiver extends BroadcastReceiver&#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onReceive(Context context, Intent intent) &#123;</div><div class="line">        if (intent.getAction().equals(SMSMethod.SMS_SEND_ACTIOIN))&#123;</div><div class="line">            try&#123;</div><div class="line">                /* android.content.BroadcastReceiver.getResultCode()方法 */</div><div class="line">                //Retrieve the current result code, as set by the previous receiver.</div><div class="line">                switch (getResultCode())&#123;</div><div class="line">                    case Activity.RESULT_OK:</div><div class="line">                        Toast.makeText(context, &quot;短信发送成功&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                        break;</div><div class="line">                    case SmsManager.RESULT_ERROR_GENERIC_FAILURE:</div><div class="line">                        Toast.makeText(context, &quot;短信发送失败&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                        break;</div><div class="line">                    case SmsManager.RESULT_ERROR_RADIO_OFF:</div><div class="line">                        break;</div><div class="line">                    case SmsManager.RESULT_ERROR_NULL_PDU:</div><div class="line">                        break;</div><div class="line">                &#125;</div><div class="line">            &#125;catch (Exception e)&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125; else if(intent.getAction().equals(SMSMethod.SMS_DELIVERED_ACTION))&#123;</div><div class="line">            /* android.content.BroadcastReceiver.getResultCode()方法 */</div><div class="line">            switch(getResultCode())&#123;</div><div class="line">                case Activity.RESULT_OK:</div><div class="line">                    Toast.makeText(context, &quot;短信已送达&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                    break;</div><div class="line">                case SmsManager.RESULT_ERROR_GENERIC_FAILURE:</div><div class="line">                    /* 短信未送达 */</div><div class="line">                    Toast.makeText(context, &quot;短信未送达&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                    break;</div><div class="line">                case SmsManager.RESULT_ERROR_RADIO_OFF:</div><div class="line">                    break;</div><div class="line">                case SmsManager.RESULT_ERROR_NULL_PDU:</div><div class="line">                    break;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在AndroidManifest.xml中添加监听<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 短信发送送达--&gt;&lt;receiver android:name=&quot;.sms.SMSReceiver&quot;/&gt;</div></pre></td></tr></table></figure></p>
<ul>
<li>一些例子</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public void sendTextMessage(View view)&#123;</div><div class="line">       SMSMethod.getInstance(this).SendMessage(&quot;这里填写手机号码&quot;,&quot;测试短信.....Javen&quot;);</div><div class="line">   &#125;</div><div class="line">   public void sendMultipartTextMessage(View view)&#123;</div><div class="line">       SMSMethod.getInstance(this).SendMessage2(&quot;这里填写手机号码&quot;, &quot;测试短信......Javen&quot;);</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   @Override</div><div class="line">   protected void onPause() &#123;</div><div class="line">       SMSMethod.getInstance(this).unregisterReceiver();</div><div class="line">       super.onPause();</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>欢迎留言、转发、打赏</p>
<p>项目源码参考地址 <a href="https://github.com/Javen205/DeviceMange/tree/master/app/src/main/java/com/javen/devicemange/sms" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发之设备管理器]]></title>
      <url>http://javen205.oschina.io/2016/09/03/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B9%8B%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>继续来总结一些常用封装。</p>
<p>欢迎留言、转发、打赏</p>
<p>项目源码参考地址 <a href="https://github.com/Javen205/DeviceMange" target="_blank" rel="external">点我点我–欢迎Start</a></p>
<a id="more"></a>
<ul>
<li>何为设备管理器</li>
<li>激活设备管理器能做些什么</li>
<li>如何激活设备管理器</li>
</ul>
<p>Android 2.2 SDK提供了一个可管理和操作设备的API叫DevicePolicyManager（这是设备管理的主类），使用这个API你可以接管手机的应用权限，对手机做出很重要很多大胆的操作（温馨提示：数据无价，谨慎操作），比如设置锁屏方式、恢复出厂设置、设置密码、强制清除密码，修改密码等操作。</p>
<p>DeviceAdminReceiver</p>
<p> 该类继承自 BroadcastReceiver 。 从源码可以看到，其实就是实现了一个OnReceive方法，该方法中根据不同的Action，执行相应的操作。 比如，如果激活成功，那么Action就是ACTION_DEVICE_ADMIN_ENABLED， 据此调用 onEnabled 方法。下面会有继承DeviceAdminReceiver方法的实现。</p>
<p>到底如何激活设备管理器呢？</p>
<p>1.申请设备管理器权限，注册权限监听器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;!--设备管理--&gt;</div><div class="line">&lt;receiver</div><div class="line">    android:name=&quot;.demo.DeviceReceiver&quot;</div><div class="line">    android:permission=&quot;android.permission.BIND_DEVICE_ADMIN&quot;&gt;</div><div class="line">    &lt;meta-data</div><div class="line">        android:name=&quot;android.app.device_admin&quot;</div><div class="line">        android:resource=&quot;@xml/device_admin&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;intent-filter&gt;</div><div class="line">        &lt;action android:name=&quot;android.app.action.DEVICE_ADMIN_ENABLED&quot; /&gt;</div><div class="line">        &lt;action android:name=&quot;android.intent.action.BOOT_COMPLETED&quot; /&gt;</div><div class="line">        &lt;category android:name=&quot;android.intent.category.HOME&quot; /&gt;</div><div class="line">    &lt;/intent-filter&gt;</div><div class="line">&lt;/receiver&gt;</div><div class="line">&lt;!--设备管理 END--&gt;</div></pre></td></tr></table></figure>
<p>2.创建xml文件夹添加device_admin.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;device-admin</div><div class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;uses-policies&gt;</div><div class="line">        &lt;limit-password /&gt;</div><div class="line">        &lt;!-- 限制密码类型 --&gt;</div><div class="line">        &lt;watch-login /&gt;</div><div class="line">        &lt;!-- 监控登录尝试 --&gt;</div><div class="line">        &lt;reset-password /&gt;</div><div class="line">        &lt;!-- 重置密码 --&gt;</div><div class="line">        &lt;force-lock /&gt;</div><div class="line">        &lt;!--锁屏 --&gt;</div><div class="line">        &lt;wipe-data /&gt;</div><div class="line">        &lt;!-- 恢复出厂设置 --&gt;</div><div class="line">    &lt;/uses-policies&gt;</div><div class="line">&lt;/device-admin&gt;</div></pre></td></tr></table></figure>
<p>3.常用方法封装</p>
<p>该方法使用的<code>双重锁定单例模式</code> 私有构造方法中获取<code>设备管理服务</code>并实例化一个<code>DeviceReceiver</code>继承自 <code>DeviceAdminReceiver</code>具体代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line">public class DeviceMethod &#123;</div><div class="line">    private static DeviceMethod mDeviceMethod;</div><div class="line"></div><div class="line">    private DevicePolicyManager devicePolicyManager;</div><div class="line">    private ComponentName componentName;</div><div class="line">    private Context mContext;</div><div class="line"></div><div class="line">    private DeviceMethod (Context context)&#123;</div><div class="line">        mContext=context;</div><div class="line">        //获取设备管理服务</div><div class="line">        devicePolicyManager=(DevicePolicyManager) context.getSystemService(Context.DEVICE_POLICY_SERVICE);</div><div class="line">        //DeviceReceiver 继承自 DeviceAdminReceiver</div><div class="line">        componentName=new ComponentName(context, DeviceReceiver.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static DeviceMethod getInstance(Context context)&#123;</div><div class="line">        if (mDeviceMethod==null) &#123;</div><div class="line">            synchronized (DeviceMethod.class) &#123;</div><div class="line">                if (mDeviceMethod==null) &#123;</div><div class="line">                    mDeviceMethod=new DeviceMethod(context);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return mDeviceMethod;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 激活程序</div><div class="line">    public void onActivate() &#123;</div><div class="line">        Toast.makeText(mContext, &quot;激活&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        //判断是否激活  如果没有就启动激活设备</div><div class="line">        if (!devicePolicyManager.isAdminActive(componentName)) &#123;</div><div class="line">            Intent intent = new Intent(</div><div class="line">                    DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN);</div><div class="line">            intent.putExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN,</div><div class="line">                    componentName);</div><div class="line">            intent.putExtra(DevicePolicyManager.EXTRA_ADD_EXPLANATION, &quot;提示文字&quot;);</div><div class="line">            mContext.startActivity(intent);</div><div class="line">        &#125;else &#123;</div><div class="line">            Toast.makeText(mContext, &quot;设备已经激活,请勿重复激活&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 移除程序 如果不移除程序 APP无法被卸载</div><div class="line">     */</div><div class="line">    public void onRemoveActivate() &#123;</div><div class="line">        devicePolicyManager.removeActiveAdmin(componentName);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 设置解锁方式 不需要激活就可以运行</div><div class="line">     */</div><div class="line">    public void startLockMethod() &#123;</div><div class="line">        Intent intent = new Intent(DevicePolicyManager.ACTION_SET_NEW_PASSWORD);</div><div class="line">        mContext.startActivity(intent);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 设置解锁方式</div><div class="line">     */</div><div class="line">    public void setLockMethod() &#123;</div><div class="line">        // PASSWORD_QUALITY_ALPHABETIC</div><div class="line">        // 用户输入的密码必须要有字母（或者其他字符）。</div><div class="line">        // PASSWORD_QUALITY_ALPHANUMERIC</div><div class="line">        // 用户输入的密码必须要有字母和数字。</div><div class="line">        // PASSWORD_QUALITY_NUMERIC</div><div class="line">        // 用户输入的密码必须要有数字</div><div class="line">        // PASSWORD_QUALITY_SOMETHING</div><div class="line">        // 由设计人员决定的。</div><div class="line">        // PASSWORD_QUALITY_UNSPECIFIED</div><div class="line">        // 对密码没有要求。</div><div class="line">        if (devicePolicyManager.isAdminActive(componentName)) &#123;</div><div class="line">            Intent intent = new Intent(DevicePolicyManager.ACTION_SET_NEW_PASSWORD);</div><div class="line">            devicePolicyManager.setPasswordQuality(componentName,</div><div class="line">                    DevicePolicyManager.PASSWORD_QUALITY_NUMERIC);</div><div class="line">            mContext.startActivity(intent);</div><div class="line">        &#125;else &#123;</div><div class="line">            Toast.makeText(mContext, &quot;请先激活设备&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 立刻锁屏</div><div class="line">     */</div><div class="line">    public void LockNow() &#123;</div><div class="line">        if (devicePolicyManager.isAdminActive(componentName)) &#123;</div><div class="line">            devicePolicyManager.lockNow();</div><div class="line">        &#125;else &#123;</div><div class="line">            Toast.makeText(mContext, &quot;请先激活设备&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 设置多长时间后锁屏</div><div class="line">     * @param time</div><div class="line">     */</div><div class="line">    public void LockByTime(long time) &#123;</div><div class="line">        if (devicePolicyManager.isAdminActive(componentName)) &#123;</div><div class="line">            devicePolicyManager.setMaximumTimeToLock(componentName, time);</div><div class="line">        &#125;else &#123;</div><div class="line">            Toast.makeText(mContext, &quot;请先激活设备&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 恢复出厂设置</div><div class="line">     */</div><div class="line">    public void WipeData() &#123;</div><div class="line">        if (devicePolicyManager.isAdminActive(componentName)) &#123;</div><div class="line">            devicePolicyManager.wipeData(DevicePolicyManager.WIPE_EXTERNAL_STORAGE);</div><div class="line">        &#125;else &#123;</div><div class="line">            Toast.makeText(mContext, &quot;请先激活设备&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 设置密码锁</div><div class="line">     * @param password</div><div class="line">     */</div><div class="line">    public void setPassword(String password) &#123;</div><div class="line">        if (devicePolicyManager.isAdminActive(componentName)) &#123;</div><div class="line">            devicePolicyManager.resetPassword(password,</div><div class="line">                    DevicePolicyManager.RESET_PASSWORD_REQUIRE_ENTRY);</div><div class="line">        &#125;else &#123;</div><div class="line">            Toast.makeText(mContext, &quot;请先激活设备&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="遗留问题-弹出激活界面点击取消-如何监听"><a href="#遗留问题-弹出激活界面点击取消-如何监听" class="headerlink" title="遗留问题  弹出激活界面点击取消 如何监听"></a>遗留问题  弹出激活界面点击取消 如何监听</h3><p>有好的解决方案欢迎留言（目前我想到的可以尝试使用模拟用户点击【之前很火🔥的抢微信红包插件】）</p>
<p>以下是设备管理器操作的广播监听<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">public class DeviceReceiver extends DeviceAdminReceiver &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onEnabled(Context context, Intent intent) &#123;</div><div class="line">            // 设备管理：可用</div><div class="line">            Toast.makeText(context, &quot;设备管理：可用&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onDisabled(final Context context, Intent intent) &#123;</div><div class="line">            // 设备管理：不可用</div><div class="line">            Toast.makeText(context, &quot;设备管理：不可用&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            //如果取消了激活就再次提示激活</div><div class="line">            new Handler().postDelayed(new Runnable() &#123;</div><div class="line">                @Override</div><div class="line">                public void run() &#123;</div><div class="line">                    DeviceMethod.getInstance(context.getApplicationContext()).onActivate();</div><div class="line">                &#125;</div><div class="line">            &#125;, 3000);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public CharSequence onDisableRequested(Context context, Intent intent) &#123;</div><div class="line">           /* // 这里处理 不可编辑设备。这里可以造成死机状态</div><div class="line">            Intent intent2 = new Intent(context, NoticeSetting.class);</div><div class="line">            intent2.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">            context.startActivity(intent2);</div><div class="line">            context.stopService(intent);// 是否可以停止*/</div><div class="line"></div><div class="line">            return &quot;这是一个可选的消息，警告有关禁止用户的请求&quot;;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onPasswordChanged(Context context, Intent intent) &#123;</div><div class="line">            // 设备管理：密码己经改变</div><div class="line">            Toast.makeText(context, &quot;设备管理：密码己经改变&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onPasswordFailed(Context context, Intent intent) &#123;</div><div class="line">            // 设备管理：改变密码失败</div><div class="line">            Toast.makeText(context, &quot;设备管理：改变密码失败&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onPasswordSucceeded(Context context, Intent intent) &#123;</div><div class="line">            // 设备管理：改变密码成功</div><div class="line">            Toast.makeText(context, &quot;设备管理：改变密码成功&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>4.一些栗子</p>
<ul>
<li>激活设备管理器</li>
<li>取消激活设备管理器</li>
<li>设置解锁方式</li>
<li>立刻锁屏</li>
<li>设置N秒后锁屏</li>
<li>恢复出厂设置</li>
<li>设置密码锁</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">// 激活程序</div><div class="line">public void OnActivate(View v) &#123;</div><div class="line">    DeviceMethod.getInstance(this).onActivate();</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 移除程序 如果不移除程序 APP无法被卸载</div><div class="line">public void OnRemoveActivate(View v) &#123;</div><div class="line">    DeviceMethod.getInstance(this).onRemoveActivate();</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 设置解锁方式 不需要激活就可以运行</div><div class="line">public void btnszmm(View v) &#123;</div><div class="line">    DeviceMethod.getInstance(this).startLockMethod();</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 设置解锁方式</div><div class="line">public void btnmm(View v) &#123;</div><div class="line">   DeviceMethod.getInstance(this).setLockMethod();</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 立刻锁屏</div><div class="line">public void btnlock(View v) &#123;</div><div class="line">    DeviceMethod.getInstance(this).LockNow();</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 设置5秒后锁屏</div><div class="line">public void btnlocktime(View v) &#123;</div><div class="line">    DeviceMethod.getInstance(this).LockByTime(5000);</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 恢复出厂设置</div><div class="line">public void btnwipe(View v) &#123;</div><div class="line">    DeviceMethod.getInstance(this).WipeData();</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 设置密码锁</div><div class="line">public void setPassword(View v) &#123;</div><div class="line">   DeviceMethod.getInstance(this).setPassword(&quot;1234&quot;);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>欢迎留言、转发、打赏<br>项目源码参考地址 <a href="https://github.com/Javen205/DeviceMange" target="_blank" rel="external">点我点我–欢迎Start</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发之桌面快捷方式]]></title>
      <url>http://javen205.oschina.io/2016/08/31/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B9%8B%E6%A1%8C%E9%9D%A2%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>欢迎留言、转发、打赏</p>
<p>项目参考地址：<a href="https://github.com/Javen205/Realm-Demo/tree/master/app/src/main/java/com/javen/demo/ui" target="_blank" rel="external">参考代码</a></p>
<a id="more"></a>
<ul>
<li>创建快捷方式1（logo图片使用资源文件R.drawable.xxx）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">	 * 创建快捷方式</div><div class="line">	 * @param context</div><div class="line">	 * @param shortcutName</div><div class="line">	 * @param iconRes</div><div class="line">	 * @param actionIntent</div><div class="line">	 * @param allowRepeat</div><div class="line">	 */</div><div class="line">    public static void addShortcut(Context context, String shortcutName, int iconRes,Intent actionIntent,boolean allowRepeat)&#123;</div><div class="line">        Intent shortcutintent = new Intent(&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;);</div><div class="line">        //是否允许重复创建</div><div class="line">        shortcutintent.putExtra(&quot;duplicate&quot;,allowRepeat);</div><div class="line">        //快捷方式的名称</div><div class="line">        shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_NAME, shortcutName);</div><div class="line">        //设置快捷方式图片</div><div class="line">        Parcelable icon = Intent.ShortcutIconResource.fromContext(context.getApplicationContext(), iconRes);</div><div class="line">        shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE, icon);</div><div class="line">        //设置快捷方式动作</div><div class="line">        shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, actionIntent);</div><div class="line">        //向系统发送广播</div><div class="line">        context.sendBroadcast(shortcutintent);</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<ul>
<li>创建快捷方式2（logo图标使用Bitmap）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">    * 创建快捷方式 </div><div class="line">    * @param context</div><div class="line">    * @param shotcutName</div><div class="line">    * @param bitmap</div><div class="line">    * @param actionIntent</div><div class="line">    * @param allowRepeat</div><div class="line">    */</div><div class="line">   public static void addShortcut(Context context, String shotcutName, Bitmap bitmap,Intent actionIntent,boolean allowRepeat)&#123;</div><div class="line">       Intent shortcutintent = new Intent(&quot;com.android.launcher.action.INSTALL_SHORTCUT&quot;);</div><div class="line">       //是否允许重复创建</div><div class="line">       shortcutintent.putExtra(&quot;duplicate&quot;,allowRepeat);</div><div class="line">       //快捷方式的名称</div><div class="line">       shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_NAME, shotcutName);</div><div class="line">       //设置快捷方式图片</div><div class="line">       shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_ICON, bitmap);</div><div class="line">       //设置快捷方式动作</div><div class="line">       shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, actionIntent);</div><div class="line">       //向系统发送广播</div><div class="line">       context.sendBroadcast(shortcutintent);</div><div class="line"></div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>两者的区别</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//第一种设置快捷方式图片</div><div class="line">Parcelable icon = Intent.ShortcutIconResource.fromContext(context.getApplicationContext(), iconRes);</div><div class="line">shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE, icon);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//第二种设置快捷方式图片</div><div class="line">shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_ICON, bitmap);</div></pre></td></tr></table></figure>
<ul>
<li>删除快捷键</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">    * 删除快捷键</div><div class="line">    * </div><div class="line">    */</div><div class="line">   public void deleteShortcut(Context context, String name, int iconRes,Intent actionIntent,boolean allowRepeat)&#123;</div><div class="line">       Intent shortcutintent = new Intent(&quot;com.android.launcher.action.UNINSTALL_SHORTCUT&quot;);</div><div class="line">       //是否循环删除</div><div class="line">       shortcutintent.putExtra(&quot;duplicate&quot;,allowRepeat);</div><div class="line">       //快捷方式的名称</div><div class="line">       shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_NAME, name);</div><div class="line">       //设置快捷方式动作</div><div class="line">       shortcutintent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, actionIntent);</div><div class="line">       //向系统发送广播</div><div class="line">       context.sendBroadcast(shortcutintent);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>注意需要添加创建以及删除的权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:name=&quot;com.android.launcher.permission.INSTALL_SHORTCUT&quot;/&gt;</div><div class="line">&lt;uses-permission android:name=&quot;com.android.launcher.permission.UNINSTALL_SHORTCUT&quot;/&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>一些栗子</p>
</li>
</ul>
<p>1、创建快捷键点击打开浏览器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public static void openView(Context context,String appName,int iconRes,String url)&#123;</div><div class="line">        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));</div><div class="line">        addShortcut(context,appName,iconRes,intent,false);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public void shortcut(View view)&#123;</div><div class="line">		ShortcutUtil.openView(mContext, &quot;启动浏览器&quot;, R.drawable.demo, &quot;http://www.qq.com&quot;);</div><div class="line">		ShortcutUtil.openView(mContext, &quot;启动浏览器2&quot;, ((BitmapDrawable)getResources().getDrawable(R.drawable.demo)).getBitmap(), &quot;http://www.qq.com&quot;);</div><div class="line">		</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p>2、创建快捷键点击启动安装页面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">   /**</div><div class="line"> * 快捷键启动安装界面</div><div class="line"> * @param context</div><div class="line"> * @param appName</div><div class="line"> * @param iconBitmap</div><div class="line"> * @param appPath</div><div class="line"> */</div><div class="line">public static void localAppIns(Context context,String appName,Bitmap iconBitmap,String appPath)&#123;</div><div class="line">       Intent intent = new Intent(Intent.ACTION_VIEW);	</div><div class="line">       intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">       intent.setDataAndType(Uri.fromFile(new File(appPath)),&quot;application/vnd.android.package-archive&quot;);</div><div class="line">       addShortcut(context,appName,iconBitmap,intent,false);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">public void startInstall(View view)&#123;</div><div class="line">		ShortcutUtil.localAppIns(mContext, &quot;安装应用&quot;, R.drawable.demo, Environment.getExternalStorageDirectory().getAbsoluteFile()+File.separator+&quot;Download&quot;+&quot;nineapps.apk&quot;);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<ul>
<li>未成功的案例（动态创建快捷键，logo图片从网络加载）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public void startInstall(View view)&#123;</div><div class="line">		VolleyUtils.loadImage(mContext, &quot;http://www.pp3.cn/uploads/201608/20160801009.jpg&quot;, new MyImageListener() &#123;</div><div class="line">			</div><div class="line">			@Override</div><div class="line">			public void setImageBitmap(Bitmap bitmap) &#123;</div><div class="line">				T.showLong(mContext, &quot;下载完成&quot;);</div><div class="line">				image.setImageBitmap(bitmap);</div><div class="line">				ShortcutUtil.localAppIns(mContext, &quot;安装应用&quot;, bitmap, Environment.getExternalStorageDirectory().getAbsoluteFile()+File.separator+&quot;Download&quot;+&quot;nineapps.apk&quot;);</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">		</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p>测试发现快捷方式并没有创建，Bitmap必须是资源文件中BitmapDrawable转化过来的才会创建成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ShortcutUtil.localAppIns(mContext, &quot;安装应用&quot;, ((BitmapDrawable)getResources().getDrawable(R.drawable.demo)).getBitmap(), Environment.getExternalStorageDirectory().getAbsoluteFile()+File.separator+&quot;Download&quot;+&quot;nineapps.apk&quot;);</div></pre></td></tr></table></figure></p>
<h3 id="如果有以上问题的解决方案以及疑问，欢迎留言讨论。"><a href="#如果有以上问题的解决方案以及疑问，欢迎留言讨论。" class="headerlink" title="如果有以上问题的解决方案以及疑问，欢迎留言讨论。"></a>如果有以上问题的解决方案以及疑问，欢迎留言讨论。</h3><ul>
<li>快捷方式启动应用</li>
</ul>
<p>注意的是必须使用隐式启动的方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">private void setLauncherLogo()&#123;</div><div class="line">//隐式</div><div class="line">Intent intent = new Intent(&quot;com.javen.test&quot;);</div><div class="line">addShortcut(this,&quot;隐式启动&quot;,R.mipmap.ic_launcher,intent,false);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;activity android:name=&quot;.ui.MainActivity&quot;&gt;</div><div class="line"></div><div class="line">&lt;intent-filter&gt;</div><div class="line"></div><div class="line">&lt;action android:name=&quot;com.javen.test&quot;/&gt;&lt;!-- 自定义的action--&gt;</div><div class="line"></div><div class="line">&lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class="line"></div><div class="line">&lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class="line"></div><div class="line">&lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;&lt;!--必须加上这个，否则下面无法直接使用自定的action--&gt;</div><div class="line"></div><div class="line">&lt;/intent-filter&gt;</div><div class="line"></div><div class="line">&lt;/activity&gt;</div></pre></td></tr></table></figure>
<p>欢迎拍砖 项目参考地址：<a href="https://github.com/Javen205/Realm-Demo/tree/master/app/src/main/java/com/javen/demo/ui" target="_blank" rel="external">参考代码</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发之手机屏幕]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B9%8B%E6%89%8B%E6%9C%BA%E5%B1%8F%E5%B9%95/</url>
      <content type="html"><![CDATA[<ul>
<li>获取屏幕宽高</li>
<li>手机横竖屏的判断</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">public class ScreenUtils &#123;</div><div class="line"></div><div class="line">    public static int getWidth(Context context) &#123;</div><div class="line">        WindowManager manager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);</div><div class="line">        DisplayMetrics outMetrics = new DisplayMetrics();</div><div class="line">        manager.getDefaultDisplay().getMetrics(outMetrics);</div><div class="line"></div><div class="line">        return outMetrics.widthPixels;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static int getHeight(Context context) &#123;</div><div class="line">        WindowManager manager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);</div><div class="line">        DisplayMetrics outMetrics = new DisplayMetrics();</div><div class="line">        manager.getDefaultDisplay().getMetrics(outMetrics);</div><div class="line"></div><div class="line">        return outMetrics.heightPixels;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">public class ConfigUtils &#123;</div><div class="line"></div><div class="line">    public static boolean isOrientationPortrait(Context context) &#123;</div><div class="line">        if (context.getResources().getConfiguration().orientation ==</div><div class="line">                Configuration.ORIENTATION_PORTRAIT) &#123;</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static boolean isOrientationLandscape(Context context) &#123;</div><div class="line">        if (context.getResources().getConfiguration().orientation ==</div><div class="line">                Configuration.ORIENTATION_LANDSCAPE) &#123;</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发之调节屏幕的亮度]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B9%8B%E8%B0%83%E8%8A%82%E5%B1%8F%E5%B9%95%E4%BA%AE%E5%BA%A6/</url>
      <content type="html"><![CDATA[<p>屏幕亮度调节</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">//设置应用中的亮度 不保存</div><div class="line">    public void Brightness(View view)&#123;</div><div class="line">        boolean autoBrightness = BrightnessTools.isAutoBrightness(getContentResolver());</div><div class="line">        if (autoBrightness) &#123;</div><div class="line">            T.showLong(this, &quot;关闭自动调节亮度&quot;);</div><div class="line">            BrightnessTools.stopAutoBrightness(this);</div><div class="line">        &#125;</div><div class="line">        BrightnessTools.setBrightness(this, 255);</div><div class="line">        T.showLong(this, &quot;亮度已经设置为了最大&quot;);</div><div class="line">    &#125;</div><div class="line">    //获取当前亮度 并设置最大的亮度保存</div><div class="line">    public void saveBrightness(View view)&#123;</div><div class="line">        int screenBrightness = BrightnessTools.getScreenBrightness(this);</div><div class="line">        T.showLong(this, &quot;当前屏幕亮度为：&quot;+screenBrightness);</div><div class="line">        BrightnessTools.saveBrightness(getContentResolver(), 255);</div><div class="line">    &#125;</div><div class="line">    //开启关闭自动调节亮度</div><div class="line">    public void offAuto(View view)&#123;</div><div class="line">        boolean autoBrightness = BrightnessTools.isAutoBrightness(getContentResolver());</div><div class="line">        if (autoBrightness) &#123;</div><div class="line">            T.showLong(this, &quot;关闭自动调节亮度&quot;);</div><div class="line">            BrightnessTools.stopAutoBrightness(this);</div><div class="line">        &#125;else &#123;</div><div class="line">            T.showLong(this, &quot;开启自动调节亮度&quot;);</div><div class="line">            BrightnessTools.startAutoBrightness(this);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line">import android.app.Activity;</div><div class="line">import android.content.ContentResolver;</div><div class="line">import android.net.Uri;</div><div class="line">import android.provider.Settings;</div><div class="line">import android.provider.Settings.SettingNotFoundException;</div><div class="line">import android.util.Log;</div><div class="line">import android.view.WindowManager;</div><div class="line"></div><div class="line">/* Android的屏幕亮度好像在2.1+的时候提供了自动调节的功能，  </div><div class="line"> * 所以，如果当开启自动调节功能的时候， 我们进行调节好像是没有一点作用的，  </div><div class="line"> * 这点让我很是无语，结果只有进行判断，看是否开启了屏幕亮度的自动调节功能。  </div><div class="line"> */</div><div class="line">public class BrightnessTools &#123;</div><div class="line"></div><div class="line">    /** * 判断是否开启了自动亮度调节 */</div><div class="line"></div><div class="line">    public static boolean isAutoBrightness(ContentResolver aContentResolver) &#123;</div><div class="line">        boolean automicBrightness = false;</div><div class="line">        try &#123;</div><div class="line">            automicBrightness = Settings.System.getInt(aContentResolver,</div><div class="line">            Settings.System.SCREEN_BRIGHTNESS_MODE) == Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC;</div><div class="line">        &#125;catch (SettingNotFoundException e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return automicBrightness;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取屏幕的亮度</div><div class="line">     * @param activity</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static int getScreenBrightness(Activity activity) &#123;</div><div class="line">        int nowBrightnessValue = 0;</div><div class="line">        ContentResolver resolver = activity.getContentResolver();</div><div class="line">        try &#123;</div><div class="line">            nowBrightnessValue = android.provider.Settings.System.getInt(</div><div class="line">                    resolver, Settings.System.SCREEN_BRIGHTNESS);</div><div class="line">        &#125;catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return nowBrightnessValue;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 设置亮度</div><div class="line">     * @param activity</div><div class="line">     * @param brightness</div><div class="line">     */</div><div class="line">    public static void setBrightness(Activity activity, int brightness) &#123;</div><div class="line">        // Settings.System.putInt(activity.getContentResolver(),</div><div class="line"></div><div class="line">        // Settings.System.SCREEN_BRIGHTNESS_MODE,</div><div class="line"></div><div class="line">        // Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);</div><div class="line"></div><div class="line">        WindowManager.LayoutParams lp = activity.getWindow().getAttributes();</div><div class="line"></div><div class="line">        lp.screenBrightness = Float.valueOf(brightness) * (1f / 255f);</div><div class="line">        Log.d(&quot;lxy&quot;, &quot;set  lp.screenBrightness == &quot; + lp.screenBrightness);</div><div class="line"></div><div class="line">        activity.getWindow().setAttributes(lp);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 那么，能设置了，但是为什么还是会出现，设置了，没反映呢？</div><div class="line"></div><div class="line">    // 嘿嘿，那是因为，开启了自动调节功能了，那如何关闭呢？这才是最重要的：</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 停止自动亮度调节</div><div class="line">     * @param activity</div><div class="line">     */</div><div class="line">    public static void stopAutoBrightness(Activity activity) &#123;</div><div class="line"></div><div class="line">        Settings.System.putInt(activity.getContentResolver(),</div><div class="line"></div><div class="line">        Settings.System.SCREEN_BRIGHTNESS_MODE,</div><div class="line"></div><div class="line">        Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * 开启亮度自动调节 </div><div class="line">     * @param activity</div><div class="line">     */</div><div class="line">    public static void startAutoBrightness(Activity activity) &#123;</div><div class="line"></div><div class="line">        Settings.System.putInt(activity.getContentResolver(),</div><div class="line"></div><div class="line">        Settings.System.SCREEN_BRIGHTNESS_MODE,</div><div class="line"></div><div class="line">        Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 至此，应该说操作亮度的差不多都有了，结束！</div><div class="line">    // 哎，本来认为是应该结束了，但是悲剧得是，既然像刚才那样设置的话，只能在当前的activity中有作用，一段退出的时候，会发现毫无作用，悲剧，原来是忘记了保存了。汗！</div><div class="line">    /**</div><div class="line">     * 保存亮度设置状态</div><div class="line">     * @param resolver</div><div class="line">     * @param brightness</div><div class="line">     */</div><div class="line">    public static void saveBrightness(ContentResolver resolver, int brightness) &#123;</div><div class="line">        Uri uri = android.provider.Settings.System</div><div class="line">                .getUriFor(&quot;screen_brightness&quot;);</div><div class="line"></div><div class="line">        android.provider.Settings.System.putInt(resolver, &quot;screen_brightness&quot;,</div><div class="line">                brightness);</div><div class="line">        // resolver.registerContentObserver(uri, true, myContentObserver);</div><div class="line">        resolver.notifyChange(uri, null);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发之SD卡缓存目录]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B9%8BSD%E5%8D%A1%E7%BC%93%E5%AD%98%E7%9B%AE%E5%BD%95/</url>
      <content type="html"><![CDATA[<ul>
<li>读取某个文件夹中的所有Apk文件路径并打开安装页面</li>
<li>读取某文件夹下的所有apk文件</li>
<li>获取SD卡跟目录中的某个文件</li>
<li>弹出安装界面</li>
<li>卸载apk</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * </div><div class="line"> * @author Javen</div><div class="line"> *</div><div class="line"> */</div><div class="line">public class SDKUtil &#123;</div><div class="line">	private final static String TAG=SDKUtil.class.getSimpleName();</div><div class="line">	</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 读取某个文件夹中的所有Apk文件路径并打开安装页面</div><div class="line">	 * @param context</div><div class="line">	 * @param path</div><div class="line">	 */</div><div class="line">	 public static void readApkAndStart(Context context,String path)&#123;</div><div class="line">	    	List&lt;String&gt; listpath = readAllApkForPath(context, path);</div><div class="line">	    	if (listpath!=null &amp;&amp; listpath.size()&gt;0) &#123;</div><div class="line">	    		for (String string : listpath) &#123;</div><div class="line">	        		SDKUtil.openInstallView(context, string);</div><div class="line">	    		&#125;</div><div class="line">			&#125;else &#123;</div><div class="line">				L.e(&quot;xxxx-----&quot;, &quot;readApkAndStart null。。。。。。。&quot;);</div><div class="line">			&#125;</div><div class="line">	 &#125;</div><div class="line">	 /**</div><div class="line">     * 读取某文件夹下的所有apk文件</div><div class="line">     * @param context</div><div class="line">     * @param path</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static List&lt;String&gt; readAllApkForPath(Context context,String path)&#123;</div><div class="line">    	List&lt;String&gt; fileNameList=new ArrayList&lt;String&gt;();</div><div class="line">    	File dir;</div><div class="line">    	if (Parameter.isDebug) &#123;</div><div class="line">    		 dir = getSDir(context, path);</div><div class="line">		&#125;else &#123;</div><div class="line">			 dir = getDiskCacheDir(context, path);</div><div class="line">		&#125;</div><div class="line">    	</div><div class="line">    	if (dir.isDirectory()) &#123;</div><div class="line">			File[] files = dir.listFiles();</div><div class="line">			for (File file : files) &#123;</div><div class="line">				String filePath = file.getAbsolutePath();</div><div class="line">				if (filePath.endsWith(&quot;.apk&quot;)) &#123;</div><div class="line">					fileNameList.add(filePath);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			return fileNameList;</div><div class="line">		&#125;</div><div class="line">		return null;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 获取SD卡跟目录中的某个文件</div><div class="line">     * @param context</div><div class="line">     * @param uniqueName</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static File getSDir(Context context, String uniqueName) &#123;</div><div class="line">        boolean externalStorageAvailable = Environment</div><div class="line">                .getExternalStorageState().equals(Environment.MEDIA_MOUNTED);</div><div class="line">        String path = null;</div><div class="line">        if (externalStorageAvailable) &#123;</div><div class="line">        	path=Environment.getExternalStorageDirectory().getAbsolutePath();</div><div class="line">        &#125;</div><div class="line">        return new File(path + File.separator + uniqueName);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 获取缓存地址</div><div class="line">     * @param context</div><div class="line">     * @param uniqueName</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static File getDiskCacheDir(Context context, String uniqueName) &#123;</div><div class="line">        boolean externalStorageAvailable = Environment</div><div class="line">                .getExternalStorageState().equals(Environment.MEDIA_MOUNTED);</div><div class="line">        String cachePath;</div><div class="line">        if (externalStorageAvailable) &#123;</div><div class="line">            cachePath = context.getExternalCacheDir().getPath();</div><div class="line">           </div><div class="line">        &#125; else &#123;</div><div class="line">            cachePath = context.getCacheDir().getPath();</div><div class="line">        &#125;</div><div class="line">        L.i(TAG, cachePath);</div><div class="line">        return new File(cachePath + File.separator + uniqueName);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 弹出安装界面</div><div class="line">     * @param context </div><div class="line">     * @param pathString apk 路径</div><div class="line">     */</div><div class="line">    public static void openInstallView(Context context,String pathString)&#123;</div><div class="line">    	//启动安装界面</div><div class="line">//		Intent install = new Intent(Intent.ACTION_VIEW);</div><div class="line">//		install.setDataAndType(Uri.fromFile(new File(pathString)),</div><div class="line">//				&quot;application/vnd.android.package-archive&quot;);</div><div class="line">//		install.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">//		context.startActivity(install);</div><div class="line">    	ApkController.install(pathString, context);</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * 卸载apk</div><div class="line">     * @param context</div><div class="line">     * @param packageName</div><div class="line">     */</div><div class="line">    public static void uninstallApk(Context context, String packageName) &#123;  </div><div class="line">        Uri uri = Uri.parse(&quot;package:&quot; + packageName);  </div><div class="line">        Intent intent = new Intent(Intent.ACTION_DELETE, uri);  </div><div class="line">        context.startActivity(intent);  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Retrofit2+Rxjava+MVP实践]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Retrofit2+Rxjava+MVP%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<p>此博文根据前面两篇文章 <code>Android MVP 架构初试</code> <code>Android MVP 架构封装</code>  再结合主流框架<code>Retrofit2+Rxjava</code>来个实践</p>
<h3 id="源码地址RxMVP"><a href="#源码地址RxMVP" class="headerlink" title="源码地址RxMVP"></a><a href="https://github.com/Javen205/RxMVP" target="_blank" rel="external">源码地址RxMVP</a></h3><h3 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h3><p><img src="/images/public/MVP/MVP3.jpeg" alt=""></p>
<a id="more"></a> 
<h3 id="Retrofit2-Rxjava-封装"><a href="#Retrofit2-Rxjava-封装" class="headerlink" title="Retrofit2+Rxjava 封装"></a>Retrofit2+Rxjava 封装</h3><p>JuHeService 数据请求接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 请求示例：</div><div class="line"> * http://v.juhe.cn/dream/query</div><div class="line"> * q:梦境关键字，如：黄金 需要utf8 urlencode</div><div class="line"> * cid:指定分类，默认全部</div><div class="line"> * full: 是否显示详细信息，1:是 0:否，默认0</div><div class="line"> */</div><div class="line">public interface JuHeService &#123;</div><div class="line">    @GET(&quot;dream/query&quot;)</div><div class="line">    Observable&lt;HttpJuHeResult&lt;List&lt;JuHeDream&gt;&gt;&gt; getDreams(@QueryMap Map&lt;String, Object&gt; options);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>HttpJuHeMethods 聚合解梦封装的方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">public class HttpJuHeMethods &#123;</div><div class="line"></div><div class="line">    public static final String BASE_URL = &quot;http://v.juhe.cn/&quot;;</div><div class="line"></div><div class="line">    private static final int DEFAULT_TIMEOUT = 5;</div><div class="line"></div><div class="line">    private Retrofit retrofit;</div><div class="line"></div><div class="line">    private JuHeService juheService;</div><div class="line"></div><div class="line">    //构造方法私有</div><div class="line">    private HttpJuHeMethods() &#123;</div><div class="line">        //手动创建一个OkHttpClient并设置超时时间</div><div class="line">        OkHttpClient.Builder httpClientBuilder = new OkHttpClient.Builder();</div><div class="line">        httpClientBuilder.connectTimeout(DEFAULT_TIMEOUT, TimeUnit.SECONDS);</div><div class="line">        httpClientBuilder.addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY)).build();</div><div class="line"></div><div class="line">        retrofit = new Retrofit.Builder()</div><div class="line">                .client(httpClientBuilder.build())</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .baseUrl(BASE_URL)</div><div class="line">                .build();</div><div class="line"></div><div class="line">        juheService = retrofit.create(JuHeService.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //在访问HttpMethods时创建单例</div><div class="line">    private static class SingletonHolder&#123;</div><div class="line">        private static final HttpJuHeMethods INSTANCE = new HttpJuHeMethods();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //获取单例</div><div class="line">    public static HttpJuHeMethods getInstance()&#123;</div><div class="line">        return SingletonHolder.INSTANCE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用来统一处理Http的resultCode,并将HttpResult的Data部分剥离出来返回给subscriber</div><div class="line">     *</div><div class="line">     * @param &lt;T&gt; Subscriber真正需要的数据类型，也就是Data部分的数据类型</div><div class="line">     */</div><div class="line">    private class HttpResultFunc&lt;T&gt; implements Func1&lt;HttpJuHeResult&lt;T&gt;, T&gt; &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public T call(HttpJuHeResult&lt;T&gt; httpResult) &#123;</div><div class="line">            if (httpResult.getError_code() != 0) &#123;</div><div class="line">                throw new ApiException(httpResult.getError_code());</div><div class="line">            &#125;</div><div class="line">            return httpResult.getResult();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private &lt;T&gt; void toSubscribe(Observable&lt;T&gt; observable, Subscriber&lt;T&gt; subscriber)&#123;</div><div class="line">        observable.subscribeOn(Schedulers.io())</div><div class="line">                .unsubscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(subscriber);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用于获取聚合笑话的数据</div><div class="line">     * @param subscriber 由调用者传过来的观察者对象</div><div class="line">     * @param options 访问参数</div><div class="line">     */</div><div class="line">    public void getJokesByHttpResultMap(Subscriber&lt;List&lt;JuHeDream&gt;&gt; subscriber, Map&lt;String, Object&gt; options)&#123;</div><div class="line">//        juheService.getJokesByRxJavaHttpResult(options)</div><div class="line">//                .map(new HttpResultFunc&lt;JuHeDream&gt;())</div><div class="line">//                .subscribeOn(Schedulers.io())</div><div class="line">//                .unsubscribeOn(Schedulers.io())</div><div class="line">//                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">//                .subscribe(subscriber);</div><div class="line">        Observable&lt;List&lt;JuHeDream&gt;&gt; observable = juheService.getDreams(options)</div><div class="line">                .map(new HttpResultFunc&lt;List&lt;JuHeDream&gt;&gt;());</div><div class="line">        toSubscribe(observable,subscriber);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中包含异常的处理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">public class ApiException extends RuntimeException&#123;</div><div class="line">    public final static  int  TIME_MUST_10=209501;</div><div class="line">    public final static  int  TIME_OTHER=209502;</div><div class="line"></div><div class="line">    public ApiException(int resultCode) &#123;</div><div class="line">        this(getApiExceptionMessage(resultCode));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ApiException(String detailMessage) &#123;</div><div class="line">        super(detailMessage);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 由于服务器传递过来的错误信息直接给用户看的话，用户未必能够理解</div><div class="line">     * 需要根据错误码对错误信息进行一个转换，在显示给用户</div><div class="line">     * @param code</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    private static String getApiExceptionMessage(int code)&#123;</div><div class="line">        String message = &quot;&quot;;</div><div class="line">        switch (code) &#123;</div><div class="line">            case TIME_MUST_10:</div><div class="line">                message = &quot;必须为10位时间戳&quot;;</div><div class="line">                break;</div><div class="line">            case TIME_OTHER:</div><div class="line">                message = &quot;page、pagesize必须为int类型,time为10位时间戳&quot;;</div><div class="line">                break;</div><div class="line">            default:</div><div class="line">                message = &quot;未知错误&quot;;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        return message;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="BaseMvp封装"><a href="#BaseMvp封装" class="headerlink" title="BaseMvp封装"></a>BaseMvp封装</h3><p>请参考上篇文章 <code>Android MVP 架构封装</code></p>
<h3 id="Retrofit2-Rxjava-MVP实践"><a href="#Retrofit2-Rxjava-MVP实践" class="headerlink" title="Retrofit2+Rxjava+MVP实践"></a>Retrofit2+Rxjava+MVP实践</h3><p>MvpView </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">public interface MvpView extends BaseView &#123;</div><div class="line">     //ListView的初始化</div><div class="line">     void setListItem(List&lt;JuHeDream&gt; data);</div><div class="line">     //Toast 消息</div><div class="line">     void showMessage(String messgae);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MvpPresenter</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">public class MvpPresenter extends BasePresenter&lt;MvpView&gt; &#123;</div><div class="line">    private Context mContext;</div><div class="line">    private Subscriber subscriber;</div><div class="line">    private List&lt;JuHeDream&gt; mDatas;</div><div class="line"></div><div class="line">    public MvpPresenter(Context context) &#123;</div><div class="line">        this.mContext = context;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //获取数据</div><div class="line">    public void getData(String q) throws UnsupportedEncodingException &#123;</div><div class="line">        if (q.isEmpty()) &#123;</div><div class="line">            mView.showMessage(&quot;请输入解梦内容&quot;);</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        mView.showLoading();</div><div class="line">        getDream(q);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onItemClick(int position) &#123;</div><div class="line"></div><div class="line">        List&lt;String&gt; stringList = mDatas.get(position).getList();</div><div class="line"></div><div class="line">        StringBuffer sbf = new StringBuffer();</div><div class="line">        for (String s : stringList) &#123;</div><div class="line">            sbf.append(s).append(&quot;\n\n\n&quot;);</div><div class="line">        &#125;</div><div class="line">        new SweetAlertDialog(mContext)</div><div class="line">                .setTitleText(mDatas.get(position).getTitle())</div><div class="line">                .setContentText(sbf.toString())</div><div class="line">                .show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void getDream(String q) throws UnsupportedEncodingException &#123;</div><div class="line">        String content = URLDecoder.decode(q, &quot;utf-8&quot;);</div><div class="line">        Map&lt;String, Object&gt; options = new HashMap&lt;String, Object&gt;();</div><div class="line">        options.put(&quot;key&quot;, &quot;f86ed9f21931cd311deffada92b58ac7&quot;);</div><div class="line">        options.put(&quot;full&quot;, &quot;1&quot;);</div><div class="line">        options.put(&quot;q&quot;, content);</div><div class="line"></div><div class="line">        subscriber = new Subscriber&lt;List&lt;JuHeDream&gt;&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onCompleted() &#123;</div><div class="line">                mView.hideLoading();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                mView.hideLoading();</div><div class="line">                mView.showMessage(e.toString());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(List&lt;JuHeDream&gt; data) &#123;</div><div class="line">                for (JuHeDream  juheDream:data) &#123;</div><div class="line">                    Logger.e(juheDream.toString());</div><div class="line">                &#125;</div><div class="line">                mDatas = data;</div><div class="line">                mView.setListItem(mDatas);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        HttpJuHeMethods.getInstance().getJokesByHttpResultMap(subscriber,options);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void destory()&#123;</div><div class="line">        subscriber.unsubscribe();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>布局文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:orientation=&quot;vertical&quot;</div><div class="line">    tools:context=&quot;.view.MainActivity&quot;&gt;</div><div class="line"></div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=&quot;920px&quot;</div><div class="line">        android:layout_height=&quot;130px&quot;</div><div class="line">        android:layout_gravity=&quot;center_horizontal&quot;</div><div class="line">        android:layout_marginTop=&quot;20px&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot; &gt;</div><div class="line"></div><div class="line">        &lt;LinearLayout</div><div class="line">            android:layout_width=&quot;680px&quot;</div><div class="line">            android:layout_height=&quot;130px&quot;</div><div class="line">            android:background=&quot;@drawable/shape_query_normal_stroke&quot;</div><div class="line">            android:orientation=&quot;horizontal&quot; &gt;</div><div class="line"></div><div class="line">            &lt;ImageView</div><div class="line">                android:layout_width=&quot;57px&quot;</div><div class="line">                android:layout_height=&quot;70px&quot;</div><div class="line">                android:layout_gravity=&quot;center_vertical&quot;</div><div class="line">                android:layout_marginLeft=&quot;40px&quot;</div><div class="line">                android:src=&quot;@drawable/login_yanzhengma&quot;</div><div class="line">                android:text=&quot;设置密码&quot; /&gt;</div><div class="line"></div><div class="line">            &lt;View</div><div class="line">                android:layout_width=&quot;0.5px&quot;</div><div class="line">                android:layout_height=&quot;match_parent&quot;</div><div class="line">                android:layout_marginLeft=&quot;40px&quot;</div><div class="line">                android:background=&quot;@color/line&quot; /&gt;</div><div class="line"></div><div class="line">            &lt;EditText</div><div class="line">                android:id=&quot;@+id/id_dream_query&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;match_parent&quot;</div><div class="line">                android:layout_gravity=&quot;center_vertical&quot;</div><div class="line">                android:layout_marginLeft=&quot;13px&quot;</div><div class="line">                android:background=&quot;@null&quot;</div><div class="line">                android:hint=&quot;请输入解梦的内容&quot;</div><div class="line">                android:singleLine=&quot;true&quot;</div><div class="line">                android:textColor=&quot;@color/textcolor&quot;</div><div class="line">                android:textSize=&quot;40px&quot; /&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">        &lt;View</div><div class="line">            android:layout_width=&quot;20px&quot;</div><div class="line">            android:layout_height=&quot;match_parent&quot; /&gt;</div><div class="line"></div><div class="line">        &lt;Button</div><div class="line">            android:id=&quot;@+id/id_dream_btn&quot;</div><div class="line">            android:layout_width=&quot;0dp&quot;</div><div class="line">            android:layout_weight=&quot;1&quot;</div><div class="line">            android:layout_height=&quot;match_parent&quot;</div><div class="line">            android:background=&quot;@drawable/query&quot;</div><div class="line">            android:clickable=&quot;true&quot;</div><div class="line">            android:gravity=&quot;center&quot;</div><div class="line">            android:text=&quot;查询&quot;</div><div class="line">            android:textColor=&quot;@android:color/white&quot;</div><div class="line">            android:textSize=&quot;40px&quot; /&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">    &lt;ListView</div><div class="line">        android:id=&quot;@+id/id_dream_result&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:layout_marginTop=&quot;20dp&quot;</div><div class="line">         /&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>
<p>MainActivity</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line">public class MainActivity extends BaseMvpActivity&lt;MvpView, MvpPresenter&gt; implements MvpView, AdapterView.OnItemClickListener &#123;</div><div class="line"></div><div class="line">    @BindView(R.id.id_dream_query)</div><div class="line">    EditText dreamQuery;</div><div class="line">    @BindView(R.id.id_dream_btn)</div><div class="line">    Button dreamBtn;</div><div class="line">    @BindView(R.id.id_dream_result)</div><div class="line">    ListView listView;</div><div class="line"></div><div class="line">    private Context mContext;</div><div class="line">    MyAdapter myAdapter;</div><div class="line"></div><div class="line">    SweetAlertDialog pd;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mContext = this;</div><div class="line">        ButterKnife.bind(this);</div><div class="line">        initEvent();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    private void initEvent() &#123;</div><div class="line">        listView.setOnItemClickListener(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @OnClick(R.id.id_dream_btn)</div><div class="line">    public void onClick() &#123;</div><div class="line">        try &#123;</div><div class="line">            String q = dreamQuery.getText().toString();</div><div class="line">            presenter.getData(q);</div><div class="line">        &#125; catch (UnsupportedEncodingException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public MvpPresenter initPresenter() &#123;</div><div class="line">        return new MvpPresenter(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void setListItem(List&lt;JuHeDream&gt; data) &#123;</div><div class="line">        if (myAdapter == null)&#123;</div><div class="line">            myAdapter = new MyAdapter(mContext, data);</div><div class="line">        &#125;</div><div class="line">        if (listView.getAdapter() == null)&#123;</div><div class="line">            listView.setAdapter(myAdapter);</div><div class="line">        &#125;</div><div class="line">        myAdapter.refresh(data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showMessage(String messgae) &#123;</div><div class="line">        Toast.makeText(mContext, messgae, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showLoading() &#123;</div><div class="line">        if (pd == null) &#123;</div><div class="line">            pd = new SweetAlertDialog(mContext, SweetAlertDialog.PROGRESS_TYPE);</div><div class="line">            pd.getProgressHelper().setBarColor(Color.parseColor(&quot;#A5DC86&quot;));</div><div class="line">            pd.setTitleText(&quot;Loading&quot;);</div><div class="line">            pd.setCancelable(true);</div><div class="line">        &#125;</div><div class="line">        pd.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void hideLoading() &#123;</div><div class="line">        pd.hide();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onItemClick(AdapterView&lt;?&gt; adapterView, View view, int position, long id) &#123;</div><div class="line">        presenter.onItemClick(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDestroy() &#123;</div><div class="line">        presenter.destory();</div><div class="line">        super.onDestroy();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android MVP 构架封装]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%20MVP%20%E6%9E%B6%E6%9E%84%E5%B0%81%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>上一篇我们简单实现了一个<code>MVP</code>的构架，下面我们来做一个简单的封装使其使用更简单方便</p>
<h3 id="源码地址RxMVP分支Tag03"><a href="#源码地址RxMVP分支Tag03" class="headerlink" title="源码地址RxMVP分支Tag03"></a><a href="https://github.com/Javen205/RxMVP/tree/Tag03" target="_blank" rel="external">源码地址RxMVP分支Tag03</a></h3><h3 id="最终实现目录结构如下"><a href="#最终实现目录结构如下" class="headerlink" title="最终实现目录结构如下"></a>最终实现目录结构如下</h3><p><img src="/images/public/MVP/MVP2.png" alt=""><br><a id="more"></a> </p>
<h3 id="BasePresenter"><a href="#BasePresenter" class="headerlink" title="BasePresenter"></a>BasePresenter</h3><p>如果每一个Activity都需要做绑定和解绑操作就太麻烦了，现在我希望可以有一个通用的presenter来为我们添加view的绑定与销毁。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public abstract class BasePresenter&lt;T&gt; &#123;</div><div class="line">    public T mView;</div><div class="line"></div><div class="line">    public void attach(T mView)&#123;</div><div class="line">        this.mView = mView;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void dettach()&#123;</div><div class="line">        mView = null;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因为不能限定死传入的View，所以使用泛型来代替传入的对象。通过这个通用的presenter我就可以把原来的<code>MvpPresenter</code>简化成下面的样子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">public class NewMvpPresenter extends BasePresenter&lt;NewMvpView&gt; &#123;</div><div class="line">        private RequestBiz requestBiz;</div><div class="line">        private Handler mHandler;</div><div class="line"></div><div class="line">        public NewMvpPresenter() &#123;        </div><div class="line">            requestBiz = new RequestBizIml();</div><div class="line">            mHandler = new Handler(Looper.getMainLooper());</div><div class="line">        &#125;    </div><div class="line"></div><div class="line">        public void onResume()&#123;        </div><div class="line">            requestBiz.requestForData(new OnRequestListener() &#123;</div><div class="line">                @Override            </div><div class="line">                public void onSuccess(final List&lt;String&gt; data) &#123;</div><div class="line">                    //由于请求开启了新线程，所以用handler去更新界面</div><div class="line">                    mHandler.post(new Runnable() &#123;                    </div><div class="line">                      @Override                    </div><div class="line">                       public void run() &#123;                        </div><div class="line">                           mView.hideLoading();                        </div><div class="line">                           mView.setListItem(data);                    </div><div class="line">                        &#125;                </div><div class="line">                    &#125;);            </div><div class="line">                 &#125;            </div><div class="line"></div><div class="line">                 @Override            </div><div class="line">                 public void onFailed() &#123;                </div><div class="line">                     mView.showMessage(&quot;请求失败&quot;);            </div><div class="line">                 &#125;        </div><div class="line">            &#125;);    </div><div class="line">       &#125;   </div><div class="line"></div><div class="line">        public void onItemClick(int position)&#123;        </div><div class="line">              mView.showMessage(&quot;点击了item&quot;+position);     </div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="BaseView"><a href="#BaseView" class="headerlink" title="BaseView"></a>BaseView</h3><p>界面需要提供的UI方法中会有很多类似的UI方法，可以把它们提取到一个公共的父类接口中。比如提取显示loading界面和隐藏loading界面的方法，其他的view层接口就可以直接继承BaseView接口，不必重复的写显示和隐藏loading界面方法。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface BaseView &#123;</div><div class="line">    void showLoading();</div><div class="line">    void hideLoading();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="BaseMvpActivity"><a href="#BaseMvpActivity" class="headerlink" title="BaseMvpActivity"></a>BaseMvpActivity</h3><p>presenter绑定到activity和View的绑定和解绑操作是每个Activity都会去做的，同样这里我也希望能有一个父类来完成这个统一的操作。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">public abstract class BaseMvpActivity&lt;V,T extends BasePresenter&lt;V&gt;&gt; extends AppCompatActivity &#123;</div><div class="line"></div><div class="line">    public T presenter;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        presenter = initPresenter();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        super.onResume();</div><div class="line">        presenter.attach((V)this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDestroy() &#123;</div><div class="line">        presenter.dettach();</div><div class="line">        super.onDestroy();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public abstract T initPresenter();</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>同样使用泛型来提取通用的逻辑，presenter的初始化，以及view的绑定和解绑操作都提取到父类Activity中。向外部提供了一个 initPresenter(); 方法用来初始化presenter，如果想创建不同参数的构造函数都可以随意去创建。</p>
<h3 id="基于BaseMVP的栗子"><a href="#基于BaseMVP的栗子" class="headerlink" title="基于BaseMVP的栗子"></a>基于BaseMVP的栗子</h3><p>通过上面的base父类，对之前的例子进行优化，写一个更加好用的例子。</p>
<p>NewMvpView</p>
<ul>
<li>NewMvpView 继承BaseView接口，添加自己的初始化ListView和Toast信息方法<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface NewMvpView extends BaseView &#123;</div><div class="line">        void setListItem(List&lt;String&gt; data);</div><div class="line">        void showMessage(String message);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>NewMvpPresenter</p>
<ul>
<li>NewMvpPresenter 继承BasePresenter类，增加网络请求和处理点击事件的方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">public class NewMvpPresenter extends BasePresenter&lt;NewMvpView&gt; &#123;</div><div class="line">        private RequestBiz requestBiz;</div><div class="line">        private Handler mHandler;</div><div class="line"></div><div class="line">        public NewMvpPresenter() &#123;        </div><div class="line">            requestBiz = new RequestBizIml();</div><div class="line">            mHandler = new Handler(Looper.getMainLooper());</div><div class="line">        &#125;    </div><div class="line"></div><div class="line">        public void onResume()&#123;     </div><div class="line">            mView.showLoading();   </div><div class="line">            requestBiz.requestForData(new OnRequestListener() &#123;</div><div class="line">                @Override            </div><div class="line">                public void onSuccess(final List&lt;String&gt; data) &#123;</div><div class="line">                    //由于请求开启了新线程，所以用handler去更新界面</div><div class="line">                    mHandler.post(new Runnable() &#123;</div><div class="line">                      @Override                    </div><div class="line">                       public void run() &#123;                        </div><div class="line">                           mView.hideLoading();                        </div><div class="line">                           mView.setListItem(data);                    </div><div class="line">                        &#125;                </div><div class="line">                    &#125;);            </div><div class="line">                 &#125;            </div><div class="line"></div><div class="line">                 @Override            </div><div class="line">                 public void onFailed() &#123;                </div><div class="line">                     mView.showMessage(&quot;请求失败&quot;);            </div><div class="line">                 &#125;        </div><div class="line">            &#125;);    </div><div class="line">       &#125;   </div><div class="line"></div><div class="line">        public void onItemClick(int position)&#123;        </div><div class="line">              mView.showMessage(&quot;点击了item&quot;+position);     </div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>NewMvpActivity  最终的样子</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">public class NewMvpActivity extends BaseMvpActivity&lt;NewMvpView, NewMvpPresenter&gt; implements NewMvpView, AdapterView.OnItemClickListener &#123;</div><div class="line">    @BindView(R.id.mvp_listview)</div><div class="line">    ListView mvpListView;</div><div class="line"></div><div class="line">    MvpPresenter mvpPresenter;</div><div class="line">    SweetAlertDialog pd;</div><div class="line">    Context mContext;</div><div class="line"></div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mContext = this;</div><div class="line">        ButterKnife.bind(this);</div><div class="line">        mvpListView.setOnItemClickListener(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        super.onResume();</div><div class="line">        presenter.onResume();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public NewMvpPresenter initPresenter() &#123;</div><div class="line">        return new NewMvpPresenter();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) &#123;</div><div class="line">        presenter.onItemClick(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void setListItem(List&lt;String&gt; data) &#123;</div><div class="line">        ArrayAdapter adapter = new ArrayAdapter(this, android.R.layout.simple_list_item_1, data);</div><div class="line">        mvpListView.setAdapter(adapter);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showMessage(String message) &#123;</div><div class="line">        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showLoading() &#123;</div><div class="line">        if (pd == null) &#123;</div><div class="line">            pd = new SweetAlertDialog(mContext, SweetAlertDialog.PROGRESS_TYPE);</div><div class="line">            pd.getProgressHelper().setBarColor(Color.parseColor(&quot;#A5DC86&quot;));</div><div class="line">            pd.setTitleText(&quot;Loading&quot;);</div><div class="line">            pd.setCancelable(true);</div><div class="line">        &#125;</div><div class="line">        pd.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void hideLoading() &#123;</div><div class="line">        pd.hide();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android MVP 构架初试]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%20MVP%20%E6%9E%B6%E6%9E%84%E5%88%9D%E8%AF%95/</url>
      <content type="html"><![CDATA[<p>目前讨论<code>MVP</code>  <code>MVVM</code> 的架构也来越多，这种构架也很适合Android。研究MVP记录如下</p>
<h3 id="源码地址RxMVP分支Tag02"><a href="#源码地址RxMVP分支Tag02" class="headerlink" title="源码地址RxMVP分支Tag02"></a><a href="https://github.com/Javen205/RxMVP/tree/Tag02" target="_blank" rel="external">源码地址RxMVP分支Tag02</a></h3><h3 id="原有的MVC构架"><a href="#原有的MVC构架" class="headerlink" title="原有的MVC构架"></a>原有的MVC构架</h3><p>刚开始接触Android的时候会觉得Android的整个代码架构就是一个MVC。</p>
<ul>
<li>M : 业务层和模型层，相当与javabean和我们的业务请求代码</li>
<li>V : 视图层，对应Android的layout.xml布局文件</li>
<li>C : 控制层，对应于Activity中对于UI 的各种操作</li>
</ul>
<p>看起来MVC架构很清晰，但是实际的开发中，请求的业务代码往往被丢到了Activity里面，大家都知道layout.xml的布局文件只能提供默认的UI设置，所以开发中视图层的变化也被丢到了Activity里面，再加上Activity本身承担着控制层的责任。所以Activity达成了MVC集合的成就，最终我们的Activity就变得越来越难看，从几百行变成了几千行。维护的成本也越来越高</p>
<h3 id="新的MVP架构"><a href="#新的MVP架构" class="headerlink" title="新的MVP架构"></a>新的MVP架构</h3><ul>
<li>M : 还是业务层和模型层</li>
<li>V : 视图层的责任由Activity来担当</li>
<li>P : 新成员Prensenter 用来代理 C(control) 控制层</li>
</ul>
<p>MVP与MVC最大的不同，其实是Activity职责的变化，由原来的C (控制层) 变成了 V(视图层)，不再管控制层的问题，只管如何去显示。控制层的角色就由我们的新人 Presenter来担当，这种架构就解决了Activity过度耦合控制层和视图层的问题。</p>
<a id="more"></a> 
<h3 id="一个简单实践"><a href="#一个简单实践" class="headerlink" title="一个简单实践"></a>一个简单实践</h3><p><img src="/images/public/MVP/MVP1.png" alt=""></p>
<p>声明了一个接口，带有请求数据业务的方法</p>
<p>RequestBiz<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface RequestBiz &#123;</div><div class="line">    //请求数据业务</div><div class="line">    void requestForData(OnRequestListener listener);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>RequestBizIml</p>
<p>请求的实现类为了模拟网络请求，开启了一个会sleep 10秒的线程，然后装填请求的数据，通过OnRequestListener 接口回调出去，与我们平时开发的方式一致。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">public class RequestBizIml implements RequestBiz &#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void requestForData(final OnRequestListener listener) &#123;</div><div class="line"></div><div class="line">        new Thread(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                try &#123;</div><div class="line">                    Thread.sleep(1000*10);</div><div class="line">                    ArrayList&lt;String&gt; data = new ArrayList&lt;String&gt;();</div><div class="line">                    for(int i = 1 ; i&lt; 10 ; i++)&#123;</div><div class="line">                        data.add(&quot;item&quot;+i);</div><div class="line">                    &#125;</div><div class="line">                    if(null != listener)&#123;</div><div class="line">                        listener.onSuccess(data);</div><div class="line">                    &#125;</div><div class="line">                &#125;catch(Exception e)&#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;).start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>OnRequestListener</p>
<p>数据请求的回掉接口，声明了成功和失败的方法 。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public interface OnRequestListener &#123;</div><div class="line"></div><div class="line">    void onSuccess(List&lt;String&gt; data);</div><div class="line">    void onFailed();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>到此业务层完成，开始MVP的写法.</p>
<p>由于Activity变成了view层不再去控制界面，但是具体的界面的改变api其实还是由Activity来提供的，所以在写MVP之前需要思考，View层需要哪些方法。</p>
<ul>
<li>显示loading</li>
<li>隐藏loading</li>
<li>listview的初始化</li>
<li>弹出Toast消息</li>
</ul>
<p>MvpView </p>
<p>写MvpView之前接口需要想想界面有哪些交互，根据业务逻辑来确定</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public interface MvpView &#123;</div><div class="line">     //显示loading progress</div><div class="line">     void showLoading();</div><div class="line">     //隐藏loading progress</div><div class="line">     void hideLoading();</div><div class="line">     //ListView的初始化</div><div class="line">     void setListItem(List&lt;String&gt; data);</div><div class="line">     //Toast 消息</div><div class="line">     void showMessage(String messgae);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来开始写presenter层， 同样在写presenter之前想想控制层需要哪些方法</p>
<ul>
<li>网络请求</li>
<li>点击事件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">public class MvpPresenter &#123;</div><div class="line"></div><div class="line">    private MvpView mvpView;</div><div class="line">    RequestBiz requestBiz;</div><div class="line">    private Handler mHandler;</div><div class="line"></div><div class="line">    public MvpPresenter(MvpView mvpView) &#123;</div><div class="line">        this.mvpView = mvpView;</div><div class="line">        requestBiz = new RequestBizIml();</div><div class="line">        mHandler = new Handler(Looper.getMainLooper());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onResume()&#123;</div><div class="line">        mvpView.showLoading();</div><div class="line">        requestBiz.requestForData(new OnRequestListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onSuccess(final List&lt;String&gt; data) &#123;</div><div class="line">               //由于请求开启了新线程，所以用handler去更新界面</div><div class="line">                mHandler.post(new Runnable() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void run() &#123;</div><div class="line">                        mvpView.hideLoading();</div><div class="line">                        mvpView.setListItem(data);</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onFailed() &#123;</div><div class="line">                mvpView.showMessage(&quot;请求失败&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    public void onDestroy()&#123;</div><div class="line">        mvpView = null;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onItemClick(int position)&#123;</div><div class="line">        mvpView.showMessage(&quot;点击了item&quot; + position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Presenter完成，现在就剩下一件事，Activity中使用Presenter</p>
<p>完整版MVPActivity</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">public class MVPActivity extends AppCompatActivity implements MvpView, AdapterView.OnItemClickListener &#123;</div><div class="line">    @BindView(R.id.mvp_listview)</div><div class="line">    ListView mvpListView;</div><div class="line"></div><div class="line">    MvpPresenter mvpPresenter;</div><div class="line">    SweetAlertDialog pd;</div><div class="line">    Context mContext;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mContext= this;</div><div class="line">        ButterKnife.bind(this);</div><div class="line">        mvpListView.setOnItemClickListener(this);</div><div class="line">        mvpPresenter = new MvpPresenter(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        super.onResume();</div><div class="line">        mvpPresenter.onResume();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDestroy() &#123;</div><div class="line">        mvpPresenter.onDestroy();</div><div class="line">        super.onDestroy();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) &#123;</div><div class="line">        mvpPresenter.onItemClick(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showLoading() &#123;</div><div class="line">        if (pd == null) &#123;</div><div class="line">            pd = new SweetAlertDialog(mContext, SweetAlertDialog.PROGRESS_TYPE);</div><div class="line">            pd.getProgressHelper().setBarColor(Color.parseColor(&quot;#A5DC86&quot;));</div><div class="line">            pd.setTitleText(&quot;Loading&quot;);</div><div class="line">            pd.setCancelable(true);</div><div class="line">        &#125;</div><div class="line">        pd.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void hideLoading() &#123;</div><div class="line">        pd.hide();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void setListItem(List&lt;String&gt; data) &#123;</div><div class="line">        ArrayAdapter adapter = new ArrayAdapter(MVPActivity.this,</div><div class="line">                android.R.layout.simple_list_item_1, data);</div><div class="line">        mvpListView.setAdapter(adapter);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showMessage(String message) &#123;</div><div class="line">        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android极速开发一（Apk安装）]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%E4%B9%8BApk%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>安装之前判断是否有root权限，如果有root权限就静默安转，如果没有就利用意图进行安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * </div><div class="line"> * @author Javen</div><div class="line"> * @since 2016/05/24</div><div class="line"> */</div><div class="line">public class ApkController &#123;</div><div class="line">    /**</div><div class="line">     * 描述: 安装</div><div class="line">     */</div><div class="line">    public static boolean install(String apkPath,Context context)&#123;</div><div class="line">        // 先判断手机是否有root权限</div><div class="line">        if(hasRootPerssion())&#123;</div><div class="line">            // 有root权限，利用静默安装实现</div><div class="line">            return clientInstall(apkPath);</div><div class="line">        &#125;else&#123;</div><div class="line">            // 没有root权限，利用意图进行安装</div><div class="line">            File file = new File(apkPath);</div><div class="line">            if(!file.exists())</div><div class="line">                return false; </div><div class="line">            Intent intent = new Intent();</div><div class="line">            intent.setAction(&quot;android.intent.action.VIEW&quot;);</div><div class="line">            intent.addCategory(&quot;android.intent.category.DEFAULT&quot;);</div><div class="line">            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">            intent.setDataAndType(Uri.fromFile(file),&quot;application/vnd.android.package-archive&quot;);</div><div class="line">            context.startActivity(intent);</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 描述: 卸载</div><div class="line">     */</div><div class="line">    public static boolean uninstall(String packageName,Context context)&#123;</div><div class="line">        if(hasRootPerssion())&#123;</div><div class="line">            // 有root权限，利用静默卸载实现</div><div class="line">            return clientUninstall(packageName);</div><div class="line">        &#125;else&#123;</div><div class="line">            Uri packageURI = Uri.parse(&quot;package:&quot; + packageName);</div><div class="line">            Intent uninstallIntent = new Intent(Intent.ACTION_DELETE,packageURI);</div><div class="line">            uninstallIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">            context.startActivity(uninstallIntent);</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 判断手机是否有root权限</div><div class="line">     */</div><div class="line">    private static boolean hasRootPerssion()&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 静默安装</div><div class="line">     */</div><div class="line">    private static boolean clientInstall(String apkPath)&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.println(&quot;chmod 777 &quot;+apkPath);</div><div class="line">            PrintWriter.println(&quot;export LD_LIBRARY_PATH=/vendor/lib:/system/lib&quot;);</div><div class="line">            PrintWriter.println(&quot;pm install -r &quot;+apkPath);</div><div class="line">//          PrintWriter.println(&quot;exit&quot;);</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 静默卸载</div><div class="line">     */</div><div class="line">    private static boolean clientUninstall(String packageName)&#123;</div><div class="line">        PrintWriter PrintWriter = null;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">            process = Runtime.getRuntime().exec(&quot;su&quot;);</div><div class="line">            PrintWriter = new PrintWriter(process.getOutputStream());</div><div class="line">            PrintWriter.println(&quot;LD_LIBRARY_PATH=/vendor/lib:/system/lib &quot;);</div><div class="line">            PrintWriter.println(&quot;pm uninstall &quot;+packageName);</div><div class="line">            PrintWriter.flush();</div><div class="line">            PrintWriter.close();</div><div class="line">            int value = process.waitFor();  </div><div class="line">            return returnResult(value); </div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /**</div><div class="line">     * 启动app</div><div class="line">     * com.exmaple.client/.MainActivity</div><div class="line">     * com.exmaple.client/com.exmaple.client.MainActivity</div><div class="line">     */</div><div class="line">    public static boolean startApp(String packageName,String activityName)&#123;</div><div class="line">        boolean isSuccess = false;</div><div class="line">        String cmd = &quot;am start -n &quot; + packageName + &quot;/&quot; + activityName + &quot; \n&quot;;</div><div class="line">        Process process = null;</div><div class="line">        try &#123;</div><div class="line">           process = Runtime.getRuntime().exec(cmd);</div><div class="line">           int value = process.waitFor();  </div><div class="line">           return returnResult(value);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">          e.printStackTrace();</div><div class="line">        &#125; finally&#123;</div><div class="line">            if(process!=null)&#123;</div><div class="line">                process.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return isSuccess;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">     </div><div class="line">    private static boolean returnResult(int value)&#123;</div><div class="line">        // 代表成功  </div><div class="line">        if (value == 0) &#123;</div><div class="line">            return true;</div><div class="line">        &#125; else if (value == 1) &#123; // 失败</div><div class="line">            return false;</div><div class="line">        &#125; else &#123; // 未知情况</div><div class="line">            return false;</div><div class="line">        &#125;  </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 查询所有非系统app的信息</div><div class="line">     * @param mContext</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static List&lt;Map&lt;String, Object&gt;&gt; getAPPInstalled(Context mContext) &#123;</div><div class="line"></div><div class="line">        List&lt;Map&lt;String, Object&gt;&gt; listItems = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();</div><div class="line"></div><div class="line">        // 获取系统内的所有程序信息</div><div class="line">        Intent mainintent = new Intent(Intent.ACTION_MAIN, null);</div><div class="line">        mainintent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        List&lt;PackageInfo&gt; packageinfo = mContext.getPackageManager()</div><div class="line">                .getInstalledPackages(0);</div><div class="line"></div><div class="line">        int count = packageinfo.size();</div><div class="line">        for (int i = 0; i &lt; count; i++) &#123;</div><div class="line"></div><div class="line">            PackageInfo pinfo = packageinfo.get(i);</div><div class="line">            ApplicationInfo appInfo = pinfo.applicationInfo;</div><div class="line">            if ((appInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) &gt; 0) &#123;</div><div class="line">                // 系统程序 忽略</div><div class="line">            &#125; else &#123;</div><div class="line">                // 非系统程序</div><div class="line">                Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();</div><div class="line">                map.put(&quot;app_logo&quot;, pinfo.applicationInfo.loadIcon(mContext</div><div class="line">                        .getPackageManager()));</div><div class="line">                map.put(&quot;app_name&quot;, pinfo.applicationInfo.loadLabel(mContext</div><div class="line">                        .getPackageManager()));</div><div class="line">                map.put(&quot;package_name&quot;, pinfo.applicationInfo.packageName);</div><div class="line">                map.put(&quot;app_version_name&quot;, pinfo.versionName);</div><div class="line">                map.put(&quot;app_version_code&quot;, pinfo.versionCode);</div><div class="line"></div><div class="line">                listItems.add(map);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return listItems;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    /**</div><div class="line">     * 判断应用是否需要安装</div><div class="line">     * @param mContext</div><div class="line">     * @param packageName</div><div class="line">     * @param versionCode</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static boolean isInstalled(Context mContext,String packageName,int versionCode) &#123;</div><div class="line"></div><div class="line">        // 获取系统内的所有程序信息</div><div class="line">        Intent mainintent = new Intent(Intent.ACTION_MAIN, null);</div><div class="line">        mainintent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        List&lt;PackageInfo&gt; packageinfo = mContext.getPackageManager()</div><div class="line">                .getInstalledPackages(0);</div><div class="line"></div><div class="line">        int count = packageinfo.size();</div><div class="line">        String pn;</div><div class="line">        int vc;</div><div class="line">        for (int i = 0; i &lt; count; i++) &#123;</div><div class="line"></div><div class="line">            PackageInfo pinfo = packageinfo.get(i);</div><div class="line">            ApplicationInfo appInfo = pinfo.applicationInfo;</div><div class="line">            if ((appInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) &gt; 0) &#123;</div><div class="line">                // 系统程序 忽略</div><div class="line">            &#125; else &#123;</div><div class="line">                // 非系统程序</div><div class="line">                pn=pinfo.applicationInfo.packageName;</div><div class="line">                vc=pinfo.versionCode;</div><div class="line"></div><div class="line">                if (pn.equalsIgnoreCase(packageName) &amp;&amp; vc &gt;= versionCode) &#123;</div><div class="line">                    return true;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio 添加apt的支持]]></title>
      <url>http://javen205.oschina.io/2016/08/27/Android%20Studio%20%E6%B7%BB%E5%8A%A0apt%E7%9A%84%E6%94%AF%E6%8C%81/</url>
      <content type="html"><![CDATA[<p>我们在使用butterknife的时候需要apt的支持<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//注解绑定view</div><div class="line">compile &apos;com.jakewharton:butterknife:8.2.1&apos;</div><div class="line">apt &apos;com.jakewharton:butterknife-compiler:8.2.1&apos;</div></pre></td></tr></table></figure></p>
<p>默认的情况下gradle 是支持的，下面是解决方案</p>
<a id="more"></a> 
<ul>
<li>在项目工程级别build.gradle中添加</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">        classpath &apos;com.android.tools.build:gradle:2.1.2&apos;</div><div class="line">        //添加apt的支持</div><div class="line">        classpath &apos;com.neenbedankt.gradle.plugins:android-apt:1.8&apos;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<ul>
<li>在项目Module级别build.gradle中添加</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apply plugin: &apos;com.android.application&apos;</div><div class="line">apply plugin: &apos;android-apt&apos;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RxJava + Retrofit 完成网络请求]]></title>
      <url>http://javen205.oschina.io/2016/08/06/RxJava%20%E4%B8%8E%20Retrofit%20%E7%BB%93%E5%90%88%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>RxJava和Retrofit也火了一段时间了。一直没有时间研究这些新东西，最近有时间准备写个项目练手，打算先用Android写一个Demo出来，却发现Android的世界发生了天翻地覆的变化，EventBus和OKHttp3 都不见了，RxJava和Retrofit是什么东东？</p>
<p>如果你对Retrofit不熟悉就先看 <a href="https://github.com/square/retrofit" target="_blank" rel="external">官网的介绍</a></p>
<p>如果你对RxJava不熟悉请先看 <a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">官网介绍</a> 以及 <code>gank.io</code> <a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">给 Android 开发者的 RxJava 详解</a> 这篇文章 </p>
<p>当然也有很多RxJava与Retrofit的文章，我是参考<code>tough1985</code>大神的 <a href="http://gank.io/post/56e80c2c677659311bed9841" target="_blank" rel="external">这篇文章</a></p>
<p>学(好)习(记)就(性)要(不)做(如)个(烂)笔(笔)记(头)</p>
<a id="more"></a> 
<h3 id="RxJava如何与Retrofit结合"><a href="#RxJava如何与Retrofit结合" class="headerlink" title="RxJava如何与Retrofit结合"></a>RxJava如何与Retrofit结合</h3><h2 id="本文实现的目标"><a href="#本文实现的目标" class="headerlink" title="本文实现的目标"></a>本文实现的目标</h2><ol>
<li>RxJava如何与Retrofit结合</li>
<li>相同格式的Http请求数据该如何封装</li>
<li>相同格式的Http请求数据统一进行预处理</li>
<li>如何取消一个Http请求 – 观察者之间的对决，Oberver VS Subscriber</li>
<li>一个需要ProgressDialog的Subscriber该有的样子</li>
</ol>
<h2 id="添加依赖包"><a href="#添加依赖包" class="headerlink" title="添加依赖包"></a>添加依赖包</h2><p>先贴出<code>build.gradle</code>文件的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile fileTree(include: [&apos;*.jar&apos;], dir: &apos;libs&apos;)</div><div class="line">    testCompile &apos;junit:junit:4.12&apos;</div><div class="line">    compile &apos;com.android.support:appcompat-v7:23.3.0&apos;</div><div class="line">    compile &apos;com.android.support:support-v4:23.3.0&apos;</div><div class="line">    compile &apos;com.android.support:recyclerview-v7:23.3.0&apos;</div><div class="line">    //日志</div><div class="line">    compile &apos;com.orhanobut:logger:1.15&apos;</div><div class="line">    //广告</div><div class="line">    compile &apos;com.bigkoo:convenientbanner:2.0.5&apos;</div><div class="line">    compile &apos;com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar&apos;</div><div class="line">    //注解绑定view</div><div class="line">    compile &apos;com.jakewharton:butterknife:8.2.1&apos;</div><div class="line">    apt &apos;com.jakewharton:butterknife-compiler:8.2.1&apos;</div><div class="line">    //ViewPage指示器</div><div class="line">    compile &apos;com.astuetz:pagerslidingtabstrip:1.0.1&apos;</div><div class="line">    //rx系列</div><div class="line">    compile &apos;io.reactivex:rxjava:1.1.6&apos;</div><div class="line">    compile &apos;io.reactivex:rxandroid:1.2.1&apos;</div><div class="line">    compile &apos;com.squareup.retrofit2:retrofit:2.1.0&apos;</div><div class="line">    compile &apos;com.squareup.retrofit2:retrofit-adapters:2.1.0&apos;</div><div class="line">    compile &apos;com.squareup.retrofit2:adapter-rxjava:2.1.0&apos;</div><div class="line">    compile &apos;com.squareup.retrofit2:converter-gson:2.1.0&apos;</div><div class="line">    compile &apos;com.google.code.gson:gson:2.7&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>本文是基于<code>RxJava 1.1.6</code> 和 <code>Retrofit 2.1.0</code> 来进行的。 添加<code>rxandroid</code>是因为<code>rxjava</code>中的线程问题。</p>
<p>如需查看项目代码 –&gt; 代码地址:<br><code>https://github.com/Javen205/SmartCloud</code>  选择Tag1</p>
<h2 id="原生的Retrofit请求"><a href="#原生的Retrofit请求" class="headerlink" title="原生的Retrofit请求"></a>原生的Retrofit请求</h2><p>添加Retrofit 接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 请求示例：http://japi.juhe.cn/joke/content/list.from?</div><div class="line"> * key=您申请的KEY&amp;page=2&amp;pagesize=10&amp;sort=asc&amp;time=1418745237</div><div class="line"> */</div><div class="line">public interface JokeService &#123;</div><div class="line">    //Retrofit原生请求</div><div class="line">    @GET(&quot;content/list.from&quot;)</div><div class="line">    Call&lt;JokeEntity&gt; getJokes(@QueryMap Map&lt;String, Object&gt; options);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Fragment 或者Activity中 调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * </div><div class="line"> * 原生的Retrofit请求</div><div class="line"> */</div><div class="line">private void getJokes(Map&lt;String, Object&gt; options) &#123;</div><div class="line"></div><div class="line">    String baseUrl=&quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">    Retrofit retrofit = new Retrofit.Builder()</div><div class="line">            .baseUrl(baseUrl)</div><div class="line">            .addConverterFactory(GsonConverterFactory.create())</div><div class="line">            .build();</div><div class="line"></div><div class="line">    JokeService jokeService = retrofit.create(JokeService.class);</div><div class="line"></div><div class="line">    Call&lt;JokeEntity&gt; call = jokeService.getJokes(options);</div><div class="line">    call.enqueue(new Callback&lt;JokeEntity&gt;() &#123;</div><div class="line">        @Override</div><div class="line">        public void onResponse(Call&lt;JokeEntity&gt; call, Response&lt;JokeEntity&gt; response) &#123;</div><div class="line">            JokeEntity jokeEntity = response.body();</div><div class="line">            Logger.i(jokeEntity.toString());</div><div class="line">            if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                    Logger.i(subject.toString());</div><div class="line">                &#125;</div><div class="line">                textview.setText(data.get(0).toString());</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onFailure(Call&lt;JokeEntity&gt; call, Throwable t) &#123;</div><div class="line">            textview.setText(t.getMessage());</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="添加Rxjava"><a href="#添加Rxjava" class="headerlink" title="添加Rxjava"></a>添加Rxjava</h2><p>Retrofit本身对Rxjava提供了支持。</p>
<p>添加Retrofit对Rxjava的支持需要在Gradle文件中添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile &apos;io.reactivex:rxjava:1.1.6&apos;</div></pre></td></tr></table></figure>
<p>上文中已经添加</p>
<p>然后在创建Retrofit的过程中添加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Retrofit retrofit = new Retrofit.Builder()</div><div class="line">        .baseUrl(baseUrl)</div><div class="line">        .addConverterFactory(GsonConverterFactory.create())</div><div class="line">        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">        .build();</div></pre></td></tr></table></figure>
<p>这样一来我们定义的service返回值就不在是一个Call了，而是一个Observable</p>
<p>重新定义 JokeService 方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 请求示例：http://japi.juhe.cn/joke/content/list.from?</div><div class="line"> * key=您申请的KEY&amp;page=2&amp;pagesize=10&amp;sort=asc&amp;time=1418745237</div><div class="line"> */</div><div class="line">public interface JokeService &#123;</div><div class="line">    @GET(&quot;content/list.from&quot;)</div><div class="line">    Observable&lt;HttpJokeResult&lt;JokeEntity.Data&gt;&gt; getJokes(@QueryMap Map&lt;String, Object&gt; options);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>getJokes方法改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * Retrofit + RxJava</div><div class="line">     * @param options</div><div class="line">     */</div><div class="line">    private void getJokes2(Map&lt;String, Object&gt; options) &#123;</div><div class="line"></div><div class="line">        String baseUrl=&quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">        Retrofit retrofit = new Retrofit.Builder()</div><div class="line">                .baseUrl(baseUrl)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        JokeService jokeService = retrofit.create(JokeService.class);</div><div class="line"></div><div class="line"></div><div class="line">        jokeService.getJokesByRxJava(options)</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(new Subscriber&lt;JokeEntity&gt;() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void onCompleted() &#123;</div><div class="line">                        Toast.makeText(mContext, &quot;Get Top Joke Completed&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onError(Throwable e) &#123;</div><div class="line">                        textview.setText(e.getMessage());</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onNext(JokeEntity jokeEntity) &#123;</div><div class="line">                        Logger.i(jokeEntity.toString());</div><div class="line">                        if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                            List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                            for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                                Logger.i(subject.toString());</div><div class="line">                            &#125;</div><div class="line">                            textview.setText(data.get(0).toString());</div><div class="line">                        &#125;else &#123;</div><div class="line">                            textview.setText(jokeEntity.toString());</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>这样基本上就完成了Retrofit和Rxjava的结合，但是这样封装还是不太满意。</p>
<p>接下来我们把创建Retrofit的过程封装一下，然后希望Activity/Fargment创建Subscriber对象传进来。</p>
<h2 id="将请求过程进行封装"><a href="#将请求过程进行封装" class="headerlink" title="将请求过程进行封装"></a>将请求过程进行封装</h2><p>创建一个对象HttpMethods</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line">package com.javen.smartcloud.http;</div><div class="line"></div><div class="line">import com.javen.smartcloud.entity.HttpJokeResult;</div><div class="line">import com.javen.smartcloud.entity.JokeEntity;</div><div class="line"></div><div class="line">import java.util.Map;</div><div class="line">import java.util.concurrent.TimeUnit;</div><div class="line"></div><div class="line">import okhttp3.OkHttpClient;</div><div class="line">import retrofit2.Retrofit;</div><div class="line">import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;</div><div class="line">import retrofit2.converter.gson.GsonConverterFactory;</div><div class="line">import rx.Observable;</div><div class="line">import rx.Subscriber;</div><div class="line">import rx.android.schedulers.AndroidSchedulers;</div><div class="line">import rx.functions.Func1;</div><div class="line">import rx.schedulers.Schedulers;</div><div class="line"></div><div class="line">public class HttpMethods &#123;</div><div class="line"></div><div class="line">    public static final String BASE_URL = &quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">    private static final int DEFAULT_TIMEOUT = 5;</div><div class="line"></div><div class="line">    private Retrofit retrofit;</div><div class="line"></div><div class="line">    private JokeService jokeService;</div><div class="line"></div><div class="line">    //构造方法私有</div><div class="line">    private HttpMethods() &#123;</div><div class="line">        //手动创建一个OkHttpClient并设置超时时间</div><div class="line">        OkHttpClient.Builder httpClientBuilder = new OkHttpClient.Builder();</div><div class="line">        httpClientBuilder.connectTimeout(DEFAULT_TIMEOUT, TimeUnit.SECONDS);</div><div class="line"></div><div class="line">        retrofit = new Retrofit.Builder()</div><div class="line">                .client(httpClientBuilder.build())</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .baseUrl(BASE_URL)</div><div class="line">                .build();</div><div class="line"></div><div class="line">        jokeService = retrofit.create(JokeService.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //在访问HttpMethods时创建单例</div><div class="line">    private static class SingletonHolder&#123;</div><div class="line">        private static final HttpMethods INSTANCE = new HttpMethods();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //获取单例</div><div class="line">    public static HttpMethods getInstance()&#123;</div><div class="line">        return SingletonHolder.INSTANCE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用来统一处理Http的resultCode,并将HttpResult的Data部分剥离出来返回给subscriber</div><div class="line">     *</div><div class="line">     * @param &lt;T&gt; Subscriber真正需要的数据类型，也就是Data部分的数据类型</div><div class="line">     */</div><div class="line">    private class HttpResultFunc&lt;T&gt; implements Func1&lt;HttpJokeResult&lt;T&gt;, T&gt; &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public T call(HttpJokeResult&lt;T&gt; httpResult) &#123;</div><div class="line">            if (httpResult.getError_code() != 0) &#123;</div><div class="line">                throw new ApiException(httpResult.getError_code());</div><div class="line">            &#125;</div><div class="line">            return httpResult.getResult();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private &lt;T&gt; void toSubscribe(Observable&lt;T&gt; observable, Subscriber&lt;T&gt; subscriber)&#123;</div><div class="line">        observable.subscribeOn(Schedulers.io())</div><div class="line">                .unsubscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(subscriber);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用于获取聚合笑话的数据</div><div class="line">     * @param subscriber 由调用者传过来的观察者对象</div><div class="line">     * @param options 访问参数</div><div class="line">     */</div><div class="line">    public void getJokes(Subscriber&lt;JokeEntity&gt; subscriber, Map&lt;String, Object&gt; options)&#123;</div><div class="line">//        jokeService.getJokesByRxJava(options)</div><div class="line">//                .subscribeOn(Schedulers.io())</div><div class="line">//                .unsubscribeOn(Schedulers.io())</div><div class="line">//                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">//                .subscribe(subscriber);</div><div class="line">        Observable&lt;JokeEntity&gt; observable = jokeService.getJokesByRxJava(options);</div><div class="line">        toSubscribe(observable,subscriber);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>用一个单例来封装该对象，在构造方法中创建Retrofit和对应的Service。 如果需要访问不同的基地址，那么你可能需要创建多个Retrofit对象，或者干脆根据不同的基地址封装不同的HttpMethod类。</p>
<p>再来看Activity/Fargment中的getJokes方法：  以下代码中的 getJokes3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div></pre></td><td class="code"><pre><div class="line">package com.javen.smartcloud.fragment;</div><div class="line"></div><div class="line">import android.view.LayoutInflater;</div><div class="line">import android.view.View;</div><div class="line">import android.view.ViewGroup;</div><div class="line">import android.widget.Button;</div><div class="line">import android.widget.TextView;</div><div class="line">import android.widget.Toast;</div><div class="line"></div><div class="line">import com.javen.smartcloud.R;</div><div class="line">import com.javen.smartcloud.entity.HttpJokeResult;</div><div class="line">import com.javen.smartcloud.entity.JokeEntity;</div><div class="line">import com.javen.smartcloud.http.HttpMethods;</div><div class="line">import com.javen.smartcloud.http.JokeService;</div><div class="line">import com.javen.smartcloud.subscribers.ProgressSubscriber;</div><div class="line">import com.orhanobut.logger.Logger;</div><div class="line"></div><div class="line">import java.util.HashMap;</div><div class="line">import java.util.List;</div><div class="line">import java.util.Map;</div><div class="line"></div><div class="line">import butterknife.BindView;</div><div class="line">import butterknife.ButterKnife;</div><div class="line">import butterknife.OnClick;</div><div class="line">import retrofit2.Call;</div><div class="line">import retrofit2.Callback;</div><div class="line">import retrofit2.Response;</div><div class="line">import retrofit2.Retrofit;</div><div class="line">import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;</div><div class="line">import retrofit2.converter.gson.GsonConverterFactory;</div><div class="line">import rx.Subscriber;</div><div class="line">import rx.android.schedulers.AndroidSchedulers;</div><div class="line">import rx.schedulers.Schedulers;</div><div class="line"></div><div class="line"></div><div class="line">public class FragmentOne extends BaseFragment &#123;</div><div class="line">    @BindView(R.id.id_joke_tv)</div><div class="line">    TextView textview;</div><div class="line">    @BindView(R.id.id_joke_btn)</div><div class="line">    Button jokeBtn;</div><div class="line"></div><div class="line">    Subscriber&lt;JokeEntity&gt; subscriber;</div><div class="line"></div><div class="line">    Subscriber&lt;HttpJokeResult&lt;JokeEntity.Data&gt;&gt; subscriber2;</div><div class="line"></div><div class="line">    Subscriber&lt;JokeEntity.Data&gt; subscriber3;</div><div class="line"></div><div class="line">    public FragmentOne() &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public View initView(LayoutInflater inflater, ViewGroup container) &#123;</div><div class="line">        View view = inflater.inflate(R.layout.fragment_one, container, false);</div><div class="line">        ButterKnife.bind(this, view);</div><div class="line">        return view;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void initData() &#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    @OnClick(R.id.id_joke_btn)</div><div class="line">    public void onClick() &#123;</div><div class="line">        long timeMillis = System.currentTimeMillis();</div><div class="line">        String time=String.valueOf(timeMillis).substring(0,10);</div><div class="line">        Logger.e(&quot;当前时间戳:&quot;+timeMillis+&quot;  前10位:&quot;+time);</div><div class="line">        Toast.makeText(mContext, &quot;点我&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        Map&lt;String,Object&gt; options = new HashMap&lt;String, Object&gt;();</div><div class="line">        options.put(&quot;key&quot;,&quot;bd19bfd8cb856884b5739b0267ec24c9&quot;);</div><div class="line">        options.put(&quot;sort&quot;,&quot;desc&quot;);</div><div class="line">        options.put(&quot;page&quot;,1);</div><div class="line">        options.put(&quot;pagesize&quot;,2);</div><div class="line">        options.put(&quot;time&quot;,time);</div><div class="line"></div><div class="line">//        getJokes1(options);</div><div class="line">//        getJokes2(options);</div><div class="line">//        getJokes3(options);</div><div class="line">    &#125;</div><div class="line">   </div><div class="line"></div><div class="line">    /**</div><div class="line">     * Retrofit + RxJava 封装版</div><div class="line">     * 3.添加HttpMethods</div><div class="line">     * @param options</div><div class="line">     */</div><div class="line">    private void getJokes3(Map&lt;String, Object&gt; options)&#123;</div><div class="line">        subscriber = new Subscriber&lt;JokeEntity&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onCompleted() &#123;</div><div class="line">                Toast.makeText(mContext, &quot;Get Top Joke Completed&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textview.setText(e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(JokeEntity jokeEntity) &#123;</div><div class="line">                Logger.i(jokeEntity.toString());</div><div class="line">                if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                    List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                    for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                        Logger.i(subject.toString());</div><div class="line">                    &#125;</div><div class="line">                    textview.setText(data.get(0).toString());</div><div class="line">                &#125;else &#123;</div><div class="line">                    textview.setText(jokeEntity.toString());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        HttpMethods.getInstance().getJokes(subscriber,options);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * Retrofit + RxJava</div><div class="line">     * @param options</div><div class="line">     */</div><div class="line">    private void getJokes2(Map&lt;String, Object&gt; options) &#123;</div><div class="line"></div><div class="line">        String baseUrl=&quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">        Retrofit retrofit = new Retrofit.Builder()</div><div class="line">                .baseUrl(baseUrl)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        JokeService jokeService = retrofit.create(JokeService.class);</div><div class="line"></div><div class="line"></div><div class="line">        jokeService.getJokesByRxJava(options)</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(new Subscriber&lt;JokeEntity&gt;() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void onCompleted() &#123;</div><div class="line">                        Toast.makeText(mContext, &quot;Get Top Joke Completed&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onError(Throwable e) &#123;</div><div class="line">                        textview.setText(e.getMessage());</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onNext(JokeEntity jokeEntity) &#123;</div><div class="line">                        Logger.i(jokeEntity.toString());</div><div class="line">                        if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                            List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                            for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                                Logger.i(subject.toString());</div><div class="line">                            &#125;</div><div class="line">                            textview.setText(data.get(0).toString());</div><div class="line">                        &#125;else &#123;</div><div class="line">                            textview.setText(jokeEntity.toString());</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 原生的Retrofit请求</div><div class="line">     */</div><div class="line">    private void getJokes1(Map&lt;String, Object&gt; options) &#123;</div><div class="line"></div><div class="line">        String baseUrl=&quot;http://japi.juhe.cn/joke/&quot;;</div><div class="line"></div><div class="line">        Retrofit retrofit = new Retrofit.Builder()</div><div class="line">                .baseUrl(baseUrl)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        JokeService jokeService = retrofit.create(JokeService.class);</div><div class="line"></div><div class="line">        Call&lt;JokeEntity&gt; call = jokeService.getJokes(options);</div><div class="line">        call.enqueue(new Callback&lt;JokeEntity&gt;() &#123;</div><div class="line">            @Override</div><div class="line">            public void onResponse(Call&lt;JokeEntity&gt; call, Response&lt;JokeEntity&gt; response) &#123;</div><div class="line">                JokeEntity jokeEntity = response.body();</div><div class="line">                Logger.i(jokeEntity.toString());</div><div class="line">                if(jokeEntity.getError_code()==0) &#123;</div><div class="line">                    List&lt;JokeEntity.Data.Subject&gt; data = jokeEntity.getResult().getData();</div><div class="line">                    for (JokeEntity.Data.Subject subject : data) &#123;</div><div class="line">                        Logger.i(subject.toString());</div><div class="line">                    &#125;</div><div class="line">                    textview.setText(data.get(0).toString());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onFailure(Call&lt;JokeEntity&gt; call, Throwable t) &#123;</div><div class="line">                textview.setText(t.getMessage());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onDestroy() &#123;</div><div class="line">        super.onDestroy();</div><div class="line">        if (subscriber!=null)&#123;</div><div class="line">            subscriber.unsubscribe();</div><div class="line">        &#125;</div><div class="line">        if (subscriber2!=null)&#123;</div><div class="line">            subscriber2.unsubscribe();</div><div class="line">        &#125;</div><div class="line">        if (subscriber3!=null)&#123;</div><div class="line">            subscriber3.unsubscribe();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="相同格式的Http请求数据该如何封装"><a href="#相同格式的Http请求数据该如何封装" class="headerlink" title="相同格式的Http请求数据该如何封装"></a>相同格式的Http请求数据该如何封装</h2><p>参考资料  <a href="https://www.zhihu.com/question/39182019" target="_blank" rel="external">RxJava+Retrofit，在联网返回后如何先进行统一的判断？</a></p>
<p>查看封装最终结果 <a href="https://github.com/Javen205/SmartCloud/tree/Tag2" target="_blank" rel="external">选择Tag2</a></p>
<p>实现聚合笑话加载刷新 <a href="https://github.com/Javen205/SmartCloud/tree/Tag3" target="_blank" rel="external">选择Tag3</a></p>
<p>实现干货网福利（图片）接口  <a href="https://github.com/Javen205/SmartCloud/tree/Tag4" target="_blank" rel="external">选择Tag4</a></p>
<h2 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h2><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/public/SmartCloud/joke.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/girls.jpg" alt="girls"></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/OnLongItemClick.jpg" alt="长按效果图"></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/OnItemClick.jpg" alt="点击效果图"></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/OnItemClick2.jpg" alt="点击效果图2"></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/loading.jpg" alt=""></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/load_error.jpg" alt=""></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/loading.jpg" alt=""></div><div class="group-picture-column" style="width: 12.5%;"><img src="/images/public/SmartCloud/load_error.jpg" alt=""></div></div></div></div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[从零开始使用Git]]></title>
      <url>http://javen205.oschina.io/2016/07/31/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8Git/</url>
      <content type="html"><![CDATA[<h2 id="此篇文章是共享资源做记录，我就不重复造轮子了"><a href="#此篇文章是共享资源做记录，我就不重复造轮子了" class="headerlink" title="此篇文章是共享资源做记录，我就不重复造轮子了"></a>此篇文章是共享资源做记录，我就不重复造轮子了</h2><h3 id="什么是Git，Git与GitHub以及码云的区别，如何安转，如何提交编辑代码"><a href="#什么是Git，Git与GitHub以及码云的区别，如何安转，如何提交编辑代码" class="headerlink" title="什么是Git，Git与GitHub以及码云的区别，如何安转，如何提交编辑代码"></a>什么是Git，Git与GitHub以及码云的区别，如何安转，如何提交编辑代码</h3><p>参考地址：<a href="http://stormzhang.com/github/2016/05/25/learn-github-from-zero1/" target="_blank" rel="external">http://stormzhang.com/github/2016/05/25/learn-github-from-zero1/</a></p>
<p>参考地址：<a href="http://blog.csdn.net/marktheone/article/category/6333885" target="_blank" rel="external">http://blog.csdn.net/marktheone/article/category/6333885</a></p>
<h3 id="Git下载地址："><a href="#Git下载地址：" class="headerlink" title="Git下载地址："></a>Git下载地址：</h3><p><a href="https://git-scm.com/download/" target="_blank" rel="external">https://git-scm.com/download/</a></p>
<h3 id="github-使用帮助文档"><a href="#github-使用帮助文档" class="headerlink" title="github 使用帮助文档"></a>github 使用帮助文档</h3><p><a href="https://help.github.com/articles/generating-an-ssh-key/" target="_blank" rel="external">https://help.github.com/articles/generating-an-ssh-key/</a></p>
<h3 id="git-oschina-使用帮助文档"><a href="#git-oschina-使用帮助文档" class="headerlink" title="git.oschina 使用帮助文档"></a>git.oschina 使用帮助文档</h3><p> <a href="http://git.oschina.net/oschina/git-osc/wikis/%E5%B8%AE%E5%8A%A9#ssh-keys" target="_blank" rel="external">http://git.oschina.net/oschina/git-osc/wikis/%E5%B8%AE%E5%8A%A9#ssh-keys</a></p>
<p><strong>Git 学习笔记</strong></p>
<a id="more"></a> 
<ul>
<li><p>配置身份认证</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --user.name=&quot;Javen205&quot;</div><div class="line">git config --user.email=&quot;javen205@163.com&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>创建代码仓库</p>
<p>进入项目目录执行</p>
<figure class="highlight plain"><figcaption><span>init ```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">  创建完成之后目录中就会生成一个隐藏的文件.git文件夹，这个文件夹就是用来记录本地所有的Git操作的。如果你想删除本地的代码库，只需要删除这个文件夹就行。使用 ```ls -al ``` 可以查看隐藏的文件</div><div class="line">  </div><div class="line">- 提交本地代码</div><div class="line"></div><div class="line">  只需要使用add和commit命令就可以了。add是用于把想提交的代码先添加进去，而commit则是真正地去执行添加操作。</div><div class="line">  </div><div class="line">  ``` git add AndroidManifest.xml``` 添加单个文件</div><div class="line">  </div><div class="line">  ``` git add src ``` 添加一个目录</div><div class="line">  </div><div class="line">  ``` git add .```  添加所有的文件 </div><div class="line">  </div><div class="line">  ``` git commit -m &quot;First commit&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>配置忽略文件</p>
<p>创建<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"> 例如：</div><div class="line">```# Built application files</div><div class="line">*.apk</div><div class="line">*.ap_</div><div class="line"></div><div class="line"># Files for the Dalvik VM</div><div class="line">*.dex</div><div class="line"></div><div class="line"># Java class files</div><div class="line">*.class</div><div class="line"></div><div class="line"># Generated files</div><div class="line">bin/</div><div class="line">gen/</div><div class="line"></div><div class="line"># Gradle files</div><div class="line">.gradle/</div><div class="line">build/</div><div class="line"></div><div class="line"># Local configuration file (sdk path, etc)</div><div class="line">local.properties</div><div class="line"></div><div class="line"># Proguard folder generated by Eclipse</div><div class="line">proguard/</div><div class="line"></div><div class="line"># Log Files</div><div class="line">*.log</div><div class="line"></div><div class="line"># Android Studio (InteliJ)</div><div class="line">.idea/</div><div class="line">/.idea/workspace.xml</div><div class="line">*.iml</div><div class="line">*.iws</div><div class="line">*.ipr</div><div class="line">/*/out</div><div class="line">/*/build</div><div class="line">/*/*/production</div><div class="line"></div><div class="line">#OSx</div><div class="line">.DS_Store</div></pre></td></tr></table></figure></p>
</li>
<li><p>查看上次修改的内容</p>
 <figure class="highlight plain"><figcaption><span>stauts```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">- 查看更改的内容</div><div class="line"></div><div class="line">  ``` git diff</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>撤销未提交的修改</p>
<figure class="highlight plain"><figcaption><span>checkout xxx.java```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">- 取消添加</div><div class="line">  </div><div class="line">  ``` git reset HEAD xxx.java</div></pre></td></tr></table></figure>
</li>
<li><p>查看提交记录</p>
<figure class="highlight plain"><figcaption><span>log ``` </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line">- 查看一条提交记录</div><div class="line"></div><div class="line">  ``` git log id -1``` </div><div class="line"> </div><div class="line"> - 查看一条提交的详细记录</div><div class="line"></div><div class="line">   ``` git log id -1 -p``` </div><div class="line">   </div><div class="line">- 删除</div><div class="line"></div><div class="line">   ``` git rm src/com/javen205/MainActivity.java</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>提交同步</p>
<p> <code>git push origin master</code></p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Contos/Linux 安装FTP详解]]></title>
      <url>http://javen205.oschina.io/2016/07/16/Centos%20%E5%AE%89%E8%A3%85FTP%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h3 id="安装FTP"><a href="#安装FTP" class="headerlink" title="安装FTP"></a>安装FTP</h3><h2 id="使用yum安装"><a href="#使用yum安装" class="headerlink" title="使用yum安装"></a>使用yum安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -yinstall ftp vsftpd</div></pre></td></tr></table></figure>
<h2 id="使用RPM安装"><a href="#使用RPM安装" class="headerlink" title="使用RPM安装"></a>使用RPM安装</h2><p>需要安装一下两个包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ftp-0.17-66.el7.x86_64</div><div class="line"></div><div class="line">vsftpd-3.0.2-9.el7.x86_64</div></pre></td></tr></table></figure>
<a id="more"></a> 
<p>另外需要安装db包，用来加密虚拟用户的账户信息（这个包在centos7中默认已经安装了）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -qf/usr/bin/db_load libdb-utils-5.3.21-17.el7_0.1.x86_64</div></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h2 id="创建Ftp文件保存路径"><a href="#创建Ftp文件保存路径" class="headerlink" title="创建Ftp文件保存路径"></a>创建Ftp文件保存路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir/ftp/open</div></pre></td></tr></table></figure>
<h2 id="添加测试文件"><a href="#添加测试文件" class="headerlink" title="添加测试文件"></a>添加测试文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">echo opentest &gt; /ftp/open/open.txt</div><div class="line"></div><div class="line">touch /ftp/open/anontest.txt</div></pre></td></tr></table></figure>
<h2 id="查看配置文件所在路径"><a href="#查看配置文件所在路径" class="headerlink" title="查看配置文件所在路径"></a>查看配置文件所在路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">rpm -qc vsftpd</div><div class="line"></div><div class="line">/etc/logrotate.d/vsftpd</div><div class="line">/etc/pam.d/vsftpd</div><div class="line">/etc/vsftpd/ftpusers</div><div class="line">/etc/vsftpd/user_list</div><div class="line">/etc/vsftpd/vsftpd.conf</div></pre></td></tr></table></figure>
<h2 id="备份原有配置文件"><a href="#备份原有配置文件" class="headerlink" title="备份原有配置文件"></a>备份原有配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp vsftpd.conf vsftpd.conf.origin</div></pre></td></tr></table></figure>
<h2 id="创建密码明文文件"><a href="#创建密码明文文件" class="headerlink" title="创建密码明文文件"></a>创建密码明文文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/vsftpd/vftpuser.txt</div></pre></td></tr></table></figure>
<p>添加如下类容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">javen</div><div class="line">javen123</div><div class="line">test</div><div class="line">test123</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：基数行是用户名；偶数行是密码</p>
</blockquote>
<h2 id="根据明文创建密码DB文件"><a href="#根据明文创建密码DB文件" class="headerlink" title="根据明文创建密码DB文件"></a>根据明文创建密码DB文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db_load -T -t hash -f /etc/vsftpd/vftpuser.txt  /etc/vsftpd/vftpuser.db</div></pre></td></tr></table></figure>
<h2 id="查看密码数据文件"><a href="#查看密码数据文件" class="headerlink" title="查看密码数据文件"></a>查看密码数据文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">file /etc/vsftpd/vftpuser.db</div></pre></td></tr></table></figure>
<p>输出结果如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/vsftpd/vftpuser.db: Berkeley DB (Hash, version 9, native byte-order)</div></pre></td></tr></table></figure>
<h2 id="创建vftpd的guest账户"><a href="#创建vftpd的guest账户" class="headerlink" title="创建vftpd的guest账户"></a>创建vftpd的guest账户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd -d /ftp/private -s /sbin/nologin vftpuser</div></pre></td></tr></table></figure>
<h2 id="编辑生成虚拟用户所需的PAM-配置文件"><a href="#编辑生成虚拟用户所需的PAM-配置文件" class="headerlink" title="编辑生成虚拟用户所需的PAM 配置文件"></a>编辑生成虚拟用户所需的PAM 配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/pam.d/vsftpd</div></pre></td></tr></table></figure>
<p>再将auth及account的所有配置行行均注释掉，添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">auth required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div><div class="line"></div><div class="line">account required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div></pre></td></tr></table></figure>
<p>如果你是64位系统则添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div><div class="line"></div><div class="line">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div></pre></td></tr></table></figure>
<p>如何查询系统的版本？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getconf LONG_BIT</div></pre></td></tr></table></figure>
<blockquote>
<p>如果没有填写出错将会出现以下异常：</p>
<p>530 Login incorrect错误</p>
<p>查看日志<br>tail -f /var/log/secure</p>
<p>发现 PAM unable to dlopen(/lib/security/pam_userdb.so): /lib/security/pam_userdb.so: cannot open shared object file: No such file or directory</p>
<p>原来pam_userdb.so在/lib64/security/pam_userdb.so</p>
</blockquote>
<h2 id="最终的配置"><a href="#最终的配置" class="headerlink" title="最终的配置"></a>最终的配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#%PAM-1.0</div><div class="line">#session    optional     pam_keyinit.so    force revoke</div><div class="line">#auth       required    pam_listfile.so item=user sense=deny file=/etc/vsftpd/ftpusers onerr=succeed</div><div class="line">#auth       required    pam_shells.so</div><div class="line">#auth       include     password-auth</div><div class="line">#account    include     password-auth</div><div class="line">#session    required     pam_loginuid.so</div><div class="line">#session    include     password-auth</div><div class="line">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div><div class="line">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</div></pre></td></tr></table></figure>
<h2 id="修改vsftpd-conf配置文件"><a href="#修改vsftpd-conf配置文件" class="headerlink" title="修改vsftpd.conf配置文件"></a>修改vsftpd.conf配置文件</h2><p>在最后添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">anon_root=/ftp/open</div><div class="line">virtual_use_local_privs=YES</div><div class="line">guest_enable=YES</div><div class="line">guest_username=vftpuser</div><div class="line">chroot_local_user=YES</div><div class="line">allow_writeable_chroot=YES</div></pre></td></tr></table></figure>
<p>详细配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line"># Example config file /etc/vsftpd/vsftpd.conf</div><div class="line">#</div><div class="line"># The default compiled in settings are fairly paranoid. This sample file</div><div class="line"># loosens things up a bit, to make the ftp daemon more usable.</div><div class="line"># Please see vsftpd.conf.5 for all compiled in defaults.</div><div class="line">#</div><div class="line"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</div><div class="line"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd&apos;s</div><div class="line"># capabilities.</div><div class="line">#</div><div class="line"># Allow anonymous FTP? (Beware - allowed by default if you comment this out).</div><div class="line">anonymous_enable=NO</div><div class="line">#</div><div class="line"># Uncomment this to allow local users to log in.</div><div class="line"># When SELinux is enforcing check for SE bool ftp_home_dir</div><div class="line">local_enable=YES</div><div class="line">#</div><div class="line"># Uncomment this to enable any form of FTP write command.</div><div class="line">write_enable=YES</div><div class="line">#</div><div class="line"># Default umask for local users is 077. You may wish to change this to 022,</div><div class="line"># if your users expect that (022 is used by most other ftpd&apos;s)</div><div class="line">local_umask=022</div><div class="line">#</div><div class="line"># Uncomment this to allow the anonymous FTP user to upload files. This only</div><div class="line"># has an effect if the above global write enable is activated. Also, you will</div><div class="line"># obviously need to create a directory writable by the FTP user.</div><div class="line"># When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access</div><div class="line">anon_upload_enable=YES</div><div class="line">#</div><div class="line"># Uncomment this if you want the anonymous FTP user to be able to create</div><div class="line"># new directories.</div><div class="line">anon_mkdir_write_enable=YES</div><div class="line">#</div><div class="line"># Activate directory messages - messages given to remote users when they</div><div class="line"># go into a certain directory.</div><div class="line">dirmessage_enable=YES</div><div class="line">#</div><div class="line"># Activate logging of uploads/downloads.</div><div class="line">xferlog_enable=YES</div><div class="line">#</div><div class="line"># Make sure PORT transfer connections originate from port 20 (ftp-data).</div><div class="line">connect_from_port_20=YES</div><div class="line">#</div><div class="line"># If you want, you can arrange for uploaded anonymous files to be owned by</div><div class="line"># a different user. Note! Using &quot;root&quot; for uploaded files is not</div><div class="line"># recommended!</div><div class="line">#chown_uploads=YES</div><div class="line">#chown_username=whoever</div><div class="line">#</div><div class="line"># You may override where the log file goes if you like. The default is shown</div><div class="line"># below.</div><div class="line">xferlog_file=/var/log/xferlog</div><div class="line">#</div><div class="line"># If you want, you can have your log file in standard ftpd xferlog format.</div><div class="line"># Note that the default log file location is /var/log/xferlog in this case.</div><div class="line">xferlog_std_format=YES</div><div class="line">#</div><div class="line"># You may change the default value for timing out an idle session.</div><div class="line">#idle_session_timeout=600</div><div class="line">#</div><div class="line"># You may change the default value for timing out a data connection.</div><div class="line">#data_connection_timeout=120</div><div class="line">#</div><div class="line"># It is recommended that you define on your system a unique user which the</div><div class="line"># ftp server can use as a totally isolated and unprivileged user.</div><div class="line">#nopriv_user=ftpsecure</div><div class="line">#</div><div class="line"># Enable this and the server will recognise asynchronous ABOR requests. Not</div><div class="line"># recommended for security (the code is non-trivial). Not enabling it,</div><div class="line"># however, may confuse older FTP clients.</div><div class="line">#async_abor_enable=YES</div><div class="line">#</div><div class="line"># By default the server will pretend to allow ASCII mode but in fact ignore</div><div class="line"># the request. Turn on the below options to have the server actually do ASCII</div><div class="line"># mangling on files when in ASCII mode.</div><div class="line"># Beware that on some FTP servers, ASCII support allows a denial of service</div><div class="line"># attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd</div><div class="line"># predicted this attack and has always been safe, reporting the size of the</div><div class="line"># raw file.</div><div class="line"># ASCII mangling is a horrible feature of the protocol.</div><div class="line">#ascii_upload_enable=YES</div><div class="line">#ascii_download_enable=YES</div><div class="line">#</div><div class="line"># You may fully customise the login banner string:</div><div class="line">ftpd_banner=Welcome to blah FTP service.</div><div class="line">#</div><div class="line"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</div><div class="line"># useful for combatting certain DoS attacks.</div><div class="line">#deny_email_enable=YES</div><div class="line"># (default follows)</div><div class="line">#banned_email_file=/etc/vsftpd/banned_emails</div><div class="line">#</div><div class="line"># You may specify an explicit list of local users to chroot() to their home</div><div class="line"># directory. If chroot_local_user is YES, then this list becomes a list of</div><div class="line"># users to NOT chroot().</div><div class="line"># (Warning! chroot&apos;ing can be very dangerous. If using chroot, make sure that</div><div class="line"># the user does not have write access to the top level directory within the</div><div class="line"># chroot)</div><div class="line">#chroot_local_user=YES</div><div class="line">#chroot_list_enable=YES</div><div class="line"># (default follows)</div><div class="line">#chroot_list_file=/etc/vsftpd/chroot_list</div><div class="line">#</div><div class="line"># You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by</div><div class="line"># default to avoid remote users being able to cause excessive I/O on large</div><div class="line"># sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume</div><div class="line"># the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.</div><div class="line">#ls_recurse_enable=YES</div><div class="line">#</div><div class="line"># When &quot;listen&quot; directive is enabled, vsftpd runs in standalone mode and</div><div class="line"># listens on IPv4 sockets. This directive cannot be used in conjunction</div><div class="line"># with the listen_ipv6 directive.</div><div class="line">listen=YES</div><div class="line">#</div><div class="line"># This directive enables listening on IPv6 sockets. By default, listening</div><div class="line"># on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6</div><div class="line"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</div><div class="line"># sockets. If you want that (perhaps because you want to listen on specific</div><div class="line"># addresses) then you must run two copies of vsftpd with two configuration</div><div class="line"># files.</div><div class="line"># Make sure, that one of the listen options is commented !!</div><div class="line">#listen_ipv6=YES</div><div class="line"></div><div class="line">pam_service_name=vsftpd</div><div class="line">userlist_enable=YES</div><div class="line">tcp_wrappers=YES</div><div class="line"></div><div class="line">anon_root=/home/ftp/open</div><div class="line">virtual_use_local_privs=YES</div><div class="line">guest_enable=YES</div><div class="line">guest_username=vftpuser</div><div class="line">chroot_local_user=YES</div><div class="line">allow_writeable_chroot=YES</div></pre></td></tr></table></figure>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start vsftpd</div></pre></td></tr></table></figure>
<h3 id="查看目前的状态"><a href="#查看目前的状态" class="headerlink" title="查看目前的状态"></a>查看目前的状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl status vsftpd</div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftp localhost</div></pre></td></tr></table></figure>
<p>输入用户名以及密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@iZ94hjirr10Z vsftpd]# ftp localhost</div><div class="line">Trying 127.0.0.1...</div><div class="line">Connected to localhost (127.0.0.1).</div><div class="line">220 Welcome to blah FTP service.</div><div class="line">Name (localhost:root): javen</div><div class="line">331 Please specify the password.</div><div class="line">Password:</div><div class="line">230 Login successful.</div><div class="line">Remote system type is UNIX.</div><div class="line">Using binary mode to transfer files.</div><div class="line">ftp&gt; ls</div><div class="line">227 Entering Passive Mode (127,0,0,1,38,217).</div><div class="line">150 Here comes the directory listing.</div><div class="line">-rw-r--r--    1 1000     1000        11641 Jul 13 07:22 00_1.jpg</div><div class="line">-rw-r--r--    1 1000     1000        13024 Jul 13 07:23 00_2.jpg</div><div class="line">-rw-r--r--    1 1000     1000        10989 Jul 13 07:23 00_3.jpg</div><div class="line">-rwxrwxrwx    1 1000     1000           10 Jul 05 06:14 ftptest.txt</div><div class="line">drwxrwxrwx    2 1000     1000        20480 Jul 16 06:15 images</div><div class="line">-rw-r--r--    1 0        0              12 Jul 05 06:13 ss</div><div class="line">226 Directory send OK.</div><div class="line">ftp&gt; bye</div><div class="line">221 Goodbye.</div></pre></td></tr></table></figure>
<p>以上是配置的详细教程，有问题请在评论区留言。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux防火墙]]></title>
      <url>http://javen205.oschina.io/2016/07/16/Linux%E9%98%B2%E7%81%AB%E5%A2%99/</url>
      <content type="html"><![CDATA[<h3 id="重启后生效"><a href="#重启后生效" class="headerlink" title="重启后生效"></a>重启后生效</h3><p>开启：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig iptables on</div></pre></td></tr></table></figure></p>
<p>关闭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig iptables off</div></pre></td></tr></table></figure></p>
<h3 id="即时生效，重启后失效"><a href="#即时生效，重启后失效" class="headerlink" title="即时生效，重启后失效"></a>即时生效，重启后失效</h3><p>开启：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables start</div></pre></td></tr></table></figure></p>
<p>关闭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables stop</div></pre></td></tr></table></figure></p>
<blockquote>
<p>需要说明的是对于Linux下的其它服务都可以用以上命令执行开启和关闭操作。<br><a id="more"></a> </p>
<h3 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h3></blockquote>
<p>在开启了防火墙时，做如下设置，开启相关端口，修改/etc/sysconfig/iptables 文件，添加以下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT </div><div class="line"></div><div class="line">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下启动与关闭Oracle]]></title>
      <url>http://javen205.oschina.io/2016/07/16/Linux%E4%B8%8B%E5%90%AF%E5%8A%A8%E4%B8%8E%E5%85%B3%E9%97%ADOracle/</url>
      <content type="html"><![CDATA[<h3 id="linux下启动oracle"><a href="#linux下启动oracle" class="headerlink" title="linux下启动oracle"></a>linux下启动oracle</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">su - oracle //切换到Oracle用户</div><div class="line">sqlplus /nolog //启动SQLPLUS</div><div class="line">conn /as sysdba //登陆到本机的数据库 </div><div class="line">startup //启动</div><div class="line">exit </div><div class="line">lsnrctl start  //启动监听</div><div class="line">exit</div></pre></td></tr></table></figure>
<h3 id="linux下关闭oracle"><a href="#linux下关闭oracle" class="headerlink" title="linux下关闭oracle"></a>linux下关闭oracle</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">su - oracle </div><div class="line"></div><div class="line">sqlplus /nolog </div><div class="line"></div><div class="line">conn /as sysdba </div><div class="line"></div><div class="line">shutdown immediate //关闭实例</div><div class="line"></div><div class="line">exit </div><div class="line"></div><div class="line">lsnrctl stop </div><div class="line"></div><div class="line">exit</div></pre></td></tr></table></figure>
<a id="more"></a> 
<h3 id="启动监听器"><a href="#启动监听器" class="headerlink" title="启动监听器"></a>启动监听器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsnrctl start</div></pre></td></tr></table></figure>
<h3 id="停止监听器"><a href="#停止监听器" class="headerlink" title="停止监听器"></a>停止监听器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsnrctl stop</div></pre></td></tr></table></figure>
<h3 id="查看监听器状态"><a href="#查看监听器状态" class="headerlink" title="查看监听器状态"></a>查看监听器状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsnrctl status</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下定时删除指定目下n天前的文件]]></title>
      <url>http://javen205.oschina.io/2016/07/10/Linux%E4%B8%8B%E5%AE%9A%E6%97%B6%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E7%9B%AE%E4%B8%8Bn%E5%A4%A9%E5%89%8D%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">* 2 * * * find /home/ftp/private/* ctime 1 -exec rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure>
<h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><p>表示每天两点删除<code>/home/ftp/private/</code>目录下一天前创建的所有文件，不删除文件夹<code>private</code>，如果这个文件夹也要删除的话用<code>* 2 * * * find /home/ftp/private ctime 1 -exec rm -rf {} \;</code></p>
<a id="more"></a> 
<p>其中</p>
<p><code>* 6 * * *</code></p>
<ul>
<li><p>第一个*号表示时间中的 分钟  取值范围：0-59</p>
</li>
<li><p>第二个*号表示时间中的 小时  取值范围：0-23</p>
</li>
<li><p>第三个*号表示一个月中的第几天，取值范围：1-31</p>
</li>
<li><p>第四个*号表示一年中的第几个月，取值范围：1-12</p>
</li>
<li><p>第五个*号表示一个星期中的第几天，以星期天开始依次的取值为0～7，0、7都表示星期天</p>
</li>
</ul>
<p><code>ctime</code> 表示创建时间，1 表示一天前.</p>
<blockquote>
<p>其实Linux中不存在文件创建时间，只有访问时间（<code>atime</code>）、修改时间（<code>mtime</code>）、状态改动时间（<code>ctime</code>） </p>
<p>可以通过命令 <code>stat + 文件路径</code> 查看时间</p>
</blockquote>
<h3 id="删除目录下的指定文件"><a href="#删除目录下的指定文件" class="headerlink" title="删除目录下的指定文件"></a>删除目录下的指定文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find 对应目录 -mtime +天数 -name &quot;文件名&quot; -exec rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure>
<h3 id="删除目录下的指定类型文件"><a href="#删除目录下的指定类型文件" class="headerlink" title="删除目录下的指定类型文件"></a>删除目录下的指定类型文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find 对应目录 -mtime +天数 -name &quot;*.jpg&quot; -exec rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure>
<p>栗子如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">* 2 * * * find /home/ftp/private/images -mtime +5 -name &quot;*.jpg&quot; -exec rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure></p>
<h3 id="启动定时任务"><a href="#启动定时任务" class="headerlink" title="启动定时任务"></a>启动定时任务</h3><p>首先要创建一个<code>crontab</code>,输入命令<code>crontab -e</code> 进入编辑界面，编写你的定时任务，即上面的命令。</p>
<p>也可以不使用<code>crontab -e</code> 命令。可以创建<code>crontab</code>配置文件，其他任何文本编辑器编写命令序列，比如文件名为<code>abc.cron</code>，然后使用命令：<code>crontab abc.cron</code>将命令序列添加到<code>crontab</code>中。</p>
<p>创建好<code>crontab</code>之后，就可以把上面的命令写道 <code>/etc/crontab</code>这个文件中<br>通过<code>crontab /etc/crontab</code> 命令启动这个定时任务，可以通过 <code>crontab -l</code> 命令查看当下的定时任务</p>
<h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><p>为保险起见，最好再重启服务，之后查看下crontab的服务状态<br>命令如下：</p>
<p>查看crontab服务状态：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service crond status</div></pre></td></tr></table></figure>
<p>启动服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service crond start</div></pre></td></tr></table></figure></p>
<p>关闭服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service crond stop</div></pre></td></tr></table></figure></p>
<p>重启服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service crond restart</div></pre></td></tr></table></figure></p>
<p>以上就是定时删除指定目下n天前的文件操作流程。</p>
<blockquote>
<p>如有问题请再评论区留言</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[美图欣赏(一)]]></title>
      <url>http://javen205.oschina.io/2016/07/04/%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/</url>
      <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/images/beautiful/3.jpeg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/4.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/6.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/9.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/10.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/13.jpeg" alt=""></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/images/beautiful/15.jpeg" alt=""></div></div></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux/Centos 局域网内文件传送]]></title>
      <url>http://javen205.oschina.io/2016/07/03/linux%20%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E6%96%87%E4%BB%B6%E4%BC%A0%E9%80%81/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Linux scp命令用于Linux之间复制文件和目录，具体如何使用这里好好介绍一下，从本地复制到远程、从远程复制到本地是两种使用方式。这里有具体举例</p>
</blockquote>
<p>==================</p>
<h3 id="Linux-scp-命令"><a href="#Linux-scp-命令" class="headerlink" title="Linux scp 命令"></a>Linux scp 命令</h3><p>==================</p>
<p>scp 可以在 2个 linux 主机间复制文件；</p>
<p>命令基本格式：</p>
<p>scp [可选参数] file_source file_target</p>
<p>======<br><a id="more"></a> </p>
<h2 id="从-本地-复制到-远程"><a href="#从-本地-复制到-远程" class="headerlink" title="从 本地 复制到 远程"></a>从 本地 复制到 远程</h2><p>======</p>
<h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><ul>
<li>命令格式：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_username@remote_ip:remote_folder</div></pre></td></tr></table></figure>
</li>
</ul>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_username@remote_ip:remote_file</div></pre></td></tr></table></figure></p>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_ip:remote_folder</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_ip:remote_file</div></pre></td></tr></table></figure>
<blockquote>
<p>第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；</p>
<p>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名；</p>
</blockquote>
<ul>
<li>例子：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /home/space/music/1.mp3 root@192.168.0.168:/home/root/others/music</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /home/space/music/1.mp3 root@192.168.0.168:/home/root/others/music/001.mp3</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /home/space/music/1.mp3 192.168.0.168:/home/root/others/music</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /home/space/music/1.mp3 192.168.0.168:/home/root/others/music/001.mp3</div></pre></td></tr></table></figure>
<h2 id="复制目录"><a href="#复制目录" class="headerlink" title="复制目录"></a>复制目录</h2><ul>
<li>命令格式:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -r local_folder remote_username@remote_ip:remote_folder</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -r local_folder remote_ip:remote_folder</div></pre></td></tr></table></figure></p>
<blockquote>
<p>第1个指定了用户名，命令执行后需要再输入密码；</p>
<p>第2个没有指定用户名，命令执行后需要输入用户名和密码；</p>
</blockquote>
<ul>
<li>例子：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp -r /home/space/music/ root@192.168.0.168:/home/root/others/</div><div class="line"></div><div class="line">scp -r /home/space/music/ 192.168.0.168:/home/root/others/</div></pre></td></tr></table></figure>
<blockquote>
<p>上面 命令 将 本地 music 目录 复制 到 远程 others 目录下，即复制后远程有 /home/root/others/music/ 目录</p>
</blockquote>
<p>======</p>
<h2 id="从-远程-复制到-本地"><a href="#从-远程-复制到-本地" class="headerlink" title="从 远程 复制到 本地"></a>从 远程 复制到 本地</h2><p>======</p>
<p>从 远程 复制到 本地，只要将 从 本地 复制到 远程 的命令 的 后2个参数 调换顺序 即可；</p>
<ul>
<li>例如：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp root@192.168.1.168:/home/root/others/music /home/space/music/1.mp3</div><div class="line"></div><div class="line">scp -r 192.168.1.168:/home/root/others/ /home/space/music/</div></pre></td></tr></table></figure>
<p>最简单的应用如下 :</p>
<p>scp 本地用户名 @IP 地址 : 文件名 1 远程用户名 @IP 地址 : 文件名 2</p>
<p>[ 本地用户名 @IP 地址 :] 可以不输入 , 可能需要输入远程用户名所对应的密码 .</p>
<p>可能有用的几个参数 :</p>
<p>-v 和大多数 linux 命令中的 -v 意思一样 , 用来显示进度 . 可以用来查看连接 , 认证 , 或是配置错误 .</p>
<p>-C 使能压缩选项 .</p>
<p>-P 选择端口 . 注意 -p 已经被 rcp 使用 .</p>
<p>-4 强行使用 IPV4 地址 .</p>
<p>-6 强行使用 IPV6 地址 .</p>
<p>Linux scp命令的使用方法应该可以满足大家对Linux文件和目录的复制使用了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux/Centos mysql 更改MySQL数据库目录位置]]></title>
      <url>http://javen205.oschina.io/2016/07/03/linux%20mysql%20%E6%9B%B4%E6%94%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%AE%E5%BD%95%E4%BD%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<blockquote>
<p>引言：MySQL默认的数据文件存储目录为/var/lib/mysql。假如要把目录移到/home/data下该如何操作呢？</p>
</blockquote>
<h3 id="1、home目录下建立data目录"><a href="#1、home目录下建立data目录" class="headerlink" title="1、home目录下建立data目录"></a>1、home目录下建立data目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /home</div><div class="line">mkdir data</div></pre></td></tr></table></figure>
<h3 id="2、把MySQL服务进程停掉"><a href="#2、把MySQL服务进程停掉" class="headerlink" title="2、把MySQL服务进程停掉"></a>2、把MySQL服务进程停掉</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqladmin -u root -p shutdown</div></pre></td></tr></table></figure>
<h3 id="3、把-var-lib-mysql整个目录移到-home-data"><a href="#3、把-var-lib-mysql整个目录移到-home-data" class="headerlink" title="3、把/var/lib/mysql整个目录移到/home/data"></a>3、把/var/lib/mysql整个目录移到/home/data</h3><a id="more"></a> 
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv /var/lib/mysql　/home/data/</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp  -R /var/lib/mysql　/home/data/</div></pre></td></tr></table></figure></p>
<p>这样就把MySQL的数据文件移动到了/home/data/mysql下</p>
<h3 id="4、找到my-cnf配置文件"><a href="#4、找到my-cnf配置文件" class="headerlink" title="4、找到my.cnf配置文件"></a>4、找到my.cnf配置文件</h3><p>如果/etc/目录下没有my.cnf配置文件，请到/usr/share/mysql/下找到*.cnf文件，拷贝其中一个到/etc/并改名为my.cnf)中。</p>
<p>命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># cp /usr/share/mysql/my-medium.cnf　/etc/my.cnf</div></pre></td></tr></table></figure></p>
<h3 id="5、编辑MySQL的配置文件-etc-my-cnf"><a href="#5、编辑MySQL的配置文件-etc-my-cnf" class="headerlink" title="5、编辑MySQL的配置文件/etc/my.cnf"></a>5、编辑MySQL的配置文件/etc/my.cnf</h3><p>为保证MySQL能够正常工作，需要指明mysql.sock文件的产生位置。修改socket=/var/lib/mysql/mysql.sock一行中等号右边的值为：/home/mysql/mysql.sock 。</p>
<p>(用vi工具编辑my.cnf文件，找到下列数据修改之)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi　 my.cnf</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># The MySQL server</div><div class="line">　　　 [mysqld]</div><div class="line">　　　 port　　　= 3306</div><div class="line">　　　 #socket　 = /var/lib/mysql/mysql.sock #（原内容，为了更稳妥用“#”注释此行）</div><div class="line">　　　 socket　 = /home/data/mysql/mysql.sock　　　#（加上此行）</div></pre></td></tr></table></figure>
<h3 id="6、修改MySQL启动脚本-etc-init-d-mysql有些版本在my-cnf文件"><a href="#6、修改MySQL启动脚本-etc-init-d-mysql有些版本在my-cnf文件" class="headerlink" title="6、修改MySQL启动脚本/etc/init.d/mysql有些版本在my.cnf文件"></a>6、修改MySQL启动脚本/etc/init.d/mysql有些版本在my.cnf文件</h3><p>最后，需要修改MySQL启动脚本/etc/init.d/mysql，把其中datadir=/var/lib/mysql一行中，等号右边的路径改成你现在的实际存放路径：home/data/mysql。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi　/etc/init.d/mysql</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#datadir=/var/lib/mysql　　　　#（注释此行）</div><div class="line">datadir=/home/data/mysql　#(加上此行）</div></pre></td></tr></table></figure>
<h3 id="7、重新启动MySQL服务"><a href="#7、重新启动MySQL服务" class="headerlink" title="7、重新启动MySQL服务"></a>7、重新启动MySQL服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/mysqld start</div></pre></td></tr></table></figure></p>
<p>如果工作正常移动就成功了，否则对照前面的7步再检查一下。</p>
<blockquote>
<p>注意目录的属主和权限。 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R mysql:mysql /home/data/mysql</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Centos7下使用yum安装mysql]]></title>
      <url>http://javen205.oschina.io/2016/07/03/centos7%E4%B8%8B%E4%BD%BF%E7%94%A8yum%E5%AE%89%E8%A3%85mysql/</url>
      <content type="html"><![CDATA[<blockquote>
<p>引言：CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源。</p>
</blockquote>
<h2 id="官网下载地址"><a href="#官网下载地址" class="headerlink" title="官网下载地址"></a>官网下载地址</h2><p>官网yum详细介绍地址：<a href="http://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="external">http://dev.mysql.com/downloads/repo/yum/</a></p>
<blockquote>
<p>找到对应的版本下载安装</p>
</blockquote>
<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><h3 id="下载mysql的repo源"><a href="#下载mysql的repo源" class="headerlink" title="下载mysql的repo源"></a>下载mysql的repo源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</div></pre></td></tr></table></figure>
<h3 id="安装mysql-community-release-el7-5-noarch-rpm包"><a href="#安装mysql-community-release-el7-5-noarch-rpm包" class="headerlink" title="安装mysql-community-release-el7-5.noarch.rpm包"></a>安装mysql-community-release-el7-5.noarch.rpm包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</div></pre></td></tr></table></figure>
<a id="more"></a> 
<h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-community-server</div></pre></td></tr></table></figure>
<p>成功安装之后重启mysql服务</p>
<p>查看mysql进程：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#ps -ef | grep mysqld </div><div class="line"># service mysqld restart 或者 # service mysql restart</div></pre></td></tr></table></figure>
<p>根据步骤安装就可以了，不过安装完成后，没有密码，需要重置密码。</p>
<h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># mysql -u root</div><div class="line">mysql &gt; use mysql;</div><div class="line">mysql&gt; set password for ‘root’@‘localhost’ = password(&apos;root123&apos;);</div><div class="line">mysql&gt;flush privileges;</div><div class="line">mysql&gt; exit</div></pre></td></tr></table></figure>
<h3 id="开放3306端口"><a href="#开放3306端口" class="headerlink" title="开放3306端口"></a>开放3306端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysconfig/iptables</div></pre></td></tr></table></figure>
<p>添加以下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</div></pre></td></tr></table></figure>
<h3 id="授权其他机器登陆"><a href="#授权其他机器登陆" class="headerlink" title="授权其他机器登陆"></a>授权其他机器登陆</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;mypassword&apos; WITH GRANT OPTION;</div><div class="line"></div><div class="line">FLUSH   PRIVILEGES;</div></pre></td></tr></table></figure>
<h3 id="mysql的几个重要目录"><a href="#mysql的几个重要目录" class="headerlink" title="mysql的几个重要目录"></a>mysql的几个重要目录</h3><ul>
<li><p>数据库目录
　　　</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/var/lib/mysql/</div></pre></td></tr></table></figure>
</li>
<li><p>配置文件</p>
<p>  /usr/share /mysql（mysql.server命令及配置文件）</p>
</li>
</ul>
<ul>
<li>相关命令<br>　<br>/usr/bin（mysqladmin mysqldump等命令）</li>
<li><p>启动脚本</p>
<p>  /etc/rc.d/init.d/（启动脚本文件mysql的目录）</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 安转JDK]]></title>
      <url>http://javen205.oschina.io/2016/07/03/Linux%E5%AE%89%E8%A3%85JDK/</url>
      <content type="html"><![CDATA[<h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><p>Ubuntu版本：ubuntukylin-14.04.1-desktop-amd64</p>
<p>JDK版本：jdk1.8.0_60</p>
<p>安装目录：/usr/local/development/jdk1.8.0_60</p>
<blockquote>
<p>其实不管什么版本配置的方法都一样</p>
</blockquote>
<h3 id="JDK8下载地址"><a href="#JDK8下载地址" class="headerlink" title="JDK8下载地址"></a>JDK8下载地址</h3><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>
<blockquote>
<p>或者去官网下载对应的版本</p>
</blockquote>
<p>下载如下图：</p>
<p><img src="http://images2015.cnblogs.com/blog/441423/201509/441423-20150901184232435-325800184.png" alt="image"><br><a id="more"></a> </p>
<h3 id="解压到安转目录"><a href="#解压到安转目录" class="headerlink" title="解压到安转目录"></a>解压到安转目录</h3><p><img src="http://images2015.cnblogs.com/blog/441423/201509/441423-20150901185118591-1444525076.png" alt="image"></p>
<h3 id="命令解压到对应的目录"><a href="#命令解压到对应的目录" class="headerlink" title="命令解压到对应的目录"></a>命令解压到对应的目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf jdk_xxx.tar.gz   /usr/local/devlopment</div></pre></td></tr></table></figure>
<h3 id="配置java的环境"><a href="#配置java的环境" class="headerlink" title="配置java的环境"></a>配置java的环境</h3><p>创建文件<code>/etc/profile.d/development.sh</code>，将下面的内容复制到该文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/local/development/jdk1.8.0_60</div><div class="line">export JRE_HOME=$JAVA_HOME/jre</div><div class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH</div><div class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</div></pre></td></tr></table></figure>
<h3 id="检查JDK是否安装成功"><a href="#检查JDK是否安装成功" class="headerlink" title="检查JDK是否安装成功"></a>检查JDK是否安装成功</h3><p>重启电脑（source /etc/profile）</p>
<p> <code>java -version</code> 检查JDK版本。</p>
<h2 id="技巧一"><a href="#技巧一" class="headerlink" title="技巧一"></a>技巧一</h2><p> <code>使用development.sh设置环境变量</code></p>
<p> 网络上很多关于设置JDK环境变量的方法，都是说修改/etc/environment，/etc/profile，~/,bash_profile等文件。</p>
<p>　　其实如果打开/etc/profile，在最后我们可以发现有这样一段代码：
　　</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">f [ -d /etc/profile.d ]; then</div><div class="line">  for i in /etc/profile.d/*.sh; do</div><div class="line">    if [ -r $i ]; then</div><div class="line">      . $i</div><div class="line">    fi</div><div class="line">  done</div><div class="line">  unset i</div><div class="line">fi</div></pre></td></tr></table></figure>
<blockquote>
<p>也就是说，在/etc/profile执行的最后，它会自动的执行/etc/profile.d目录下的所有可读的文件。这就是我们将设置JDK环境变量的工作放在/etc/profile.d/development.sh的原因，可以不用修改操作系统自带的/etc/profile内容，方便系统的移植。</p>
</blockquote>
<h2 id="技巧二"><a href="#技巧二" class="headerlink" title="技巧二"></a>技巧二</h2><p><code>将development.sh放到/usr/local/profile.d</code></p>
<blockquote>
<p>我的系统/usr/local挂载点是一个单独的磁盘分区，这样做的目的是方便系统的维护。/usr/local目录除了存放安装的软件以外，其实还可以将配置文件放在这个目录下面，例如上面的development.sh，这样重装系统的时候就不需要重做该文件。所以，可以新建目录/usr/local/profile.d，然后将development.sh复制到该新目录。至于怎么放到/etc/profile.d下面，我觉得可以采用符号链接的方式。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /ect/profile.d</div><div class="line">sudo ln -s /usr/local/profile.d/development.sh</div></pre></td></tr></table></figure>
<p>============================</p>
<p>拓展：配置tomcat自启动 </p>
<p>============================</p>
<p>开机启动程序的脚本要放在哪个目录下</p>
<p>Ubentu 目录为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/</div></pre></td></tr></table></figure></p>
<p>centos 目录为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/rc.d/rc.local</div></pre></td></tr></table></figure></p>
<p>在末尾添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/local/development/jdk1.8.0_60</div><div class="line">$JAVA_HOME/bin/startup.sh</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[捐赠、打赏列表]]></title>
      <url>http://javen205.oschina.io/2016/07/02/%E6%89%93%E8%B5%8F%E6%8D%90%E8%B5%A0%E5%88%97%E8%A1%A8/</url>
      <content type="html"><![CDATA[<hr>
<h2 id="捐赠、打赏列表"><a href="#捐赠、打赏列表" class="headerlink" title="捐赠、打赏列表"></a>捐赠、打赏列表</h2><table>
<thead>
<tr>
<th>金额</th>
<th>昵称</th>
<th>渠道</th>
<th>时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>  ￥50</td>
<td>cxx</td>
<td>支付宝捐赠</td>
<td>2016-06-29</td>
</tr>
<tr>
<td>  ￥20</td>
<td>ghostsf</td>
<td>微信捐赠</td>
<td>2016-06-20</td>
</tr>
<tr>
<td> ￥10</td>
<td>Az</td>
<td>微信捐赠</td>
<td>2016-06-20</td>
</tr>
</tbody>
</table>
<h3 id="感谢以上同学捐赠打赏，坚持原创技术分享，您的支持将鼓励我继续创作！"><a href="#感谢以上同学捐赠打赏，坚持原创技术分享，您的支持将鼓励我继续创作！" class="headerlink" title="感谢以上同学捐赠打赏，坚持原创技术分享，您的支持将鼓励我继续创作！"></a>感谢以上同学捐赠打赏，坚持原创技术分享，您的支持将鼓励我继续创作！</h3><h2 id="捐赠、打赏前5名可以添加友情链接，需要的请在下面评论区留言"><a href="#捐赠、打赏前5名可以添加友情链接，需要的请在下面评论区留言" class="headerlink" title="捐赠、打赏前5名可以添加友情链接，需要的请在下面评论区留言"></a>捐赠、打赏前5名可以添加友情链接，需要的请在下面评论区留言</h2><hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis 禁用危险指令]]></title>
      <url>http://javen205.oschina.io/2016/06/30/Redis%E7%A6%81%E7%94%A8%E5%8D%B1%E9%99%A9%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p><strong>禁用危险指令</strong></p>
<p>在redis.conf中，通过将指令禁用达到避免人为误操作的可能<br>rename-command 是表示重命名指令，如果是指令后是空字符串 “” ， 那么就表示禁用，如果填入其他值，就表示改名，另外还有一个更绝的方法，是redis在安装时，修改redis的源码src/redis.c中。<br>研发环境可以改名，但是生产环境建议禁用。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;flushdb&quot;,flushdbCommand,1,&quot;w&quot;,0,NULL,0,0,0,0,0&#125;,</div><div class="line">&#123;&quot;flushall&quot;,flushallCommand,1,&quot;w&quot;,0,NULL,0,0,0,0,0&#125;</div></pre></td></tr></table></figure></p>
<p>的部分，注释掉也可以解决。<br>主要的危险命令如下：<br>FLUSHALL 删除所有库中的key<br>FLUSHDB 删除当前库中所有的key<br>KEYS 匹配数据库中的key 如果是在生产库使用KEYS * 对性能影响非常大，研发或者测试环境可以保留<br>以下是具体使用方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rename-command FLUSHALL &quot;&quot;</div><div class="line">rename-command FLUSHDB &quot;&quot;</div><div class="line">rename-command KEYS &quot;&quot;</div></pre></td></tr></table></figure>
<p><a href="http://blog.csdn.net/chwshuang/article/details/48465501" target="_blank" rel="external">参考地址：http://blog.csdn.net/chwshuang/article/details/48465501</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis 配置认证密码]]></title>
      <url>http://javen205.oschina.io/2016/06/29/Redis%E9%85%8D%E7%BD%AE%E8%AE%A4%E8%AF%81%E5%AF%86%E7%A0%81/</url>
      <content type="html"><![CDATA[<p><strong>redis配置密码</strong></p>
<p>引导语</p>
<p>Redis安全设置<br>redis默认安装完成后，没有登录密码和安全设置，没有密码的系统安全隐患很大，另外如果发生一些误操作，比如FLUSHALL会导致整个库被清空，所以为了安全起见，需要设置reids的安全配置项。比如&lt;设置密码、禁用危险指令&gt;</p>
<a id="more"></a> 
<blockquote>
<p>说明我redis安装目录如下<br>/mnt/redis/redis-3.2.0</p>
<p>1、通过配置文件进行配置</p>
</blockquote>
<p>redis配置文件在/mnt/redis/redis-3.2.0/redis.conf中，打开配置文件找到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#requirepass foobared</div></pre></td></tr></table></figure>
<p>去掉行前的注释，并修改密码为所需的密码,保存文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">requirepass javen</div></pre></td></tr></table></figure>
<p>重启redis</p>
<blockquote>
<p>2、通过命令行进行配置</p>
</blockquote>
<p>后台启动服务端</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/redis-server &amp;</div></pre></td></tr></table></figure>
<p>启动客户端</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@localhost redis-3.2.0]# src/redis-cli </div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">1) &quot;sex&quot;</div><div class="line">2) &quot;age&quot;</div><div class="line">3) &quot;name&quot;</div><div class="line">127.0.0.1:6379&gt; config get requirepass </div><div class="line">1) &quot;requirepass&quot;</div><div class="line">2) &quot;&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<p>设置密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost redis-3.2.0]# src/redis-cli </div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">1) &quot;sex&quot;</div><div class="line">2) &quot;age&quot;</div><div class="line">3) &quot;name&quot;</div><div class="line">127.0.0.1:6379&gt; config get requirepass </div><div class="line">1) &quot;requirepass&quot;</div><div class="line">2) &quot;&quot;</div><div class="line">127.0.0.1:6379&gt; config set requirepass javen</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<p>==无需重启== 使用原来的无密码登录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost redis-3.2.0]# src/redis-cli </div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">(error) NOAUTH Authentication required.</div></pre></td></tr></table></figure>
<p>使用修改后的密码登录redis，可以执行相应操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@localhost redis-3.2.0]# src/redis-cli -h 127.0.0.1 -a javen</div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">1) &quot;sex&quot;</div><div class="line">2) &quot;age&quot;</div><div class="line">3) &quot;name&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<p>==尝试重启一下redis，用新配置的密码登录redis执行操作，发现新的密码失效，原因是redis重新使用了配置文件中的密码==</p>
<p>除了在登录时通过 -a 参数制定密码外，还可以登录时不指定密码，而在执行操作前进行认证。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; </div><div class="line">[root@localhost redis-3.2.0]# src/redis-cli </div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">(error) NOAUTH Authentication required.</div><div class="line">127.0.0.1:6379&gt; </div><div class="line">[root@localhost redis-3.2.0]# src/redis-cli -h 127.0.0.1 -p 6379  </div><div class="line">127.0.0.1:6379&gt; config get requirepass </div><div class="line">(error) NOAUTH Authentication required.</div><div class="line">127.0.0.1:6379&gt; auth javen</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; config get requirepass</div><div class="line">1) &quot;requirepass&quot;</div><div class="line">2) &quot;javen&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>3.master配置了密码，slave如何配置</p>
</blockquote>
<p>若master配置了密码则slave也要配置相应的密码参数否则无法进行正常复制的。<br>slave中配置文件内找到如下行，移除注释，修改密码即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#masterauth  mstpassword</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis 的三种启动方式]]></title>
      <url>http://javen205.oschina.io/2016/06/29/Redis%E7%9A%84%E4%B8%89%E7%A7%8D%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p><strong>Redis的三种启动方式</strong></p>
<p><strong>Part I. 直接启动</strong></p>
<blockquote>
<p>启动</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//加上`&amp;`号使redis以后台程序方式运行</div><div class="line">./redis-server &amp;</div></pre></td></tr></table></figure>
<blockquote>
<p>检测</p>
</blockquote>
<ul>
<li>检测后台进程是否存在</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -ef |grep redis</div></pre></td></tr></table></figure>
<ul>
<li>检测6379端口是否在监听</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -lntp | grep 6379</div></pre></td></tr></table></figure>
<ul>
<li>使用<code>redis-cli</code>客户端检测连接是否正常</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">./redis-cli</div><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">(empty list or set)</div><div class="line">127.0.0.1:6379&gt; set key &quot;hello world&quot;</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get key</div><div class="line">&quot;hello world&quot;</div></pre></td></tr></table></figure>
<a id="more"></a> 
<blockquote>
<p>停止</p>
</blockquote>
<ul>
<li>使用客户端</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-cli shutdown</div></pre></td></tr></table></figure>
<ul>
<li>因为Redis可以妥善处理SIGTERM信号，所以直接kill -9也是可以的<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">kill -9 PID</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>Part II. 通过指定配置文件启动</strong></p>
<p><strong>配置文件</strong> </p>
<p>可为redis服务启动指定配置文件，配置文件 redis.conf 在Redis根目录下。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#修改daemonize为yes，即默认以后台程序方式运行（还记得前面手动使用&amp;号强制后台运行吗）。</div><div class="line">daemonize no</div><div class="line">#可修改默认监听端口</div><div class="line">port 6379</div><div class="line">#修改生成默认日志文件位置</div><div class="line">logfile &quot;/home/javen/logs/redis.log&quot;</div><div class="line">#配置持久化文件存放位置</div><div class="line">dir /home/javen/data/redisData</div></pre></td></tr></table></figure>
<p><strong>启动时指定配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">redis-server ./redis.conf</div><div class="line">#如果更改了端口，使用`redis-cli`客户端连接时，也需要指定端口，例如：</div><div class="line">redis-cli -p 6379</div></pre></td></tr></table></figure>
<p>其启动停止同直接启动方式。配置文件是非常重要的配置工具，随着使用的逐渐深入将显得尤为重要，推荐在一开始就使用配置文件。</p>
<p><strong>Part III. 使用Redis启动脚本设置开机自启动</strong></p>
<p><strong>启动脚本</strong></p>
<p>推荐在生产环境中使用启动脚本方式启动redis服务。启动脚本 redis_init_script 位于位于Redis的 /utils/ 目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#大致浏览下该启动脚本，发现redis习惯性用监听的端口名作为配置文件等命名，我们后面也遵循这个约定。</div><div class="line">#redis服务器监听的端口</div><div class="line">REDISPORT=6379</div><div class="line">#服务端所处位置，在make install后默认存放与`/usr/local/bin/redis-server`，如果未make install则需要修改该路径，下同。</div><div class="line">EXEC=/usr/local/bin/redis-server</div><div class="line">#客户端位置</div><div class="line">CLIEXEC=/usr/local/bin/redis-cli</div><div class="line">#Redis的PID文件位置</div><div class="line">PIDFILE=/var/run/redis_$&#123;REDISPORT&#125;.pid</div><div class="line">#配置文件位置，需要修改</div><div class="line">CONF=&quot;/etc/redis/$&#123;REDISPORT&#125;.conf&quot;</div></pre></td></tr></table></figure>
<p><strong>配置环境</strong></p>
<ol>
<li>根据启动脚本要求，将修改好的配置文件以端口为名复制一份到指定目录。需使用root用户。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /etc/redis</div><div class="line">cp redis.conf /etc/redis/6379.conf</div></pre></td></tr></table></figure>
<ol>
<li>将启动脚本复制到/etc/init.d目录下，本例将启动脚本命名为redisd（通常都以d结尾表示是后台自启动服务）。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp redis_init_script /etc/init.d/redisd</div></pre></td></tr></table></figure>
<ol>
<li>设置为开机自启动</li>
</ol>
<p>此处直接配置开启自启动 chkconfig redisd on 将报错误： service redisd does not support chkconfig </p>
<p>参照 <a href="http://www.cnblogs.com/goodspeed/archive/2012/10/18/2729615.html" target="_blank" rel="external">此篇文章</a> ，在启动脚本开头添加如下两行注释以修改其运行级别：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line"># chkconfig:   2345 90 10</div><div class="line"># description:  Redis is a persistent key-value database</div><div class="line">#</div></pre></td></tr></table></figure>
<p> 再设置即可成功。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#设置为开机自启动服务器</div><div class="line">chkconfig redisd on</div><div class="line">#打开服务</div><div class="line">service redisd start</div><div class="line">#关闭服务</div><div class="line">service redisd stop</div></pre></td></tr></table></figure>
<p><a href="http://www.tuicool.com/articles/aQbQ3u" target="_blank" rel="external">参考文档 http://www.tuicool.com/articles/aQbQ3u</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis 安装]]></title>
      <url>http://javen205.oschina.io/2016/06/29/Redis%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="Redis-安装"><a href="#Redis-安装" class="headerlink" title="Redis 安装"></a><strong>Redis 安装</strong></h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p> <a href="http://redis.io/download" target="_blank" rel="external">官网下载地址</a></p>
<h2 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h2><blockquote>
<p> 目前最新文档版3.2.0</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://download.redis.io/releases/redis-3.2.0.tar.gz</div><div class="line">$ tar xzf redis-3.2.0.tar.gz</div><div class="line">$ cd redis-3.2.0</div><div class="line">$ make</div></pre></td></tr></table></figure>
<a id="more"></a> 
<p>==注意==</p>
<p>执行 编译过程中make报错，make[3]: gcc：命令未找到</p>
<p>==问题原因==:没有gcc编译器。需要安装gcc、g++编译器;如果还提示其他的命令未找到直接使用yum 安装即可</p>
<blockquote>
<p>执行安装</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y gcc g++ gcc-c++ make</div></pre></td></tr></table></figure>
<blockquote>
<p>再次执行 make</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/4523bd7a85406b4689e419df61d674ff/xmlnote/WEBRESOURCE15dd44a0559ed68431e3e1127c19159e/1186" alt="image"></p>
<blockquote>
<p>执行 检查是否安装成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make test</div></pre></td></tr></table></figure></p>
</blockquote>
<p>出现如下结果表示安装成功</p>
<p><img src="http://note.youdao.com/yws/public/resource/4523bd7a85406b4689e419df61d674ff/xmlnote/WEBRESOURCE471ec9627e018acc056cdd438c71c5b3/1193" alt="image"></p>
<blockquote>
<p>启动服务端 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/redis-server  或者 ./redis-server</div></pre></td></tr></table></figure>
<p>后者需要进入安装目录 /mnt/redis/redis-3.2.0/src</p>
<blockquote>
<p>启动客户端</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/redis-cli 或者./redis-cli</div></pre></td></tr></table></figure>
<p><img src="http://note.youdao.com/yws/public/resource/4523bd7a85406b4689e419df61d674ff/xmlnote/WEBRESOURCEe4de2fb679d2cf4285b64485ab227f5e/1210" alt="image"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://javen205.oschina.io/2016/06/28/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a> </p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极速开发微信公众号之微信扫码支付踩过的坑]]></title>
      <url>http://javen205.oschina.io/2016/05/18/%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98(%E6%A8%A1%E5%BC%8F%E4%B8%80)/</url>
      <content type="html"><![CDATA[<h1 id="微信扫码支付-模式一"><a href="#微信扫码支付-模式一" class="headerlink" title="微信扫码支付(模式一)"></a>微信扫码支付(模式一)</h1><p>官方文档地址：<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_4" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_4</a></p>
<p>项目开源地址：<a href="http://git.oschina.net/javen205/weixin_guide" target="_blank" rel="external">http://git.oschina.net/javen205/weixin_guide</a></p>
<blockquote>
<p>微信扫码支付遇到的问题</p>
</blockquote>
<ul>
<li>原生支付URL参数错误</li>
<li>回调接口URL有回调，但是接收不到参数</li>
<li>商户后台返回的数据字段结构不合法</li>
<li>获取商户订单信息超时或者商户返回的httpcode非200</li>
</ul>
<a id="more"></a>
<blockquote>
<p>解决问题</p>
</blockquote>
<ul>
<li>原生支付URL参数错误<br>这个错误一般会出现在获取到二维码URL之后生成二维码微信扫码的时候。如果你出现此类型的问题请检查</li>
</ul>
<p>1、生成二维码所需参数列表中参数是否有错误（区分大小写）<br>2、参数中签名sign时候正确 <a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=4_3" target="_blank" rel="external">签名算法 </a>  <a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=20_1" target="_blank" rel="external">签名校验工具</a></p>
<hr>
<blockquote>
<p>以下是生成二维码URL的代码</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * </div><div class="line"> * @author Javen</div><div class="line"> * 2016年5月14日</div><div class="line"> * 扫码支付获取二维码URL（模式一）</div><div class="line"> */</div><div class="line">public String getCodeUrl()&#123;</div><div class="line">    String url=&quot;weixin://wxpay/bizpayurl?sign=XXXXX&amp;appid=XXXXX&amp;mch_id=XXXXX&amp;product_id=XXXXX&amp;time_stamp=XXXXX&amp;nonce_str=XXXXX&quot;;</div><div class="line">    String product_id=&quot;001&quot;;</div><div class="line">    String timeStamp=Long.toString(System.currentTimeMillis() / 1000);</div><div class="line">    String nonceStr=Long.toString(System.currentTimeMillis());</div><div class="line">    Map&lt;String, String&gt; packageParams = new HashMap&lt;String, String&gt;();</div><div class="line">    packageParams.put(&quot;appid&quot;, appid);</div><div class="line">    packageParams.put(&quot;mch_id&quot;, partner);</div><div class="line">    packageParams.put(&quot;product_id&quot;,product_id);</div><div class="line">    packageParams.put(&quot;time_stamp&quot;, timeStamp);</div><div class="line">    packageParams.put(&quot;nonce_str&quot;, nonceStr);</div><div class="line">    String packageSign = PaymentKit.createSign(packageParams, paternerKey);</div><div class="line">    return StringUtils.replace(url, &quot;XXXXX&quot;, packageSign,appid,partner,product_id,timeStamp,nonceStr);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>回调接口URL有回调，但是接收不到参数<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Enumeration&lt;String&gt;  en=getParaNames();</div><div class="line"></div><div class="line">    while (en.hasMoreElements()) &#123;</div><div class="line">        Object o= en.nextElement();</div><div class="line">        System.out.println(o.toString()+&quot;=&quot;+getPara(o.toString()));</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>以上代码中输出的参数都为NULL</p>
<p>由于官方的文档描述不是很清楚，大家都以为回调请求将带productid和用户的openid等参数是以普通的参数一样，其实这个回调返回的参数是一个XML输入流<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">HttpServletRequest request = getRequest();</div><div class="line">         /**</div><div class="line">         * 获取用户扫描二维码后，微信返回的信息</div><div class="line">         */</div><div class="line">        InputStream inStream = request.getInputStream();</div><div class="line">        ByteArrayOutputStream outSteam = new ByteArrayOutputStream();</div><div class="line">        byte[] buffer = new byte[1024];</div><div class="line">        int len = 0;</div><div class="line">        while ((len = inStream.read(buffer)) != -1) &#123;</div><div class="line">            outSteam.write(buffer, 0, len);</div><div class="line">        &#125;</div><div class="line">        outSteam.close();</div><div class="line">        inStream.close();</div><div class="line">        String result  = new String(outSteam.toByteArray(),&quot;utf-8&quot;);</div></pre></td></tr></table></figure></p>
<p>result结果为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;</div><div class="line">&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;</div><div class="line">&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</div><div class="line">&lt;appid&gt;&lt;![CDATA[wx5e9360a3f46f64cd]]&gt;&lt;/appid&gt;</div><div class="line">&lt;mch_id&gt;&lt;![CDATA[1322117501]]&gt;&lt;/mch_id&gt;</div><div class="line">&lt;nonce_str&gt;&lt;![CDATA[lr3cCuO2KxMEBHIW]]&gt;&lt;/nonce_str&gt;</div><div class="line">&lt;sign&gt;&lt;![CDATA[842C1857EDD009D67519527BCF3AFA4C]]&gt;&lt;/sign&gt;</div><div class="line">&lt;result_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/result_code&gt;</div><div class="line">&lt;prepay_id&gt;&lt;![CDATA[wx201605151311568e801d50fb0555050106]]&gt;&lt;/prepay_id&gt;</div><div class="line">&lt;trade_type&gt;&lt;![CDATA[NATIVE]]&gt;&lt;/trade_type&gt;</div><div class="line">&lt;code_url&gt;&lt;![CDATA[weixin://wxpay/bizpayurl?pr=Gj3ZF2b]]&gt;&lt;/code_url&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure></p>
<p>如果返回的 return_code  result_code 不为SUCCESS 而回调的接口没有返回任何数据或者返回的数据不合法就会出现以下错误</p>
<ul>
<li>商户后台返回的数据字段结构不合法（返回的数据包格式不正确）</li>
<li>获取商户订单信息超时或者商户返回的httpcode非200（没有返回的数据包）</li>
</ul>
<p>如果以上都没有问题，就剩下最后一个步骤了  商户后台系统将prepay_id返回给微信支付系统  以下是详细的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div></pre></td><td class="code"><pre><div class="line">    /**</div><div class="line">     * @author Javen</div><div class="line">     * 2016年5月14日</div><div class="line">     * 扫码支付回调（模式一）</div><div class="line">     */          </div><div class="line">public void wxpay()&#123;</div><div class="line">        try &#123;</div><div class="line">            HttpServletRequest request = getRequest();</div><div class="line">             /**</div><div class="line">             * 获取用户扫描二维码后，微信返回的信息</div><div class="line">             */</div><div class="line">            InputStream inStream = request.getInputStream();</div><div class="line">            ByteArrayOutputStream outSteam = new ByteArrayOutputStream();</div><div class="line">            byte[] buffer = new byte[1024];</div><div class="line">            int len = 0;</div><div class="line">            while ((len = inStream.read(buffer)) != -1) &#123;</div><div class="line">                outSteam.write(buffer, 0, len);</div><div class="line">            &#125;</div><div class="line">            outSteam.close();</div><div class="line">            inStream.close();</div><div class="line">            String result  = new String(outSteam.toByteArray(),&quot;utf-8&quot;);</div><div class="line">            </div><div class="line">            System.out.println(&quot;callback&gt;&gt;&gt;&gt;&quot;+result);</div><div class="line">            /**</div><div class="line">             * 获取返回的信息内容中各个参数的值</div><div class="line">             */</div><div class="line">            Map&lt;String, String&gt; map = PaymentKit.xmlToMap(result);</div><div class="line">            for (String key : map.keySet()) &#123;</div><div class="line">                   System.out.println(&quot;key= &quot;+ key + &quot; and value= &quot; + map.get(key));</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            String appid=map.get(&quot;appid&quot;);</div><div class="line">            String openid = map.get(&quot;openid&quot;);</div><div class="line">            String mch_id = map.get(&quot;mch_id&quot;);</div><div class="line">            String is_subscribe = map.get(&quot;is_subscribe&quot;);</div><div class="line">            String nonce_str = map.get(&quot;nonce_str&quot;);</div><div class="line">            String product_id = map.get(&quot;product_id&quot;);</div><div class="line">            String sign = map.get(&quot;sign&quot;);</div><div class="line">            Map&lt;String, String&gt; packageParams = new HashMap&lt;String, String&gt;();</div><div class="line">            packageParams.put(&quot;appid&quot;, appid);</div><div class="line">            packageParams.put(&quot;openid&quot;, openid);</div><div class="line">            packageParams.put(&quot;mch_id&quot;,mch_id);</div><div class="line">            packageParams.put(&quot;is_subscribe&quot;,is_subscribe);</div><div class="line">            packageParams.put(&quot;nonce_str&quot;,nonce_str);</div><div class="line">            packageParams.put(&quot;product_id&quot;, product_id);</div><div class="line">            </div><div class="line">            String packageSign = PaymentKit.createSign(packageParams, paternerKey);</div><div class="line">            // 统一下单文档地址：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1</div><div class="line">            </div><div class="line">            Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();</div><div class="line">            params.put(&quot;appid&quot;, appid);</div><div class="line">            params.put(&quot;mch_id&quot;, mch_id);</div><div class="line">            params.put(&quot;body&quot;, &quot;测试扫码支付&quot;);</div><div class="line">            String out_trade_no=Long.toString(System.currentTimeMillis());</div><div class="line">            params.put(&quot;out_trade_no&quot;, out_trade_no);</div><div class="line">            int price=((int)(Float.valueOf(10)*100));</div><div class="line">            params.put(&quot;total_fee&quot;, price+&quot;&quot;);</div><div class="line">            params.put(&quot;attach&quot;, out_trade_no);</div><div class="line">            </div><div class="line">            String ip = IpKit.getRealIp(getRequest());</div><div class="line">            if (StrKit.isBlank(ip)) &#123;</div><div class="line">                ip = &quot;127.0.0.1&quot;;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            params.put(&quot;spbill_create_ip&quot;, ip);</div><div class="line">            params.put(&quot;trade_type&quot;, TradeType.NATIVE.name());</div><div class="line">            params.put(&quot;nonce_str&quot;, System.currentTimeMillis() / 1000 + &quot;&quot;);</div><div class="line">            params.put(&quot;notify_url&quot;, notify_url);</div><div class="line">            params.put(&quot;openid&quot;, openid);</div><div class="line"></div><div class="line">            String paysign = PaymentKit.createSign(params, paternerKey);</div><div class="line">            params.put(&quot;sign&quot;, paysign);</div><div class="line">            </div><div class="line">            String xmlResult = PaymentApi.pushOrder(params);</div><div class="line">            </div><div class="line">            System.out.println(&quot;prepay_xml&gt;&gt;&gt;&quot;+xmlResult);</div><div class="line">            </div><div class="line">            /**</div><div class="line">             * 发送信息给微信服务器</div><div class="line">             */</div><div class="line">            Map&lt;String, String&gt; payResult = PaymentKit.xmlToMap(xmlResult);</div><div class="line">            </div><div class="line">            String return_code = payResult.get(&quot;return_code&quot;);</div><div class="line">            String result_code = payResult.get(&quot;result_code&quot;);</div><div class="line">            </div><div class="line">            if (StrKit.notBlank(return_code) &amp;&amp; StrKit.notBlank(result_code) &amp;&amp; return_code.equalsIgnoreCase(&quot;SUCCESS&quot;)&amp;&amp;result_code.equalsIgnoreCase(&quot;SUCCESS&quot;)) &#123;</div><div class="line">                // 以下字段在return_code 和result_code都为SUCCESS的时候有返回</div><div class="line">                String prepay_id = payResult.get(&quot;prepay_id&quot;);</div><div class="line">                </div><div class="line">                Map&lt;String, String&gt; prepayParams = new HashMap&lt;String, String&gt;();</div><div class="line">                prepayParams.put(&quot;return_code&quot;, &quot;SUCCESS&quot;);</div><div class="line">                prepayParams.put(&quot;appId&quot;, appid);</div><div class="line">                prepayParams.put(&quot;mch_id&quot;, mch_id);</div><div class="line">                prepayParams.put(&quot;nonceStr&quot;, System.currentTimeMillis() + &quot;&quot;);</div><div class="line">                prepayParams.put(&quot;prepay_id&quot;, prepay_id);</div><div class="line">                String prepaySign = null;</div><div class="line">                if (sign.equals(packageSign)) &#123;</div><div class="line">                    prepayParams.put(&quot;result_code&quot;, &quot;SUCCESS&quot;);</div><div class="line">                &#125;else &#123;</div><div class="line">                    prepayParams.put(&quot;result_code&quot;, &quot;FAIL&quot;);</div><div class="line">                    prepayParams.put(&quot;err_code_des&quot;, &quot;订单失效&quot;);   //result_code为FAIL时，添加该键值对，value值是微信告诉客户的信息</div><div class="line">                &#125;</div><div class="line">                prepaySign = PaymentKit.createSign(prepayParams, paternerKey);</div><div class="line">                prepayParams.put(&quot;sign&quot;, prepaySign);</div><div class="line">                String xml = PaymentKit.toXml(prepayParams);</div><div class="line">                log.error(xml);</div><div class="line">                renderText(xml);</div><div class="line">            &#125;</div><div class="line">        &#125; catch (UnsupportedEncodingException e) &#123;</div><div class="line">            // TODO Auto-generated catch block</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; catch (IOException e) &#123;</div><div class="line">            // TODO Auto-generated catch block</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>我博客地址：<a href="http://www.cnblogs.com/zyw-205520" title="http://www.cnblogs.com/zyw-205520" target="_blank" rel="external">http://www.cnblogs.com/zyw-205520</a></p>
<p>原文地址：<a href="http://www.cnblogs.com/zyw-205520/p/5495115.html" title="http://www.cnblogs.com/zyw-205520/p/5495115.html" target="_blank" rel="external">http://www.cnblogs.com/zyw-205520/p/5495115.html</a></p>
]]></content>
    </entry>
    
  
  
</search>
